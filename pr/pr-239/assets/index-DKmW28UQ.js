import{a as o,d,nM as u,c as p,lC as c,sy as G,sB as t,cV as e,sC as a,H as h,c7 as g,_ as v,e as l,f as m}from"./index-CLkwb7Om.js";import{T as D}from"./editor.contribution._autosave-DuABP74G.js";import{M as S,a as N,f as s}from"./editor-3nwQrFvp.js";class y{constructor(){this.onWillDispose=e.None;this.hasMaximizedGroup=()=>false;this.windowId=g.vscodeWindowId;this.onDidLayout=e.None;this.onDidScroll=e.None;this.isReady=true;this.whenReady=Promise.resolve();this.whenRestored=Promise.resolve();this.hasRestorableState=false;this.centerLayout=t;this.isLayoutCentered=t;this.enforcePartOptions=t;this.onDidChangeActiveGroup=e.None;this.onDidAddGroup=e.None;this.onDidRemoveGroup=e.None;this.onDidMoveGroup=e.None;this.onDidActivateGroup=e.None;this.onDidChangeGroupIndex=e.None;this.onDidChangeGroupLocked=e.None;this.onDidChangeGroupMaximized=e.None;this.activeGroup=s;this.groups=[s];this.count=0;this.orientation=h.HORIZONTAL;this.getGroups=()=>[];this.getGroup=()=>void 0;this.activateGroup=t;this.getSize=t;this.setSize=t;this.arrangeGroups=t;this.toggleMaximizeGroup=t;this.toggleExpandGroup=t;this.applyLayout=t;this.getLayout=t;this.setGroupOrientation=t;this.findGroup=()=>void 0;this.addGroup=t;this.removeGroup=t;this.moveGroup=t;this.mergeGroup=t;this.mergeAllGroups=t;this.copyGroup=t;this.partOptions=a;this.onDidChangeEditorPartOptions=e.None;this.createEditorDropTarget=t}get contentDimension(){return t()}get sideGroup(){return t()}}class f{constructor(){this.getScopedInstantiationService=t;this.registerContextKeyProvider=t;this.saveWorkingSet=t;this.getWorkingSets=t;this.applyWorkingSet=t;this.deleteWorkingSet=t;this.onDidCreateAuxiliaryEditorPart=e.None;this.mainPart=new y;this.activePart=this.mainPart;this.parts=[this.mainPart];this.getPart=t;this.createAuxiliaryEditorPart=t;this.onDidChangeGroupMaximized=e.None;this.toggleMaximizeGroup=t;this.toggleExpandGroup=t;this.partOptions=a;this.createEditorDropTarget=t;this._serviceBrand=void 0;this.getLayout=t;this.onDidChangeActiveGroup=e.None;this.onDidAddGroup=e.None;this.onDidRemoveGroup=e.None;this.onDidMoveGroup=e.None;this.onDidActivateGroup=e.None;this.onDidLayout=e.None;this.onDidScroll=e.None;this.onDidChangeGroupIndex=e.None;this.onDidChangeGroupLocked=e.None;this.activeGroup=s;this.groups=[s];this.count=0;this.orientation=h.HORIZONTAL;this.isReady=false;this.whenReady=Promise.resolve();this.whenRestored=Promise.resolve();this.hasRestorableState=false;this.getGroups=()=>[];this.getGroup=()=>void 0;this.activateGroup=t;this.getSize=t;this.setSize=t;this.arrangeGroups=t;this.applyLayout=t;this.centerLayout=t;this.isLayoutCentered=()=>false;this.setGroupOrientation=t;this.findGroup=()=>void 0;this.addGroup=t;this.removeGroup=t;this.moveGroup=t;this.mergeGroup=t;this.mergeAllGroups=t;this.copyGroup=t;this.onDidChangeEditorPartOptions=e.None;this.enforcePartOptions=t}get contentDimension(){return t()}get sideGroup(){return t()}}let r=class O extends N{constructor(n){super(n.createInstance(f),true,n)}};r=v([l(0,m)],r);function x(i){return{[c.toString()]:new o(G,void 0,true),[p.toString()]:new o(S,[i,()=>false],true),[u.toString()]:new o(D,[],false),[d.toString()]:new o(r)}}export{S as MonacoEditorService,x as default};
