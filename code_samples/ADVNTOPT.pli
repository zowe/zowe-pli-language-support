  /* ADVENTURES                                                         00010000
                                                                        00020000
    CURRENT LIMITS:                                                     00030000
        9650 WORDS OF MESSAGE TEXT (LINES, LINSIZ).                     00040000
         750 TRAVEL OPTIONS (TRAVEL, TRVSIZ).                           00050000
         300 VOCABULARY WORDS (KTAB, ATAB, TABSIZ).                     00060000
         150 LOCATIONS (LTEXT, STEXT, KEY, COND, ABB, ATLOC, LOCSIZ).   00070000
         100 OBJECTS (PLAC, PLACE, FIXD, FIXED, LINK (TWICE), PTEXT,    00080000
                     PROP).                                             00090000
          35 "ACTION" VERBS (ACTSPK, VRBSIZ).                           00100000
         205 RANDOM MESSAGES (RTEXT, RTXSIZ).                           00110000
          12 DIFFERENT PLAYER CLASSIFICATIONS (CTEXT, CVAL, CLSMAX).    00120000
          20 HINTS, LESS 3 (HINTLC, HINTED, HINTS, HNTSIZ).             00130000
          35 MAGIC MESSAGES (MTEXT, MAGSIZ).                            00140000
                                                                        00150000
    THERE ARE ALSO LIMITS WHICH CANNOT BE EXCEEDED DUE TO THE           00160000
    STRUCTURE OF THE DATABASE.  (E.G., THE VOCABULARY USES              00170000
    N/1000 TO DETERMINE WORD TYPE, SO THERE CAN'T BE MORE               00180000
    THAN 1000 WORDS.) THESE UPPER LIMITS ARE:                           00190000
                                                                        00200000
         1000 NON-SYNONYMOUS VOCABULARY WORDS                           00210000
         300 LOCATIONS                                                  00220000
         100 OBJECTS                                                    00230000
  */                                                                    00240000
                                                                        00250000
1                                                                       00260000
 /* (SUBSCRIPTRANGE,STRINGRANGE):  */                                   00270000
 ADVENT: PROC OPTIONS (MAIN);                                           00280000
                                                                        00290000
       DCL  CAVES        FILE INPUT;                                    00300000
                                                                        00310000
       DCL TREAD ENTRY (CHAR(133),FIXED BIN(31),CHAR(133),              00320000
               FIXED BIN(31),FIXED BIN(31)) OPTIONS (ASM INTER);        00330000
                                                                        00340000
       DCL TWRITE ENTRY (CHAR(133),FIXED BIN(31),FIXED BIN(31))         00350000
               OPTIONS (ASM INTER);                                     00360000
                                                                        00370000
       DCL RANDU ENTRY (FIXED BIN(31),FIXED BIN(31),FLOAT BIN(31))      00380000
               OPTIONS (ASM INTER);                                     00390000
                                                                        00400000
       DCL ITIME ENTRY (FIXED BIN(31)) OPTIONS (ASM INTER);             00410000
                                                                        00420000
         DCL 1 TXTCOM STATIC,                                           00430000
               2 RTEXT(205) FIXED BIN(31),                              00440000
               2 LINES(9650) CHAR(5);                                   00450000
                                                                        00460000
         DCL 1 BLKCOM STATIC,                                           00470000
               2 BLKLIN BIT(1) INIT ('1'B);                             00480000
                                                                        00490000
         DCL 1 PTXCOM STATIC,                                           00500000
               2 PTEXT(100) FIXED BIN(31);                              00510000
                                                                        00520000
         DCL 1 VOCCOM STATIC,                                           00530000
               2 KTAB(300) FIXED BIN(31),                               00540000
               2 ATAB(300) CHAR(5),                                     00550000
               2 TABSIZ FIXED BIN(31) INIT(300);                        00560000
                                                                        00570000
         DCL 1 PLACOM STATIC,                                           00580000
               2 ATLOC(150) FIXED BIN(31),                              00590000
               2 LINK(200) FIXED BIN(31),                               00600000
               2 PLACE(100) FIXED BIN(31),                              00610000
               2 FIXED(100) FIXED BIN(31),                              00620000
               2 HOLDNG FIXED BIN(31);                                  00630000
                                                                        00640000
         DCL 1 ABBCOM STATIC,                                           00650000
               2 ABB(150) FIXED BIN(31);                                00660000
                                                                        00670000
                                                                        00680000
          DCL PICWORD PICTURE 'S9999' STATIC;                           00690000
                                                                        00700000
1  DCL 1  ADVARS STATIC,                                                00710000
       2  ABBNUM       FIXED BIN(31)  INIT(0),                          00720000
       2  IX           FIXED BIN(31)  INIT (65549),                     00730000
       2  IY           FIXED BIN(31)  INIT(0),                          00740000
       2  Y            FLOAT BIN(31) ,                                  00750000
       2  AXE          FIXED BIN(31)  INIT(0),                          00760000
       2  BACK         FIXED BIN(31)  INIT(0),                          00770000
       2  BATTER       FIXED BIN(31)  INIT(0),                          00780000
       2  BEAR         FIXED BIN(31)  INIT(0),                          00790000
       2  BIRD         FIXED BIN(31)  INIT(0),                          00800000
       2  BONUS        FIXED BIN(31)  INIT(0),                          00810000
       2  BOTTLE       FIXED BIN(31)  INIT(0),                          00820000
       2  CAGE         FIXED BIN(31)  INIT(0),                          00830000
       2  CAVE         FIXED BIN(31)  INIT(0),                          00840000
       2  CCODE        FIXED BIN(31)  INIT(0),                          00850000
                                                                        00860000
       2  CHAIN        FIXED BIN(31)  INIT(0),                          00870000
       2  CHASM        FIXED BIN(31)  INIT(0),                          00880000
       2  CHEST        FIXED BIN(31)  INIT(0),                          00890000
       2  CHLOC        FIXED BIN(31)  INIT(0),                          00900000
       2  CHLOC2       FIXED BIN(31)  INIT(0),                          00910000
       2  CLAM         FIXED BIN(31)  INIT(0),                          00920000
       2  CLOCK1       FIXED BIN(31)  INIT(0),                          00930000
       2  CLOCK2       FIXED BIN(31)  INIT(0),                          00940000
       2  CLSSES       FIXED BIN(31)  INIT(0),                          00950000
       2  CLSSIZ       FIXED BIN(31)  INIT(12),                         00960000
       2  COINS        FIXED BIN(31)  INIT(0),                          00970000
       2  DALTLC       FIXED BIN(31)  INIT(0),                          00980000
       2  DETAIL       FIXED BIN(31)  INIT(0),                          00990000
       2  DFLAG        FIXED BIN(31)  INIT(0),                          01000000
       2  DKILL        FIXED BIN(31)  INIT(0),                          01010000
       2  DOOR         FIXED BIN(31)  INIT(0),                          01020000
       2  DPRSSN       FIXED BIN(31)  INIT(0),                          01030000
       2  DRAGON       FIXED BIN(31)  INIT(0),                          01040000
       2  DTOTAL       FIXED BIN(31)  INIT(0),                          01050000
       2  DWARF        FIXED BIN(31)  INIT(0),                          01060000
       2  EGGS         FIXED BIN(31)  INIT(0),                          01070000
       2  EMRALD       FIXED BIN(31)  INIT(0),                          01080000
       2  ENTRNC       FIXED BIN(31)  INIT(0),                          01090000
       2  FIND         FIXED BIN(31)  INIT(0),                          01100000
       2  FISSUR       FIXED BIN(31)  INIT(0),                          01110000
       2  FOO          FIXED BIN(31)  INIT(0),                          01120000
       2  FOOBAR       FIXED BIN(31)  INIT(0),                          01130000
       2  FOOD         FIXED BIN(31)  INIT(0),                          01140000
       2  FROM         FIXED BIN(31)  INIT(0),                          01150000
       2  GRATE        FIXED BIN(31)  INIT(0),                          01160000
                                                                        01170000
       2  HINTLC(20)   FIXED BIN(31)  INIT((20)0),                      01180000
       2  HNTMAX       FIXED BIN(31)  INIT(0),                          01190000
                                                                        01200000
       2  INLEN        FIXED BIN(31)  INIT(0),                          01210000
       2  INSTR        CHAR(133) ,                                      01220000
       2  INVENT       FIXED BIN(31)  INIT(0),                          01230000
       2  IWEST        FIXED BIN(31)  INIT(0),                          01240000
                                                                        01250000
       2  JUNK1        CHAR(5) ,                                        01260000
       2  JUNK2        CHAR(5) ,                                        01270000
       2  JUNK3        CHAR(5) ,                                        01280000
                                                                        01290000
       2  KEYS         FIXED BIN(31)  INIT(0),                          01300000
       2  KK           FIXED BIN(31)  INIT(0),                          01310000
       2  KKWORD       CHAR(2) ,                                        01320000
       2  KNFLOC       FIXED BIN(31)  INIT(0),                          01330000
       2  KNIFE        FIXED BIN(31)  INIT(0),                          01340000
       2  KQ           FIXED BIN(31)  INIT(0),                          01350000
       2  K2           FIXED BIN(31)  INIT(0),                          01360000
                                                                        01370000
       2  LAMP         FIXED BIN(31)  INIT(0),                          01380000
       2  LIMIT        FIXED BIN(31)  INIT(0),                          01390000
       2  LINUSE       FIXED BIN(31)  INIT(0),                          01400000
       2  LL           FIXED BIN(31)  INIT(0),                          01410000
       2  LOC          FIXED BIN(31)  INIT(0),                          01420000
       2  LOCK         FIXED BIN(31)  INIT(0),                          01430000
       2  LOOK         FIXED BIN(31)  INIT(0),                          01440000
       2  M            FIXED BIN(31)  INIT(0),                          01450000
       2  MAGZIN       FIXED BIN(31)  INIT(0),                          01460000
       2  MAXDIE       FIXED BIN(31)  INIT(0),                          01470000
       2  MAXTRS       FIXED BIN(31)  INIT(0),                          01480000
       2  MESSAG       FIXED BIN(31)  INIT(0),                          01490000
       2  MIRROR       FIXED BIN(31)  INIT(0),                          01500000
       2  MXSCOR       FIXED BIN(31)  INIT(0),                          01510000
       2  NEWLOC       FIXED BIN(31)  INIT(0),                          01520000
       2  NUGGET       FIXED BIN(31)  INIT(0),                          01530000
       2  NULLX        FIXED BIN(31)  INIT(0),                          01540000
       2  NUMDIE       FIXED BIN(31)  INIT(0),                          01550000
                                                                        01560000
       2  OIL          FIXED BIN(31)  INIT(0),                          01570000
       2  OLDLC2       FIXED BIN(31)  INIT(0),                          01580000
       2  OLDLOC       FIXED BIN(31)  INIT(0),                          01590000
       2  OUTSTR       CHAR(133) VAR ,                                  01600000
       2  OYSTER       FIXED BIN(31)  INIT(0),                          01610000
       2  PEARL        FIXED BIN(31)  INIT(0),                          01620000
       2  PILLOW       FIXED BIN(31)  INIT(0),                          01630000
       2  PLANT        FIXED BIN(31)  INIT(0),                          01640000
       2  PLANT2       FIXED BIN(31)  INIT(0),                          01650000
       2  POSN         FIXED BIN(31)  INIT(0),                          01660000
       2  PYRAM        FIXED BIN(31)  INIT(0),                          01670000
       2  REPLY        CHAR(5) ,                                        01680000
       2  ROD          FIXED BIN(31)  INIT(0),                          01690000
       2  ROD2         FIXED BIN(31)  INIT(0),                          01700000
       2  RUG          FIXED BIN(31)  INIT(0),                          01710000
       2  SAY          FIXED BIN(31)  INIT(0),                          01720000
       2  SCORE        FIXED BIN(31)  INIT(0),                          01730000
       2  SECT         FIXED BIN(31)  INIT(0),                          01740000
       2  SNAKE        FIXED BIN(31)  INIT(0),                          01750000
       2  SPICES       FIXED BIN(31)  INIT(0),                          01760000
       2  SPK          FIXED BIN(31)  INIT(0),                          01770000
       2  STEPS        FIXED BIN(31)  INIT(0),                          01780000
       2  STICK        FIXED BIN(31)  INIT(0),                          01790000
       2  TABLET       FIXED BIN(31)  INIT(0),                          01800000
                                                                        01810000
       2  TALLY        FIXED BIN(31)  INIT(0),                          01820000
       2  TALLY2       FIXED BIN(31)  INIT(0),                          01830000
       2  TEMP         FIXED BIN(31)  INIT(0),                          01840000
       2  THROW        FIXED BIN(31)  INIT(0),                          01850000
       2  TRAVEL(750)  FIXED BIN(31)  INIT((750)0),                     01860000
       2  ATTACK       FIXED BIN(31)  INIT(0),                          01870000
       2  TRIDNT       FIXED BIN(31)  INIT(0),                          01880000
       2  TROLL        FIXED BIN(31)  INIT(0),                          01890000
       2  TROLL2       FIXED BIN(31)  INIT(0),                          01900000
       2  TRVS         FIXED BIN(31)  INIT(0),                          01910000
       2  TURNS        FIXED BIN(31)  INIT(0),                          01920000
       2  VASE         FIXED BIN(31)  INIT(0),                          01930000
       2  VEND         FIXED BIN(31)  INIT(0),                          01940000
       2  VERB         FIXED BIN(31)  INIT(0),                          01950000
       2  WATER        FIXED BIN(31)  INIT(0),                          01960000
       2  WD1          CHAR(5) ,                                        01970000
       2  WD1X         CHAR(5) ,                                        01980000
       2  WD2          CHAR(5) ,                                        01990000
       2  WD2X         CHAR(5) ,                                        02000000
       2  WORD         FIXED BIN(31)  INIT(0),                          02010000
       2  WORDEND      FIXED BIN(31)  INIT(0),                          02020000
       2  WORDSIZE     FIXED BIN(31)  INIT(0),                          02030000
       2  WORDSTRT     FIXED BIN(31)  INIT(0),                          02040000
       2  LTEXT(150)   FIXED BIN(31)  INIT((150)0),                     02050000
       2  STEXT(150)   FIXED BIN(31)  INIT((150)0),                     02060000
       2  KEY(150)     FIXED BIN(31)  INIT((150)0),                     02070000
       2  COND(150)    FIXED BIN(31)  INIT((150)0),                     02080000
       2  PLAC(100)    FIXED BIN(31)  INIT((100)0),                     02090000
       2  FIXD(100)    FIXED BIN(31)  INIT((100)0),                     02100000
       2  PROP(100)    FIXED BIN(31)  INIT((100)0),                     02110000
       2  ACTSPK(35)   FIXED BIN(31)  INIT((35)0),                      02120000
       2  CTEXT(12)    FIXED BIN(31)  INIT((12)0),                      02130000
       2  CVAL(12)     FIXED BIN(31)  INIT((12)0),                      02140000
       2  HINTS(20,4)  FIXED BIN(31)  INIT((80)0),                      02150000
       2  HINTED(20)   BIT(1) ,                                         02160000
       2  TK(20)       FIXED BIN(31) ,                                  02170000
       2  TKWORD(10)   CHAR(1) ,                                        02180000
       2  DLOC(6)      FIXED BIN(31) ,                                  02190000
       2  ODLOC(6)     FIXED BIN(31) ,                                  02200000
       2  DSEEN(6)     BIT(1) ,                                         02210000
       2  LINSIZ       FIXED BIN(31) INIT (9650) ,                      02220000
       2  TRVSIZ       FIXED BIN(31) INIT (750) ,                       02230000
       2  LOCSIZ       FIXED BIN(31) INIT (150) ,                       02240000
       2  VRBSIZ       FIXED BIN(31) INIT (35) ,                        02250000
       2  RTXSIZ       FIXED BIN(31) INIT (205) ,                       02260000
       2  CLSMAX       FIXED BIN(31) INIT (12) ,                        02270000
       2  HNTSIZ       FIXED BIN(31) INIT (20) ,                        02280000
       2  WZDARK       BIT(1) ,                                         02290000
       2  LMWARN       BIT(1) ,                                         02300000
       2  CLOSNG       BIT(1) ,                                         02310000
       2  PANIC        BIT(1) ,                                         02320000
       2  CLOSED       BIT(1) ,                                         02330000
       2  GAVEUP       BIT(1) ,                                         02340000
       2  SCORNG       BIT(1) ,                                         02350000
       2  LOGON        BIT(1) INIT ('0'B),                              02360000
       2  YEA          BIT(1) ;                                         02370000
                                                                        02380000
      DCL I            FIXED BIN(31)  INIT(0);                          02380001
      DCL J            FIXED BIN(31)  INIT(0);                          02380002
      DCL K            FIXED BIN(31)  INIT(0);                          02380003
      DCL L            FIXED BIN(31)  INIT(0);                          02380004
      DCL CH           FIXED BIN(31)  INIT(0);                          02380005
      DCL OBJ          FIXED BIN(31)  INIT(0);                          02380006
      DCL HINT         FIXED BIN(31)  INIT(0);                          02380007
      DCL WORD         FIXED BIN(31)  INIT(0);                          02380008
      DCL TABNDX       FIXED BIN(31)  INIT(0);                          02380009
                                                                        02380010
                                                                        02380011
                                                                        02380005
1/*                                                                     02390000
                                                                        02400000
    WZDARK SAYS WHETHER THE LOC HE'S LEAVING WAS DARK                   02410000
    LMWARN SAYS WHETHER HE'S BEEN WARNED ABOUT LAMP GOING DIM           02420000
    CLOSNG SAYS WHETHER ITS CLOSING TIME YET                            02430000
    PANIC SAYS WHETHER HE'S FOUND OUT HE'S TRAPPED IN THE               02440000
    CAVE                                                                02450000
    CLOSED SAYS WHETHER WE'RE ALL THE WAY CLOSED                        02460000
    GAVEUP SAYS WHETHER HE EXITED VIA "QUIT"                            02470000
    SCORNG INDICATES TO THE SCORE ROUTINE WHETHER WE'RE DOING           02480000
    A "SCORE" COMMAND                                                   02490000
    YEA IS RANDOM YES/NO REPLY                                          02500000
                                                                        02510000
  */                                                                    02520000
                                                                        02530000
1/*  DESCRIPTION OF THE DATABASE FORMAT                                 02540000
                                                                        02550000
                                                                        02560000
    THE DATA FILE CONTAINS SEVERAL SECTIONS.  EACH BEGINS               02570000
    WITH A LINE CONTAINING A NUMBER IDENTIFYING THE SECTION,            02580000
    AND ENDS WITH A LINE CONTAINING "-1".                               02590000
                                                                        02600000
    SECTION 1:  LONG FORM DESCRIPTIONS.  EACH LINE CONTAINS A           02610000
        LOCATION NUMBER, A TAB, AND A LINE OF TEXT.  THE SET            02620000
        OF (NECESSARILY ADJACENT) LINES WHOSE NUMBERS ARE X             02630000
        FORM THE LONG DESCRIPTION OF LOCATION X.                        02640000
    SECTION 2:  SHORT FORM DESCRIPTIONS.  SAME FORMAT AS LONG           02650000
        FORM.  NOT ALL PLACES HAVE SHORT DESCRIPTIONS.                  02660000
    SECTION 3:  TRAVEL TABLE.  EACH LINE CONTAINS A LOCATION            02670000
        NUMBER (X), A SECOND LOCATION NUMBER (Y), AND A LIST            02680000
        OF MOTION NUMBERS (SEE SECTION 4).  EACH MOTION                 02690000
        REPRESENTS A VERB WHICH WILL GO TO Y IF CURRENTLY AT            02700000
        X.  Y, IN TURN, IS INTERPRETED AS FOLLOWS.  LET                 02710000
        M=Y/1000, N=Y MOD 1000.                                         02720000
                IF N<=300       IT IS THE LOCATION TO GO TO.            02730000
                IF 300<N<=500   N-300 IS USED IN A COMPUTED             02740000
                                GOTO TO A SECTION OF SPECIAL            02750000
                                CODE.                                   02760000
                IF N>500        MESSAGE N-500 FROM SECTION 6            02770000
                                IS PRINTED, AND HE STAYS                02780000
                                WHEREVER HE IS.                         02790000
        MEANWHILE, M SPECIFIES THE CONDITIONS ON THE MOTION.            02800000
                IF M=0          IT'S UNCONDITIONAL.                     02810000
                IF 0<M<100      IT IS DONE WITH M%                      02820000
                                PROBABILITY.                            02830000
                IF M=100        UNCONDITIONAL, BUT FORBIDDEN            02840000
                                TO DWARVES.                             02850000
                IF 100<M<=200   HE MUST BE CARRYING OBJECT              02860000
                                M-100.                                  02870000
                IF 200<M<=300   MUST BE CARRYING OR IN SAME             02880000
                                ROOM                                    02890000
                                        AS M-200.                       02900000
                IF 300<M<=400   PROP(M MOD 100) MUST *NOT* BE           02910000
                                0.                                      02920000
                IF 400<M<=500   PROP(M MOD 100) MUST *NOT* BE           02930000
                                1.                                      02940000
                IF 500<M<=600   PROP(M MOD 100) MUST *NOT* BE           02950000
                                2, ETC.                                 02960000
        IF THE CONDITION (IF ANY) IS NOT MET, THEN THE NEXT             02970000
        *DIFFERENT* "DESTINATION" VALUE IS USED (UNLESS IT              02980000
        FAILS TO MEET *ITS* CONDITIONS, IN WHICH CASE THE               02990000
        NEXT IS FOUND, ETC.).  TYPICALLY, THE NEXT DEST WILL            03000000
        BE FOR ONE OF THE SAME VERBS, SO THAT ITS ONLY USE IS           03010000
        AS THE ALTERNATE DESTINATION FOR THOSE VERBS.  FOR              03020000
        INSTANCE:                                                       03030000
            15      110022  29      31      34      35      23      43  03040000
            15      14      29                                          03050000
        THIS SAYS THAT, FROM LOC 15, ANY OF THE VERBS 29, 31,           03060000
        ETC., WILL TAKE HIM TO 22 IF HE'S CARRYING OBJECT 10,           03070000
        AND OTHERWISE WILL GO TO 14.                                    03080000
                11      303008  49                                      03090000
                11      9       50                                      03100000
        THIS SAYS THAT, FROM 11, 49 TAKES HIM TO 8 UNLESS               03110000
        PROP(3)=0, IN WHICH CASE HE GOES TO 9.  VERB 50 TAKES           03120000
        HIM TO 9 REGARDLESS OF PROP(3).                                 03130000
    SECTION 4:  VOCABULARY.  EACH LINE CONTAINS A NUMBER (N),           03140000
        A TAB, AND A FIVE-LETTER WORD.  CALL M=N/1000.  IF              03150000
        M=0, THEN THE WORD IS A MOTION VERB FOR USE IN                  03160000
        TRAVELLING (SEE SECTION 3).  ELSE, IF M=1, THE WORD             03170000
        IS AN OBJECT.  ELSE, IF M=2, THE WORD IS AN ACTION              03180000
        VERB (SUCH AS "CARRY" OR "ATTACK").  ELSE, IF M=3,              03190000
        THE WORD IS A SPECIAL CASE VERB (SUCH AS "DIG") AND N           03200000
        MOD 1000 IS AN INDEX INTO SECTION 6.  OBJECTS FROM 50           03210000
        TO (CURRENTLY, ANYWAY) 79 ARE CONSIDERED TREASURES              03220000
        (FOR PIRATE, CLOSEOUT).                                         03230000
    SECTION 5:  OBJECT DESCRIPTIONS.  EACH LINE CONTAINS A              03240000
        NUMBER (N), A TAB, AND A MESSAGE.  IF N IS FROM 1 TO            03250000
        100, THE MESSAGE IS THE "INVENTORY" MESSAGE FOR                 03260000
        OBJECT N.  OTHERWISE, N SHOULD BE 000, 100, 200,                03270000
        ETC., AND THE MESSAGE SHOULD BE THE DESCRIPTION OF              03280000
        THE PRECEDING OBJECT WHEN ITS PROP VALUE IS N/100.              03290000
        THE N/100 IS USED ONLY TO DISTINGUISH MULTIPLE                  03300000
        MESSAGES FROM MULTI-LINE MESSAGES; THE PROP INFO                03310000
        ACTUALLY REQUIRES ALL MESSAGES FOR AN OBJECT TO BE              03320000
        PRESENT AND CONSECUTIVE.  PROPERTIES WHICH PRODUCE NO           03330000
        MESSAGE SHOULD BE GIVEN THE MESSAGE ">$<".                      03340000
    SECTION 6:  ARBITRARY MESSAGES.  SAME FORMAT AS SECTIONS            03350000
        1, 2, AND 5, EXCEPT THE NUMBERS BEAR NO RELATION TO             03360000
        ANYTHING (EXCEPT FOR SPECIAL VERBS IN SECTION 4).               03370000
    SECTION 7:  OBJECT LOCATIONS.  EACH LINE CONTAINS AN                03380000
        OBJECT NUMBER AND ITS INITIAL LOCATION (ZERO (OR                03390000
        OMITTED) IF NONE).  IF THE OBJECT IS IMMOVABLE, THE             03400000
        LOCATION IS FOLLOWED BY A "-1".  IF IT HAS TWO                  03410000
        LOCATIONS (E.G.  THE GRATE) THE FIRST LOCATION IS               03420000
        FOLLOWED WITH THE SECOND, AND THE OBJECT IS ASSUMED             03430000
        TO BE IMMOVABLE.                                                03440000
    SECTION 8:  ACTION DEFAULTS.  EACH LINE CONTAINS AN                 03450000
        "ACTION-VERB" NUMBER AND THE INDEX (IN SECTION 6) OF            03460000
        THE DEFAULT MESSAGE FOR THE VERB.                               03470000
    SECTION 9:  LIQUID ASSETS, ETC.  EACH LINE CONTAINS A               03480000
        NUMBER (N) AND UP TO 20 LOCATION NUMBERS.  BIT N                03490000
        (WHERE 0 IS THE UNITS BIT) IS SET IN COND(LOC) FOR              03500000
        EACH LOC GIVEN.  THE COND BITS CURRENTLY ASSIGNED               03510000
        ARE:                                                            03520000
                0       LIGHT                                           03530000
                1       IF BIT 2 IS ON:  ON FOR OIL, OFF FOR            03540000
                        WATER                                           03550000
                2       LIQUID ASSET, SEE BIT 1                         03560000
                3       PIRATE DOESN'T GO HERE UNLESS                   03570000
                        FOLLOWING PLAYER                                03580000
        OTHER BITS ARE USED TO INDICATE AREAS OF INTEREST TO            03590000
        "HINT" ROUTINES:                                                03600000
                4       TRYING TO GET INTO CAVE                         03610000
                5       TRYING TO CATCH BIRD                            03620000
                6       TRYING TO DEAL WITH SNAKE                       03630000
                7       LOST IN MAZE                                    03640000
                8       PONDERING DARK ROOM                             03650000
                9       AT WITT'S END                                   03660000
        COND(LOC) IS SET TO 2, OVERRIDING ALL OTHER BITS, IF            03670000
        LOC HAS FORCED MOTION.                                          03680000
    SECTION 10:  CLASS MESSAGES.  EACH LINE CONTAINS A NUMBER           03690000
        (N), A TAB, AND A MESSAGE DESCRIBING A CLASSIFICATION           03700000
        OF PLAYER.  THE SCORING SECTION SELECTS THE                     03710000
        APPROPRIATE MESSAGE, WHERE EACH MESSAGE IS CONSIDERED           03720000
        TO APPLY TO PLAYERS WHOSE SCORES ARE HIGHER THAN THE            03730000
        PREVIOUS N BUT NOT HIGHER THAN THIS N.  NOTE THAT               03740000
        THESE SCORES PROBABLY CHANGE WITH EVERY MODIFICATION            03750000
        (AND PARTICULARLY EXPANSION) OF THE PROGRAM.                    03760000
    SECTION 11:  HINTS.  EACH LINE CONTAINS A HINT NUMBER               03770000
        (CORRESPONDING TO A COND BIT, SEE SECTION 9), THE               03780000
        NUMBER OF TURNS HE MUST BE AT THE RIGHT LOC(S) BEFORE           03790000
        TRIGGERING THE HINT, THE POINTS DEDUCTED FOR TAKING             03800000
        THE HINT, THE MESSAGE NUMBER (SECTION 6) OF THE                 03810000
        QUESTION, AND THE MESSAGE NUMBER OF THE HINT.  THESE            03820000
        VALUES ARE STASHED IN THE "HINTS" ARRAY.  HNTMAX IS             03830000
        SET TO THE MAX HINT NUMBER (<= HNTSIZ).  NUMBERS 1-3            03840000
        ARE UNUSABLE SINCE COND BITS ARE OTHERWISE ASSIGNED,            03850000
        SO 2 IS USED TO REMEMBER IF HE'S READ THE CLUE IN THE           03860000
        REPOSITORY, AND 3 IS USED TO REMEMBER WHETHER HE                03870000
        ASKED FOR INSTRUCTIONS (GETS MORE TURNS, BUT LOSES              03880000
        POINTS).                                                        03890000
    SECTION 12:  MAGIC MESSAGES.  IDENTICAL TO SECTION 6                03900000
        EXCEPT PUT IN A SEPARATE SECTION FOR EASIER                     03910000
        REFERENCE.  MAGIC MESSAGES ARE USED BY THE STARTUP,             03920000
        MAINTENANCE MODE, AND RELATED ROUTINES.                         03930000
    SECTION 0:  END OF DATABASE.                                        03940000
                                                                        03950000
  */                                                                    03960000
                                                                        03970000
 ON ERROR BEGIN;                                                        03980000
    PUT SKIP DATA (ADVARS);                                             03990000
    END;                                                                04000000
                                                                        04010000
                                                                        04020000
1/*  READ THE DATABASE IF WE HAVE NOT YET DONE SO       */              04030000
                                                                        04040000
         PUT STRING (OUTSTR) EDIT ('Initializing...') (A);              04050000
         CALL LINEOUT;                                                  04060000
                                                                        04070000
 /*                                                                     04080000
    CLEAR OUT THE VARIOUS TEXT-POINTER ARRAYS.  ALL TEXT IS             04090000
    STORED IN ARRAY LINES; EACH LINE IS PRECEDED BY A WORD              04100000
    POINTING TO THE NEXT POINTER (I.E.  THE WORD FOLLOWING              04110000
    THE END OF THE LINE).  THE POINTER IS NEGATIVE IF THIS IS           04120000
    FIRST LINE OF A MESSAGE.  THE TEXT-POINTER ARRAYS CONTAIN           04130000
    INDICES OF POINTER-WORDS IN LINES.  STEXT(N) IS SHORT               04140000
    DESCRIPTION OF LOCATION N.  LTEXT(N) IS LONG DESCRIPTION.           04150000
    PTEXT(N) POINTS TO MESSAGE FOR PROP(N)=0.  SUCCESSIVE               04160000
    PROP MESSAGES ARE FOUND BY CHASING POINTERS.  RTEXT                 04170000
    CONTAINS SECTION 6'S STUFF.  CTEXT(N) POINTS TO A                   04180000
    PLAYER-CLASS MESSAGE.  MTEXT IS FOR SECTION 12.  WE ALSO            04190000
    CLEAR COND.  SEE DESCRIPTION OF SECTION 9 FOR DETAILS.              04200000
  */                                                                    04210000
                                                                        04220000
         DO I=1 TO 300;                                                 04230000
             IF I <= 100 THEN PTEXT(I)=0;                               04240000
             IF I <= RTXSIZ THEN RTEXT(I)=0;                            04250000
             IF I <= CLSMAX THEN CTEXT(I)=0;                            04260000
             IF I <= LOCSIZ THEN DO;                                    04270000
                 STEXT(I)=0;                                            04280000
                 LTEXT(I)=0;                                            04290000
                 COND(I)=0;                                             04300000
                 END;                                                   04310000
             END;                                                       04320000
                                                                        04330000
         KEY=0;                                                         04340000
         LINUSE=1;                                                      04350000
         TRVS=1;                                                        04360000
         CLSSES=1;                                                      04370000
                                                                        04380000
 /* START NEW DATA SECTION.  SECT IS THE SECTION NUMBER. */             04390000
                                                                        04400000
 L1002:  GET FILE (CAVES) EDIT (SECT) (COL(1),F(8));                    04410000
         OLDLOC=-1;                                                     04420000
         PUT STRING (OUTSTR) EDIT ('Reading section #',SECT)            04430000
               (A,F(2));                                                04440000
         CALL LINEOUT;                                                  04450000
         SELECT (SECT);                                                 04460000
            WHEN (00)  GO TO L1100;        /* (0) */                    04470000
            WHEN (01)  GO TO L1004;        /* (1) */                    04480000
            WHEN (02)  GO TO L1004;        /* (2) */                    04490000
            WHEN (03)  GO TO L1030;        /* (3) */                    04500000
            WHEN (04)  GO TO L1040;        /* (4) */                    04510000
            WHEN (05)  GO TO L1004;        /* (5) */                    04520000
            WHEN (06)  GO TO L1004;        /* (6) */                    04530000
            WHEN (07)  GO TO L1050;        /* (7) */                    04540000
            WHEN (08)  GO TO L1060;        /* (8) */                    04550000
            WHEN (09)  GO TO L1070;        /* (9) */                    04560000
            WHEN (10)  GO TO L1004;       /* (10) */                    04570000
            WHEN (11)  GO TO L1080;       /* (11) */                    04580000
            END;                                                        04590000
         CALL BUG(9);                                                   04600000
                                                                        04610000
 /* SECTIONS 1, 2, 5, 6, 10.  READ MESSAGES AND SET UP POINTERS. */     04620000
                                                                        04630000
 L1004:  GET FILE (CAVES) EDIT                                          04640000
             (LOC,(LINES(J) DO J=LINUSE+1 TO LINUSE+14),KKWORD)         04650000
             (COL(1),F(8),14 A(5),A(2));                                04660000
         IF KKWORD ^= ' ' THEN CALL BUG(0);                             04670000
         IF LOC = -1 THEN GOTO L1002;                                   04680000
         DO K=1 TO 14;                                                  04690000
             KK=LINUSE+15-K;                                            04700000
             IF LINES(KK) ^= ' ' THEN GOTO L1007;                       04710000
             END;                                                       04720000
         CALL BUG(1);                                                   04730000
 L1007:  PICWORD=KK+1;                                                  04740000
         LINES(LINUSE)=PICWORD;                                         04750000
         IF LOC = OLDLOC THEN GOTO L1020;                               04760000
         PICWORD=-LINES(LINUSE);                                        04770000
         LINES(LINUSE)=PICWORD;                                         04780000
         IF SECT = 10 THEN GOTO L1012;                                  04790000
         IF SECT = 6 THEN GOTO L1011;                                   04800000
         IF SECT = 5 THEN GOTO L1010;                                   04810000
         IF SECT = 1 THEN GOTO L1008;                                   04820000
                                                                        04830000
         STEXT(LOC)=LINUSE;                                             04840000
         GOTO L1020;                                                    04850000
                                                                        04860000
 L1008:  LTEXT(LOC)=LINUSE;                                             04870000
         GOTO L1020;                                                    04880000
                                                                        04890000
 L1010:  IF LOC > 0 & LOC <= 100 THEN PTEXT(LOC)=LINUSE;                04900000
         GOTO L1020;                                                    04910000
                                                                        04920000
 L1011:  IF LOC > RTXSIZ THEN CALL BUG(6);                              04930000
         RTEXT(LOC)=LINUSE;                                             04940000
         GOTO L1020;                                                    04950000
                                                                        04960000
 L1012:  CTEXT(CLSSES)=LINUSE;                                          04970000
         CVAL(CLSSES)=LOC;                                              04980000
         CLSSES=CLSSES+1;                                               04990000
                                                                        05000000
 L1020:  LINUSE=KK+1;                                                   05010000
         LINES(LINUSE)='-1   ';                                         05020000
         OLDLOC=LOC;                                                    05030000
         IF LINUSE+14 > LINSIZ THEN CALL BUG(2);                        05040000
         GOTO L1004;                                                    05050000
                                                                        05060000
1/*                                                                     05070000
    THE STUFF FOR SECTION 3 IS ENCODED HERE.  EACH                      05080000
    "FROM-LOCATION" GETS A CONTIGUOUS SECTION OF THE "TRAVEL"           05090000
    ARRAY.  EACH ENTRY IN TRAVEL IS NEWLOC*1000 + KEYWORD               05100000
    (FROM SECTION 4, MOTION VERBS), AND IS NEGATED IF THIS IS           05110000
    THE LAST ENTRY FOR THIS LOCATION.  KEY(N) IS THE INDEX IN           05120000
    TRAVEL OF THE FIRST OPTION AT LOCATION N.                           05130000
 */                                                                     05140000
                                                                        05150000
 L1030:  GET FILE (CAVES) EDIT                                          05160000
              (LOC,NEWLOC,(TK(I) DO I=1 TO 8)) (COL(1),10 F(8));        05170000
         IF LOC = -1 THEN GOTO L1002;                                   05180000
         IF KEY(LOC) ^= 0 THEN GOTO L1033;                              05190000
         KEY(LOC)=TRVS;                                                 05200000
         GOTO L1035;                                                    05210000
 L1033:  TRAVEL(TRVS-1)=-TRAVEL(TRVS-1);                                05220000
 L1035:  DO L=1 TO 8;                                                   05230000
             IF TK(L) = 0 THEN GOTO L1039;                              05240000
             TRAVEL(TRVS)=NEWLOC*1000+TK(L);                            05250000
             TRVS=TRVS+1;                                               05260000
             IF TRVS = TRVSIZ THEN CALL BUG(3);                         05270000
             END;                                                       05280000
                                                                        05290000
 L1039:  TRAVEL(TRVS-1)=-TRAVEL(TRVS-1);                                05300000
         GOTO L1030;                                                    05310000
                                                                        05320000
 /*                                                                     05330000
    HERE WE READ IN THE VOCABULARY.  KTAB(N) IS THE WORD                05340000
    NUMBER, ATAB(N) IS THE CORRESPONDING WORD.  THE -1 AT THE           05350000
    END OF SECTION 4 IS LEFT IN KTAB AS AN END-MARKER.  THE             05360000
    WORDS ARE GIVEN A MINIMAL HASH TO MAKE READING THE                  05370000
    CORE-IMAGE HARDER.  NOTE THAT '/7-08' HAD BETTER NOT BE             05380000
    IN THE LIST, SINCE IT COULD HASH TO -1.  (HASHING REMOVED           05390000
    IN PL/1 VERSION..BRD)                                               05400000
 */                                                                     05410000
                                                                        05420000
 L1040:  DO TABNDX=1 TO TABSIZ;                                         05430000
 L1043:  GET FILE (CAVES) EDIT                                          05440000
               (KTAB(TABNDX),ATAB(TABNDX)) (COL(1),F(8),A (5));         05450000
         IF KTAB(TABNDX) = -1 THEN GOTO L1002;                          05460000
         END;                                                           05470000
         CALL BUG(4);                                                   05480000
                                                                        05490000
 /*                                                                     05500000
    READ IN THE INITIAL LOCATIONS FOR EACH OBJECT.  ALSO THE            05510000
    IMMOVABILITY INFO.  PLAC CONTAINS INITIAL LOCATIONS OF              05520000
    OBJECTS.  FIXD IS -1 FOR IMMOVABLE OBJECTS (INCLUDING THE           05530000
    SNAKE), OR = SECOND LOC FOR TWO-PLACED OBJECTS.                     05540000
 */                                                                     05550000
                                                                        05560000
 L1050:  GET FILE (CAVES) EDIT (OBJ,J,K) (COL(1),3 F(8));               05570000
         IF OBJ = -1 THEN GOTO L1002;                                   05580000
         PLAC(OBJ)=J;                                                   05590000
         FIXD(OBJ)=K;                                                   05600000
         GOTO L1050;                                                    05610000
                                                                        05620000
 /* READ DEFAULT MESSAGE NUMBERS FOR ACTION VERBS, STORE IN             05630000
    ACTSPK.  */                                                         05640000
                                                                        05650000
 L1060:  GET FILE (CAVES) EDIT (VERB,J) (COL(1),2 F(8));                05660000
         IF VERB = -1 THEN GOTO L1002;                                  05670000
         ACTSPK(VERB)=J;                                                05680000
         GOTO L1060;                                                    05690000
                                                                        05700000
 /* READ INFO ABOUT AVAILABLE LIQUIDS AND OTHER CONDITIONS,             05710000
    STORE IN COND.  */                                                  05720000
                                                                        05730000
 L1070:  GET FILE (CAVES) EDIT (K,(TK(I) DO I=1 TO 9))                  05740000
              (COL(1),10 F(8));                                         05750000
         IF K = -1 THEN GOTO L1002;                                     05760000
         DO I=1 TO 9;                                                   05770000
             LOC=TK(I);                                                 05780000
             IF LOC = 0 THEN GOTO L1070;                                05790000
             IF BITSET(LOC,K) THEN CALL BUG(8);                         05800000
             COND(LOC)=COND(LOC)+2**K;                                  05810000
             END;                                                       05820000
         GOTO L1070;                                                    05830000
                                                                        05840000
 /* READ DATA FOR HINTS. */                                             05850000
                                                                        05860000
 L1080:  HNTMAX=0;                                                      05870000
 L1081:  GET FILE (CAVES) EDIT (K,(TK(I) DO I=1 TO 4))                  05880000
              (COL(1),5 F(8));                                          05890000
         IF K = -1 THEN GOTO L1002;                                     05900000
         IF K = 0 THEN GOTO L1081;                                      05910000
         IF K < 0 | K > HNTSIZ THEN CALL BUG(7);                        05920000
         DO I=1 TO 4;                                                   05930000
             HINTS(K,I)=TK(I);                                          05940000
             END;                                                       05950000
         HNTMAX=MAX(HNTMAX,K);                                          05960000
         GOTO L1081;                                                    05970000
1/*                                                                     05980000
    FINISH CONSTRUCTING INTERNAL DATA FORMAT                            05990000
                                                                        06000000
    HAVING READ IN THE DATABASE, CERTAIN THINGS ARE NOW                 06010000
    CONSTRUCTED.  PROPS ARE SET TO ZERO.  WE FINISH SETTING             06020000
    UP COND BY CHECKING FOR FORCED-MOTION TRAVEL ENTRIES.               06030000
    THE PLAC AND FIXD ARRAYS ARE USED TO SET UP ATLOC(N) AS             06040000
    THE FIRST OBJECT AT LOCATION N, AND LINK(OBJ) AS THE NEXT           06050000
    OBJECT AT THE SAME LOCATION AS OBJ.  (OBJ>100 INDICATES             06060000
    THAT FIXED(OBJ-100)=LOC; LINK(OBJ) IS STILL THE CORRECT             06070000
    LINK TO USE.) ABB IS ZEROED; IT CONTROLS WHETHER THE                06080000
    ABBREVIATED DESCRIPTION IS PRINTED.  COUNTS MOD 5 UNLESS            06090000
    "LOOK" IS USED.                                                     06100000
 */                                                                     06110000
                                                                        06120000
 L1100:  DO I=1 TO 100;                                                 06130000
             PLACE(I)=0;                                                06140000
             PROP(I)=0;                                                 06150000
             LINK(I)=0;                                                 06160000
             LINK(I+100)=0;                                             06170000
             END;                                                       06180000
                                                                        06190000
         DO I=1 TO LOCSIZ;                                              06200000
         ABB(I)=0;                                                      06210000
         IF LTEXT(I) = 0 | KEY(I) = 0 THEN GOTO L1102;                  06220000
         K=KEY(I);                                                      06230000
         IF MOD(ABS(TRAVEL(K)),1000) = 1 THEN COND(I)=2;                06240000
 L1102:  ATLOC(I)=0;                                                    06250000
         END;                                                           06260000
                                                                        06270000
 /*                                                                     06280000
    SET UP THE ATLOC AND LINK ARRAYS AS DESCRIBED ABOVE.                06290000
    WE'LL USE THE DROP SUBROUTINE, WHICH PREFACES NEW OBJECTS           06300000
    ON THE LISTS.  SINCE WE WANT THINGS IN THE OTHER ORDER,             06310000
    WE'LL RUN THE LOOP BACKWARDS.  IF THE OBJECT IS IN TWO              06320000
    LOCS, WE DROP IT TWICE.  THIS ALSO SETS UP "PLACE" AND              06330000
    "FIXED" AS COPIES OF "PLAC" AND "FIXD".  ALSO, SINCE                06340000
    TWO-PLACED OBJECTS ARE TYPICALLY BEST DESCRIBED LAST,               06350000
    WE'LL DROP THEM FIRST.                                              06360000
 */                                                                     06370000
                                                                        06380000
         DO I=1 TO 100;                                                 06390000
             K=101-I;                                                   06400000
             IF FIXD(K) > 0 THEN DO;                                    06410000
                 CALL DROP(K+100,FIXD(K));                              06420000
                 CALL DROP(K,PLAC(K));                                  06430000
                 END;                                                   06440000
             END;                                                       06450000
                                                                        06460000
         DO I=1 TO 100;                                                 06470000
             K=101-I;                                                   06480000
             FIXED(K)=FIXD(K);                                          06490000
             IF PLAC(K) ^= 0 & FIXD(K) <= 0 THEN CALL DROP(K,PLAC(K));  06500000
             END;                                                       06510000
                                                                        06520000
 /*                                                                     06530000
    TREASURES, AS NOTED EARLIER, ARE OBJECTS 50 THROUGH                 06540000
    MAXTRS (CURRENTLY 79).  THEIR PROPS ARE INITIALLY -1, AND           06550000
    ARE SET TO 0 THE FIRST TIME THEY ARE DESCRIBED.  TALLY              06560000
    KEEPS TRACK OF HOW MANY ARE NOT YET FOUND, SO WE KNOW               06570000
    WHEN TO CLOSE THE CAVE.  TALLY2 COUNTS HOW MANY CAN NEVER           06580000
    BE FOUND (E.G.  IF LOST BIRD OR BRIDGE).                            06590000
 */                                                                     06600000
                                                                        06610000
         MAXTRS=79;                                                     06620000
         TALLY=0;                                                       06630000
         TALLY2=0;                                                      06640000
         DO I=50 TO MAXTRS;                                             06650000
             IF PTEXT(I) ^= 0 THEN PROP(I)=-1;                          06660000
             TALLY=TALLY-PROP(I);                                       06670000
             END;                                                       06680000
 /*                                                                     06690000
    CLEAR THE HINT STUFF.  HINTLC(I) IS HOW LONG HE'S BEEN AT           06700000
    LOC WITH COND BIT I.  HINTED(I) IS TRUE IFF HINT I HAS              06710000
    BEEN USED.                                                          06720000
 */                                                                     06730000
                                                                        06740000
         DO  I=1 TO HNTMAX;                                             06750000
             HINTED(I)='0'B;                                            06760000
             HINTLC(I)=0;                                               06770000
             END;                                                       06780000
                                                                        06790000
 /* DEFINE SOME HANDY MNEMONICS.  THESE CORRESPOND TO OBJECT            06800000
    NUMBERS.  */                                                        06810000
                                                                        06820000
         KEYS=VOCAB('KEYS',1);                                          06830000
         LAMP=VOCAB('LAMP',1);                                          06840000
         GRATE=VOCAB('GRATE',1);                                        06850000
         CAGE=VOCAB('CAGE',1);                                          06860000
         ROD=VOCAB('ROD',1);                                            06870000
         ROD2=ROD+1;                                                    06880000
         STEPS=VOCAB('STEPS',1);                                        06890000
         BIRD=VOCAB('BIRD',1);                                          06900000
         DOOR=VOCAB('DOOR',1);                                          06910000
         PILLOW=VOCAB('PILLO',1);                                       06920000
         SNAKE=VOCAB('SNAKE',1);                                        06930000
         FISSUR=VOCAB('FISSU',1);                                       06940000
         TABLET=VOCAB('TABLE',1);                                       06950000
         CLAM=VOCAB('CLAM',1);                                          06960000
         OYSTER=VOCAB('OYSTE',1);                                       06970000
         MAGZIN=VOCAB('MAGAZ',1);                                       06980000
         DWARF=VOCAB('DWARF',1);                                        06990000
         KNIFE=VOCAB('KNIFE',1);                                        07000000
         FOOD=VOCAB('FOOD',1);                                          07010000
         BOTTLE=VOCAB('BOTTL',1);                                       07020000
         WATER=VOCAB('WATER',1);                                        07030000
         OIL=VOCAB('OIL',1);                                            07040000
         PLANT=VOCAB('PLANT',1);                                        07050000
         PLANT2=PLANT+1;                                                07060000
         AXE=VOCAB('AXE',1);                                            07070000
         MIRROR=VOCAB('MIRRO',1);                                       07080000
         DRAGON=VOCAB('DRAGO',1);                                       07090000
         CHASM=VOCAB('CHASM',1);                                        07100000
         TROLL=VOCAB('TROLL',1);                                        07110000
         TROLL2=TROLL+1;                                                07120000
         BEAR=VOCAB('BEAR',1);                                          07130000
         MESSAG=VOCAB('MESSA',1);                                       07140000
         VEND=VOCAB('VENDI',1);                                         07150000
         BATTER=VOCAB('BATTE',1);                                       07160000
                                                                        07170000
 /* OBJECTS FROM 50 THROUGH WHATEVER ARE TREASURES.  HERE ARE           07180000
    A FEW.  */                                                          07190000
                                                                        07200000
         NUGGET=VOCAB('GOLD',1);                                        07210000
         COINS=VOCAB('COINS',1);                                        07220000
         CHEST=VOCAB('CHEST',1);                                        07230000
         EGGS=VOCAB('EGGS',1);                                          07240000
         TRIDNT=VOCAB('TRIDE',1);                                       07250000
         VASE=VOCAB('VASE',1);                                          07260000
         EMRALD=VOCAB('EMERA',1);                                       07270000
         PYRAM=VOCAB('PYRAM',1);                                        07280000
         PEARL=VOCAB('PEARL',1);                                        07290000
         RUG=VOCAB('RUG',1);                                            07300000
         CHAIN=VOCAB('CHAIN',1);                                        07310000
                                                                        07320000
 /* THESE ARE MOTION-VERB NUMBERS. */                                   07330000
                                                                        07340000
         BACK=VOCAB('BACK',0);                                          07350000
         LOOK=VOCAB('LOOK',0);                                          07360000
         CAVE=VOCAB('CAVE',0);                                          07370000
         NULLX=VOCAB('NULL',0);                                         07380000
         ENTRNC=VOCAB('ENTRA',0);                                       07390000
         DPRSSN=VOCAB('DEPRE',0);                                       07400000
                                                                        07410000
 /* AND SOME ACTION VERBS. */                                           07420000
                                                                        07430000
         SAY=VOCAB('SAY',2);                                            07440000
         LOCK=VOCAB('LOCK',2);                                          07450000
         THROW=VOCAB('THROW',2);                                        07460000
         FIND=VOCAB('FIND',2);                                          07470000
         INVENT=VOCAB('INVEN',2);                                       07480000
                                                                        07490000
 /*                                                                     07500000
    INITIALIZE THE DWARVES.  DLOC IS LOC OF DWARVES,                    07510000
    HARD-WIRED IN.  ODLOC IS PRIOR LOC OF EACH DWARF,                   07520000
    INITIALLY GARBAGE.  DALTLC IS ALTERNATE INITIAL LOC FOR             07530000
    DWARF, IN CASE ONE OF THEM STARTS OUT ON TOP OF THE                 07540000
    ADVENTURER.  (NO 2 OF THE 5 INITIAL LOCS ARE ADJACENT.)             07550000
    DSEEN IS TRUE IF DWARF HAS SEEN HIM.  DFLAG CONTROLS THE            07560000
    LEVEL OF ACTIVATION OF ALL THIS:                                    07570000
         0       NO DWARF STUFF YET (WAIT UNTIL REACHES HALL            07580000
                 OF MISTS)                                              07590000
         1       REACHED HALL OF MISTS, BUT HASN'T MET FIRST DWARF      07600000
         2       MET FIRST DWARF, OTHERS START MOVING, NO               07610000
                 KNIVES THROWN YET                                      07620000
         3       A KNIFE HAS BEEN THROWN (FIRST SET ALWAYS              07630000
                 MISSES)                                                07640000
         3+      DWARVES ARE MAD (INCREASES THEIR ACCURACY)             07650000
    SIXTH DWARF IS SPECIAL (THE PIRATE).  HE ALWAYS STARTS AT           07660000
    HIS CHEST'S EVENTUAL LOCATION INSIDE THE MAZE.  THIS LOC            07670000
    IS SAVED IN CHLOC FOR REF.  THE DEAD END IN THE OTHER               07680000
    MAZE HAS ITS LOC STORED IN CHLOC2.                                  07690000
 */                                                                     07700000
                                                                        07710000
         CHLOC=114;                                                     07720000
         CHLOC2=140;                                                    07730000
         DO I=1 TO 6;                                                   07740000
             DSEEN(I)='0'B;                                             07750000
             END;                                                       07760000
         DFLAG=0;                                                       07770000
         DLOC(1)=19;                                                    07780000
         DLOC(2)=27;                                                    07790000
         DLOC(3)=33;                                                    07800000
         DLOC(4)=44;                                                    07810000
         DLOC(5)=64;                                                    07820000
         DLOC(6)=CHLOC;                                                 07830000
         DALTLC=18;                                                     07840000
                                                                        07850000
1/*                                                                     07860000
    OTHER RANDOM FLAGS AND COUNTERS, AS FOLLOWS:                        07870000
         TURNS   TALLIES HOW MANY COMMANDS HE'S GIVEN                   07880000
                 (IGNORES YES/NO)                                       07890000
         LIMIT   LIFETIME OF LAMP (NOT SET HERE)                        07900000
         IWEST   HOW MANY TIMES HE'S SAID "WEST" INSTEAD OF             07910000
                 "W"                                                    07920000
         KNFLOC  0 IF NO KNIFE HERE, LOC IF KNIFE HERE, -1              07930000
                 AFTER CAVEAT                                           07940000
         DETAIL  HOW OFTEN WE'VE SAID "NOT ALLOWED TO GIVE              07950000
                 MORE DETAIL"                                           07960000
         ABBNUM  HOW OFTEN WE SHOULD PRINT NON-ABBREVIATED              07970000
                 DESCRIPTIONS                                           07980000
         MAXDIE  NUMBER OF REINCARNATION MESSAGES AVAILABLE             07990000
                 (UP TO 5)                                              08000000
         NUMDIE  NUMBER OF TIMES KILLED SO FAR                          08010000
         HOLDNG  NUMBER OF OBJECTS BEING CARRIED                        08020000
         DKILL   NUMBER OF DWARVES KILLED (UNUSED IN SCORING,           08030000
                 NEEDED FOR MSG)                                        08040000
         FOOBAR  CURRENT PROGRESS IN SAYING "FEE FIE FOE                08050000
                 FOO".                                                  08060000
         BONUS   USED TO DETERMINE AMOUNT OF BONUS IF HE                08070000
                 REACHES CLOSING                                        08080000
         CLOCK1  NUMBER OF TURNS FROM FINDING LAST TREASURE             08090000
                 TILL CLOSING                                           08100000
         CLOCK2  NUMBER OF TURNS FROM FIRST WARNING TILL                08110000
                 BLINDING FLASH                                         08120000
         LOGICALS WERE EXPLAINED EARLIER                                08130000
 */                                                                     08140000
                                                                        08150000
         TURNS=0;                                                       08160000
         LMWARN='0'B;                                                   08170000
         IWEST=0;                                                       08180000
         KNFLOC=0;                                                      08190000
         DETAIL=0;                                                      08200000
         ABBNUM=5;                                                      08210000
         DO I=0 TO 4;                                                   08220000
             IF RTEXT(2*I+81) ^= 0 THEN MAXDIE=I+1;                     08230000
             END;                                                       08240000
         NUMDIE=0;                                                      08250000
         HOLDNG=0;                                                      08260000
         DKILL=0;                                                       08270000
         FOOBAR=0;                                                      08280000
         BONUS=0;                                                       08290000
         CLOCK1=30;                                                     08300000
         CLOCK2=50;                                                     08310000
         CLOSNG='0'B;                                                   08320000
         PANIC='0'B;                                                    08330000
         CLOSED='0'B;                                                   08340000
         GAVEUP='0'B;                                                   08350000
         SCORNG='0'B;                                                   08360000
                                                                        08370000
1/* REPORT ON AMOUNT OF ARRAYS ACTUALLY USED, TO PERMIT                 08380000
    REDUCTIONS. */                                                      08390000
                                                                        08400000
                                                                        08410000
         DO K=1 TO LOCSIZ;                                              08420000
             KK=LOCSIZ+1-K;                                             08430000
             IF LTEXT(KK) ^= 0 THEN GOTO L1997;                         08440000
             END;                                                       08450000
                                                                        08460000
         OBJ=0;                                                         08470000
 L1997:  DO K=1 TO 100;                                                 08480000
             IF PTEXT(K) ^= 0 THEN OBJ=OBJ+1;                           08490000
             END;                                                       08500000
                                                                        08510000
         DO K=1 TO TABNDX;                                              08520000
             IF KTAB(K)/1000 = 2 THEN VERB=KTAB(K)-2000;                08530000
             END;                                                       08540000
                                                                        08550000
         DO K=1 TO RTXSIZ;                                              08560000
             J=RTXSIZ+1-K;                                              08570000
             IF RTEXT(J) ^= 0 THEN GOTO L1991;                          08580000
             END;                                                       08590000
                                                                        08600000
 L1991:  K=100;                                                         08610000
         CALL LINESKP;                                                  08620000
         PUT STRING (OUTSTR) EDIT (LINUSE,' of ',LINSIZ,                08630000
             ' words of messages') (F(6),A,F(6),A);                     08640000
         CALL LINEOUT;                                                  08650000
         PUT STRING (OUTSTR) EDIT (TRVS,' of ',TRVSIZ,                  08660000
             ' travel options') (F(6),A,F(6),A);                        08670000
         CALL LINEOUT;                                                  08680000
         PUT STRING (OUTSTR) EDIT (TABNDX,' of ',TABSIZ,                08690000
             ' vocabulary words') (F(6),A,F(6),A);                      08700000
         CALL LINEOUT;                                                  08710000
         PUT STRING (OUTSTR) EDIT (KK,' of ',LOCSIZ,                    08720000
             ' locations') (F(6),A,F(6),A);                             08730000
         CALL LINEOUT;                                                  08740000
         PUT STRING (OUTSTR) EDIT (OBJ,' of ',K,                        08750000
             ' objects') (F(6),A,F(6),A);                               08760000
         CALL LINEOUT;                                                  08770000
         PUT STRING (OUTSTR) EDIT (VERB,' of ',VRBSIZ,                  08780000
             ' action verbs') (F(6),A,F(6),A);                          08790000
         CALL LINEOUT;                                                  08800000
         PUT STRING (OUTSTR) EDIT (J,' of ',RTXSIZ,                     08810000
             ' rtext messages') (F(6),A,F(6),A);                        08820000
         CALL LINEOUT;                                                  08830000
         PUT STRING (OUTSTR) EDIT (CLSSES,' of ',CLSSIZ,                08840000
             ' class messages') (F(6),A,F(6),A);                        08850000
         CALL LINEOUT;                                                  08860000
         PUT STRING (OUTSTR) EDIT (HNTMAX,' of ',HNTSIZ,                08870000
             ' hints') (F(6),A,F(6),A);                                 08880000
         CALL LINEOUT;                                                  08890000
         CALL LINESKP;                                                  08900000
                                                                        08910000
                                                                        08920000
 /*  FINALLY, SINCE WE'RE CLEARLY SETTING THINGS UP FOR THE             08930000
    FIRST TIME...  */                                                   08940000
                                                                        08950000
         PUT STRING (OUTSTR) EDIT ('Done!') (A);                        08960000
         CALL LINEOUT;                                                  08970000
         CALL LINESKP;                                                  08980000
         CALL LINESKP;                                                  08990000
                                                                        09000000
1/*  START-UP, DWARF STUFF */                                           09010000
                                                                        09020000
 L1:     CALL ITIME(I);                                                 09030000
         DO J=1 TO I;                                                   09040000
            CALL RAN(1);                                                09050000
            END;                                                        09060000
         I=RAN(1);                                                      09070000
         HINTED(3)=YES(65,1,0);                                         09080000
         LOC,NEWLOC=1;                                                  09090000
         LIMIT=330;                                                     09100000
         IF HINTED(3) THEN LIMIT=1000;                                  09110000
                                                                        09120000
 /*  CAN'T LEAVE CAVE ONCE IT'S CLOSING (EXCEPT BY MAIN OFFICE). */     09130000
                                                                        09140000
 L2:     IF NEWLOC >= 9 | NEWLOC = 0 |  ^ CLOSNG THEN GOTO L71;         09150000
         CALL RSPEAK(130);                                              09160000
         NEWLOC=LOC;                                                    09170000
         IF  ^ PANIC THEN CLOCK2=15;                                    09180000
         PANIC='1'B;                                                    09190000
                                                                        09200000
 /*                                                                     09210000
    SEE IF A DWARF HAS SEEN HIM AND HAS COME FROM WHERE HE              09220000
    WANTS TO GO.  IF SO, THE DWARF'S BLOCKING HIS WAY.  IF              09230000
    COMING FROM PLACE FORBIDDEN TO PIRATE (DWARVES ROOTED IN            09240000
    PLACE) LET HIM GET OUT (AND ATTACKED).                              09250000
 */                                                                     09260000
                                                                        09270000
 L71:    IF NEWLOC = LOC | FORCED(LOC) | BITSET(LOC,3) THEN GOTO L74;   09280000
         DO I=1 TO 5;                                                   09290000
             IF ^ (ODLOC(I) ^= NEWLOC |  ^ DSEEN(I)) THEN DO;           09300000
                 NEWLOC=LOC;                                            09310000
                 CALL RSPEAK(2);                                        09320000
                 GOTO L74;                                              09330000
                 END;                                                   09340000
             END;                                                       09350000
 L74:    LOC=NEWLOC;                                                    09360000
                                                                        09370000
 /*                                                                     09380000
    DWARF STUFF.  SEE EARLIER COMMENTS FOR DESCRIPTION OF               09390000
    VARIABLES.  REMEMBER SIXTH DWARF IS PIRATE AND IS THUS              09400000
    VERY DIFFERENT EXCEPT FOR MOTION RULES.                             09410000
                                                                        09420000
    FIRST OFF, DON'T LET THE DWARVES FOLLOW HIM INTO A PIT OR           09430000
    A WALL.  ACTIVATE THE WHOLE MESS THE FIRST TIME HE GETS             09440000
    AS FAR AS THE HALL OF MISTS (LOC 15).  IF NEWLOC IS                 09450000
    FORBIDDEN TO PIRATE (IN PARTICULAR, IF IT'S BEYOND THE              09460000
    TROLL BRIDGE), BYPASS DWARF STUFF.  THAT WAY PIRATE CAN'T           09470000
    STEAL RETURN TOLL, AND DWARVES CAN'T MEET THE BEAR.  ALSO           09480000
    MEANS DWARVES WON'T FOLLOW HIM INTO DEAD END IN MAZE, BUT           09490000
    C'EST LA VIE.  THEY'LL WAIT FOR HIM OUTSIDE THE DEAD END.           09500000
 */                                                                     09510000
                                                                        09520000
         IF LOC = 0 | FORCED(LOC) | BITSET(NEWLOC,3) THEN GOTO L2000;   09530000
         IF DFLAG ^= 0 THEN GOTO L6000;                                 09540000
         IF LOC >= 15 THEN DFLAG=1;                                     09550000
         GOTO L2000;                                                    09560000
                                                                        09570000
 /*                                                                     09580000
    WHEN WE ENCOUNTER THE FIRST DWARF, WE KILL 0, 1, OR 2 OF            09590000
    THE 5 DWARVES.  IF ANY OF THE SURVIVORS IS AT LOC,                  09600000
    REPLACE HIM WITH THE ALTERNATE.                                     09610000
 */                                                                     09620000
                                                                        09630000
 L6000:  IF DFLAG ^= 1 THEN GOTO L6010;                                 09640000
         IF LOC < 15 | PCT(95) THEN GOTO L2000;                         09650000
         DFLAG=2;                                                       09660000
         DO I=1 TO 2;                                                   09670000
             J=1+RAN(5);                                                09680000
             IF PCT(50) THEN DLOC(J)=0;                                 09690000
             END;                                                       09700000
         DO I=1 TO 5;                                                   09710000
             IF DLOC(I) = LOC THEN DLOC(I)=DALTLC;                      09720000
             ODLOC(I)=DLOC(I);                                          09730000
             END;                                                       09740000
         CALL RSPEAK(3);                                                09750000
         CALL DROP(AXE,LOC);                                            09760000
         GOTO L2000;                                                    09770000
                                                                        09780000
 /*                                                                     09790000
    THINGS ARE IN FULL SWING.  MOVE EACH DWARF AT RANDOM,               09800000
    EXCEPT IF HE'S SEEN US HE STICKS WITH US.  DWARVES NEVER            09810000
    GO TO LOCS <15.  IF WANDERING AT RANDOM, THEY DON'T BACK            09820000
    UP UNLESS THERE'S NO ALTERNATIVE.  IF THEY DON'T HAVE TO            09830000
    MOVE, THEY ATTACK.  AND, OF COURSE, DEAD DWARVES DON'T DO           09840000
    MUCH OF ANYTHING.                                                   09850000
 */                                                                     09860000
                                                                        09870000
 L6010:  DTOTAL=0;                                                      09880000
         ATTACK=0;                                                      09890000
         STICK=0;                                                       09900000
         DO I=1 TO 6;                                                   09910000
             IF DLOC(I) = 0 THEN GOTO L6030;                            09920000
             J=1;                                                       09930000
             KK=DLOC(I);                                                09940000
             KK=KEY(KK);                                                09950000
             IF KK = 0 THEN GOTO L6016;                                 09960000
 L6012:      NEWLOC=MOD(ABS(TRAVEL(KK))/1000,1000);                     09970000
             IF NEWLOC > 300 | NEWLOC < 15 | NEWLOC = ODLOC(I)          09980000
               | (J > 1 & NEWLOC = TK(J-1)) | J >= 20                   09990000
               | NEWLOC = DLOC(I) | FORCED(NEWLOC)                      10000000
               | (I = 6 & BITSET(NEWLOC,3))                             10010000
               | ABS(TRAVEL(KK))/1000000 = 100 THEN GOTO L6014;         10020000
             TK(J)=NEWLOC;                                              10030000
             J=J+1;                                                     10040000
 L6014:      KK=KK+1;                                                   10050000
             IF TRAVEL(KK-1) >= 0 THEN GOTO L6012;                      10060000
 L6016:      TK(J)=ODLOC(I);                                            10070000
             IF J >= 2 THEN J=J-1;                                      10080000
             J=1+RAN(J);                                                10090000
             ODLOC(I)=DLOC(I);                                          10100000
             DLOC(I)=TK(J);                                             10110000
             DSEEN(I)=(DSEEN(I) & LOC >= 15)                            10120000
              | (DLOC(I) = LOC | ODLOC(I) = LOC);                       10130000
             IF ^DSEEN(I) THEN GOTO L6030;                              10140000
             DLOC(I)=LOC;                                               10150000
             IF I ^= 6 THEN GOTO L6027;                                 10160000
                                                                        10170000
 /*                                                                     10180000
    THE PIRATE'S SPOTTED HIM.  HE LEAVES HIM ALONE ONCE WE'VE           10190000
    FOUND CHEST.  K COUNTS IF A TREASURE IS HERE.  IF NOT,              10200000
    AND TALLY=TALLY2 PLUS ONE FOR AN UNSEEN CHEST, LET THE              10210000
    PIRATE BE SPOTTED.                                                  10220000
 */                                                                     10230000
                                                                        10240000
             IF LOC = CHLOC | PROP(CHEST) >= 0 THEN GOTO L6030;         10250000
             K=0;                                                       10260000
             DO J=50 TO MAXTRS;                                         10270000
                                                                        10280000
 /* PIRATE WON'T TAKE PYRAMID FROM PLOVER ROOM OR DARK ROOM             10290000
    (TOO EASY!).  */                                                    10300000
                                                                        10310000
                 IF J = PYRAM & (LOC = PLAC(PYRAM)                      10320000
                  | LOC = PLAC(EMRALD)) THEN GOTO L6020;                10330000
                 IF TOTING(J) THEN GOTO L6022;                          10340000
 L6020:          IF HERE(J) THEN K=1;                                   10350000
                 END;                                                   10360000
             IF TALLY = TALLY2+1 & K = 0 & PLACE(CHEST) = 0             10370000
              & HERE(LAMP) & PROP(LAMP) = 1 THEN GOTO L6025;            10380000
             IF ODLOC(6) ^= DLOC(6) & PCT(20) THEN CALL RSPEAK(127);    10390000
             GOTO L6030;                                                10400000
                                                                        10410000
 L6022:      CALL RSPEAK(128);                                          10420000
                                                                        10430000
 /* DON'TSTEAL CHEST BACK FROM TROLL! */                                10440000
                                                                        10450000
             IF PLACE(MESSAG) = 0 THEN CALL MOVE(CHEST,CHLOC);          10460000
             CALL MOVE(MESSAG,CHLOC2);                                  10470000
             DO J=50 TO MAXTRS;                                         10480000
                 IF J = PYRAM & (LOC = PLAC(PYRAM)                      10490000
                  | LOC = PLAC(EMRALD)) THEN GOTO L6023;                10500000
                 IF AT(J) & FIXED(J) = 0 THEN CALL CARRY(J,LOC);        10510000
                 IF TOTING(J) THEN CALL DROP(J,CHLOC);                  10520000
 L6023:          END;                                                   10530000
 L6024:      DLOC(6)=CHLOC;                                             10540000
             ODLOC(6)=CHLOC;                                            10550000
             DSEEN(6)='0'B;                                             10560000
             GOTO L6030;                                                10570000
                                                                        10580000
 L6025:      CALL RSPEAK(186);                                          10590000
             CALL MOVE(CHEST,CHLOC);                                    10600000
             CALL MOVE(MESSAG,CHLOC2);                                  10610000
             GOTO L6024;                                                10620000
                                                                        10630000
 /* THIS THREATENING LITTLE DWARF IS IN THE ROOM WITH HIM! */           10640000
                                                                        10650000
 L6027:      DTOTAL=DTOTAL+1;                                           10660000
             IF ODLOC(I) ^= DLOC(I) THEN GOTO L6030;                    10670000
             ATTACK=ATTACK+1;                                           10680000
             IF KNFLOC >= 0 THEN KNFLOC=LOC;                            10690000
             IF RAN(1000) < 95*(DFLAG-2) THEN STICK=STICK+1;            10700000
 L6030:      END;                                                       10710000
                                                                        10720000
 /* NOW WE KNOW WHAT'S HAPPENING.  LET'S TELL THE POOR SUCKER           10730000
    ABOUT IT.  */                                                       10740000
                                                                        10750000
         IF DTOTAL = 0 THEN GOTO L2000;                                 10760000
         IF DTOTAL = 1 THEN GOTO L75;                                   10770000
         CALL LINESKP;                                                  10780000
         PUT STRING (OUTSTR) EDIT ('There are ',DTOTAL,                 10790000
             ' threatening little dwarves in the room with you.')       10800000
             (A,F(1),A);                                                10810000
         CALL LINEOUT;                                                  10820000
         GOTO L77;                                                      10830000
 L75:    CALL RSPEAK(4);                                                10840000
 L77:    IF ATTACK = 0 THEN GOTO L2000;                                 10850000
         IF DFLAG = 2 THEN DFLAG=3;                                     10860000
                                                                        10870000
 /*                                                                     10880000
    DWARVES GET *VERY* MAD!                                             10890000
 */                                                                     10900000
                                                                        10910000
         IF ATTACK = 1 THEN GOTO L79;                                   10920000
         PUT STRING (OUTSTR) EDIT (ATTACK,                              10930000
            ' of them throw knives at you!')                            10940000
             (F(1),A);                                                  10950000
         CALL LINEOUT;                                                  10960000
         K=6;                                                           10970000
 L82:    IF STICK > 1 THEN GOTO L83;                                    10980000
         CALL RSPEAK(K+STICK);                                          10990000
         IF STICK = 0 THEN GOTO L2000;                                  11000000
         GOTO L84;                                                      11010000
 L83:    PUT STRING (OUTSTR) EDIT (STICK,' of them get you!') (F(1),A); 11020000
         CALL LINEOUT;                                                  11030000
 L84:    OLDLC2=LOC;                                                    11040000
         GOTO L99;                                                      11050000
                                                                        11060000
 L79:    CALL RSPEAK(5);                                                11070000
         K=52;                                                          11080000
         GOTO L82;                                                      11090000
                                                                        11100000
1/* DESCRIBE THE CURRENT LOCATION AND (MAYBE) GET NEXT COMMAND. */      11110000
                                                                        11120000
 /* PRINT TEXT FOR CURRENT LOC. */                                      11130000
                                                                        11140000
 L2000:  IF LOC = 0 THEN GOTO L99;                                      11150000
         KK=STEXT(LOC);                                                 11160000
         IF MOD(ABB(LOC),ABBNUM) = 0 | KK = 0 THEN KK=LTEXT(LOC);       11170000
         IF FORCED(LOC) |  ^ DARK(0) THEN GOTO L2001;                   11180000
         IF WZDARK & PCT(35) THEN GOTO L90;                             11190000
         KK=RTEXT(16);                                                  11200000
 L2001:  IF TOTING(BEAR) THEN CALL RSPEAK(141);                         11210000
         CALL SPEAK(KK);                                                11220000
         K=1;                                                           11230000
         IF FORCED(LOC) THEN GOTO L8;                                   11240000
         IF LOC = 33 & PCT(25) &  ^ CLOSNG THEN CALL RSPEAK(8);         11250000
                                                                        11260000
 /*                                                                     11270000
    PRINT OUT DESCRIPTIONS OF OBJECTS AT THIS LOCATION.  IF             11280000
    NOT CLOSING AND PROPERTY VALUE IS NEGATIVE, TALLY OFF               11290000
    ANOTHER TREASURE.  RUG IS SPECIAL CASE; ONCE SEEN, ITS              11300000
    PROP IS 1 (DRAGON ON IT) TILL DRAGON IS KILLED.                     11310000
    SIMILARLY FOR CHAIN; PROP IS INITIALLY 1 (LOCKED TO                 11320000
    BEAR).  THESE HACKS ARE BECAUSE PROP=0 IS NEEDED TO GET             11330000
    FULL SCORE.                                                         11340000
 */                                                                     11350000
                                                                        11360000
         IF DARK(0) THEN GOTO L2012;                                    11370000
         ABB(LOC)=ABB(LOC)+1;                                           11380000
         I=ATLOC(LOC);                                                  11390000
 L2004:   IF I = 0 THEN GOTO L2012;                                     11400000
         OBJ=I;                                                         11410000
         IF OBJ > 100 THEN OBJ=OBJ-100;                                 11420000
         IF OBJ = STEPS & TOTING(NUGGET) THEN GOTO L2008;               11430000
         IF PROP(OBJ) >= 0 THEN GOTO L2006;                             11440000
         IF CLOSED THEN GOTO L2008;                                     11450000
         PROP(OBJ)=0;                                                   11460000
         IF OBJ = RUG | OBJ = CHAIN THEN PROP(OBJ)=1;                   11470000
         TALLY=TALLY-1;                                                 11480000
                                                                        11490000
 /* IF REMAINING TREASURES TOO ELUSIVE, ZAP HIS LAMP. */                11500000
                                                                        11510000
         IF TALLY = TALLY2 & TALLY ^= 0 THEN LIMIT=MIN(35,LIMIT);       11520000
 L2006:  KK=PROP(OBJ);                                                  11530000
         IF OBJ = STEPS & LOC = FIXED(STEPS) THEN KK=1;                 11540000
         CALL PSPEAK(OBJ,KK);                                           11550000
 L2008:  I=LINK(I);                                                     11560000
         GOTO L2004;                                                    11570000
                                                                        11580000
 L2009:  K=54;                                                          11590000
 L2010:  SPK=K;                                                         11600000
 L2011:  CALL RSPEAK(SPK);                                              11610000
                                                                        11620000
 L2012:  VERB=0;                                                        11630000
         OBJ=0;                                                         11640000
                                                                        11650000
 /*                                                                     11660000
    CHECK IF THIS LOC IS ELIGIBLE FOR ANY HINTS.  IF BEEN               11670000
    HERE LONG ENOUGH, BRANCH TO HELP SECTION (ON LATER PAGE).           11680000
    HINTS ALL COME BACK HERE EVENTUALLY TO FINISH THE LOOP.             11690000
    IGNORE "HINTS" < 4 (SPECIAL STUFF, SEE DATABASE NOTES).             11700000
 */                                                                     11710000
                                                                        11720000
 L2600:  DO HINT=4 TO HNTMAX;                                           11730000
             IF ^ (HINTED(HINT)) THEN DO;                               11740000
                 IF ^BITSET(LOC,HINT) THEN HINTLC(HINT)=-1;             11750000
                 HINTLC(HINT)=HINTLC(HINT)+1;                           11760000
                 IF HINTLC(HINT) >= HINTS(HINT,1) THEN GOTO L40000;     11770000
                 END;                                                   11780000
             END;                                                       11790000
                                                                        11800000
 /*                                                                     11810000
    KICK THE RANDOM NUMBER GENERATOR JUST TO ADD VARIETY TO             11820000
    THE CHASE.  ALSO, IF CLOSING TIME, CHECK FOR ANY OBJECTS            11830000
    BEING TOTED WITH PROP < 0 AND SET THE PROP TO -1-PROP.              11840000
    THIS WAY OBJECTS WON'T BE DESCRIBED UNTIL THEY'VE BEEN              11850000
    PICKED UP AND PUT DOWN SEPARATE FROM THEIR RESPECTIVE               11860000
    PILES.  DON'T TICK CLOCK1 UNLESS WELL INTO CAVE (AND NOT            11870000
    AT Y2).                                                             11880000
 */                                                                     11890000
                                                                        11900000
 L2602:  IF ^CLOSED THEN GOTO L2605;                                    11910000
         IF PROP(OYSTER) < 0 & TOTING(OYSTER)                           11920000
                THEN CALL PSPEAK(OYSTER,1);                             11930000
         DO I=1 TO 100;                                                 11940000
             IF TOTING(I) & PROP(I) < 0 THEN PROP(I)=-1-PROP(I);        11950000
             END;                                                       11960000
 L2605:  WZDARK=DARK(0);                                                11970000
         IF KNFLOC > 0 & KNFLOC ^= LOC THEN KNFLOC=0;                   11980000
         I=RAN(1);                                                      11990000
         CALL GETIN(WD1,WD1X,WD2,WD2X);                                 12000000
                                                                        12010000
 /*                                                                     12020000
    EVERY INPUT, CHECK "FOOBAR" FLAG.  IF ZERO, NOTHING'S               12030000
    GOING ON.  IF POS, MAKE NEG.  IF NEG, HE SKIPPED A WORD,            12040000
    SO MAKE IT ZERO.                                                    12050000
 */                                                                     12060000
                                                                        12070000
 L2608:  FOOBAR=MIN(0,-FOOBAR);                                         12080000
         TURNS=TURNS+1;                                                 12090000
         IF VERB = SAY & WD2 ^= '     ' THEN VERB=0;                    12100000
         IF VERB = SAY THEN GOTO L4090;                                 12110000
         IF TALLY = 0 & LOC >= 15 & LOC ^= 33 THEN CLOCK1=CLOCK1-1;     12120000
         IF CLOCK1 = 0 THEN GOTO L10000;                                12130000
         IF CLOCK1 < 0 THEN CLOCK2=CLOCK2-1;                            12140000
         IF CLOCK2 = 0 THEN GOTO L11000;                                12150000
         IF PROP(LAMP) = 1 THEN LIMIT=LIMIT-1;                          12160000
         IF LIMIT <= 30 & HERE(BATTER) & PROP(BATTER) = 0               12170000
          & HERE(LAMP) THEN GOTO L12000;                                12180000
         IF LIMIT = 0 THEN GOTO L12400;                                 12190000
         IF LIMIT < 0 & LOC <= 8 THEN GOTO L12600;                      12200000
         IF LIMIT <= 30 THEN GOTO L12200;                               12210000
 L19999: K=43;                                                          12220000
         IF LIQLOC(LOC) = WATER THEN K=70;                              12230000
         IF WD1 = 'ENTER' & (WD2 = 'STREA' | WD2 = 'WATER')             12240000
          THEN GOTO L2010;                                              12250000
         IF WD1 = 'ENTER' & WD2 ^= '    ' THEN GOTO L2800;              12260000
         IF (WD1 ^= 'WATER' & WD1 ^= 'OIL')                             12270000
          | (WD2 ^= 'PLANT' & WD2 ^= 'DOOR') THEN GOTO L2610;           12280000
         IF AT(VOCAB(WD2,1)) THEN WD2='POUR';                           12290000
 L2610:  IF WD1 ^= 'WEST' THEN GOTO L2630;                              12300000
         IWEST=IWEST+1;                                                 12310000
         IF IWEST = 10 THEN CALL RSPEAK(17);                            12320000
 L2630:  I=VOCAB(WD1,-1);                                               12330000
         IF I = -1 THEN GOTO L3000;                                     12340000
         K=MOD(I,1000);                                                 12350000
         KQ=I/1000+1;                                                   12360000
         SELECT (KQ-1);                                                 12370000
            WHEN (0) GO TO L8;                                          12380000
            WHEN (1) GO TO L5000;                                       12390000
            WHEN (2) GO TO L4000;                                       12400000
            WHEN (3) GO TO L2010;                                       12410000
            END;                                                        12420000
         CALL BUG(22);                                                  12430000
                                                                        12440000
 /* GET SECOND WORD FOR ANALYSIS. */                                    12450000
                                                                        12460000
 L2800:  WD1=WD2;                                                       12470000
         WD1X=WD2X;                                                     12480000
         WD2='     ';                                                   12490000
         GOTO L2610;                                                    12500000
                                                                        12510000
 /* GEE, I DON'T UNDERSTAND. */                                         12520000
                                                                        12530000
 L3000:  SPK=60;                                                        12540000
         IF PCT(20) THEN SPK=61;                                        12550000
         IF PCT(20) THEN SPK=13;                                        12560000
         CALL RSPEAK(SPK);                                              12570000
         GOTO L2600;                                                    12580000
                                                                        12590000
 /*                                                                     12600000
    ANALYSE A VERB.  REMEMBER WHAT IT WAS, GO BACK FOR OBJECT           12610000
    IF SECOND WORD UNLESS VERB IS "SAY", WHICH SNARFS                   12620000
    ARBITRARY SECOND WORD.                                              12630000
 */                                                                     12640000
                                                                        12650000
 L4000:  VERB=K;                                                        12660000
         SPK=ACTSPK(VERB);                                              12670000
         IF WD2 ^= '     ' & VERB ^= SAY THEN GOTO L2800;               12680000
         IF VERB = SAY THEN                                             12690000
             IF WD2 = '     ' THEN GO TO L4080;                         12700000
                              ELSE GO TO L4090;                         12710000
         IF OBJ ^= 0 THEN GOTO L4090;                                   12720000
                                                                        12730000
 /* ANALYSE AN INTRANSITIVE VERB (IE, NO OBJECT GIVEN YET). */          12740000
                                                                        12750000
 L4080:  SELECT (VERB);                                                 12760000
            WHEN (01) GO TO L8010;       /* TAKE */                     12770000
            WHEN (02) GO TO L8000;       /* DROP */                     12780000
            WHEN (03) GO TO L8000;       /* SAY */                      12790000
            WHEN (04) GO TO L8040;       /* OPEN */                     12800000
            WHEN (05) GO TO L2009;       /* NOTH */                     12810000
            WHEN (06) GO TO L8040;       /* LOCK */                     12820000
            WHEN (07) GO TO L9070;       /* ON */                       12830000
            WHEN (08) GO TO L9080;       /* OFF */                      12840000
            WHEN (09) GO TO L8000;       /* WAVE */                     12850000
            WHEN (10) GO TO L8000;       /* CALM */                     12860000
            WHEN (11) GO TO L2011;       /* WALK */                     12870000
            WHEN (12) GO TO L9120;       /* KILL */                     12880000
            WHEN (13) GO TO L9130;       /* POUR */                     12890000
            WHEN (14) GO TO L8140;       /* EAT */                      12900000
            WHEN (15) GO TO L9150;       /* DRNK */                     12910000
            WHEN (16) GO TO L8000;       /* RUB */                      12920000
            WHEN (17) GO TO L8000;       /* TOSS */                     12930000
            WHEN (18) GO TO L8180;       /* QUIT */                     12940000
            WHEN (19) GO TO L8000;       /* FIND */                     12950000
            WHEN (20) GO TO L8200;       /* INVN */                     12960000
            WHEN (21) GO TO L8000;       /* FEED */                     12970000
            WHEN (22) GO TO L9220;       /* FILL */                     12980000
            WHEN (23) GO TO L9230;       /* BLST */                     12990000
            WHEN (24) GO TO L8240;       /* SCOR */                     13000000
            WHEN (25) GO TO L8250;       /* FOO */                      13010000
            WHEN (26) GO TO L8260;       /* BRF */                      13020000
            WHEN (27) GO TO L8270;       /* READ */                     13030000
            WHEN (28) GO TO L8000;       /* BREK */                     13040000
            WHEN (29) GO TO L8000;       /* WAKE */                     13050000
            WHEN (30) GO TO L8300;       /* SUSP */                     13060000
            WHEN (31) GO TO L8310;       /* HOUR */                     13070000
            WHEN (32) GO TO SETLOG;      /* LOG  */                     13080000
            END;                                                        13090000
                                                                        13100000
         CALL BUG(23);                                                  13110000
                                                                        13120000
 /* ANALYSE A TRANSITIVE VERB. */                                       13130000
                                                                        13140000
 L4090:  SELECT (VERB);                                                 13150000
            WHEN (01) GO TO L9010;       /* TAKE */                     13160000
            WHEN (02) GO TO L9020;       /* DROP */                     13170000
            WHEN (03) GO TO L9030;       /* SAY */                      13180000
            WHEN (04) GO TO L9040;       /* OPEN */                     13190000
            WHEN (05) GO TO L2009;       /* NOTH */                     13200000
            WHEN (06) GO TO L9040;       /* LOCK */                     13210000
            WHEN (07) GO TO L9070;       /* ON */                       13220000
            WHEN (08) GO TO L9080;       /* OFF */                      13230000
            WHEN (09) GO TO L9090;       /* WAVE */                     13240000
            WHEN (10) GO TO L2011;       /* CALM */                     13250000
            WHEN (11) GO TO L2011;       /* WALK */                     13260000
            WHEN (12) GO TO L9120;       /* KILL */                     13270000
            WHEN (13) GO TO L9130;       /* POUR */                     13280000
            WHEN (14) GO TO L9140;       /* EAT */                      13290000
            WHEN (15) GO TO L9150;       /* DRNK */                     13300000
            WHEN (16) GO TO L9160;       /* RUB */                      13310000
            WHEN (17) GO TO L9170;       /* TOSS */                     13320000
            WHEN (18) GO TO L2011;       /* QUIT */                     13330000
            WHEN (19) GO TO L9190;       /* FIND */                     13340000
            WHEN (20) GO TO L9190;       /* INVN */                     13350000
            WHEN (21) GO TO L9210;       /* FEED */                     13360000
            WHEN (22) GO TO L9220;       /* FILL */                     13370000
            WHEN (23) GO TO L9230;       /* BLST */                     13380000
            WHEN (24) GO TO L2011;       /* SCOR */                     13390000
            WHEN (25) GO TO L2011;       /* FOO */                      13400000
            WHEN (26) GO TO L2011;       /* BRF */                      13410000
            WHEN (27) GO TO L9270;       /* READ */                     13420000
            WHEN (28) GO TO L9280;       /* BREK */                     13430000
            WHEN (29) GO TO L9290;       /* WAKE */                     13440000
            WHEN (30) GO TO L2011;       /* SUSP */                     13450000
            WHEN (31) GO TO L2011;       /* HOUR */                     13460000
            WHEN (32) GO TO L2011;       /* LOG  */                     13470000
            END;                                                        13480000
         CALL BUG(24);                                                  13490000
                                                                        13500000
 /*                                                                     13510000
    ANALYSE AN OBJECT WORD.  SEE IF THE THING IS HERE,                  13520000
    WHETHER WE'VE GOT A VERB YET, AND SO ON.  OBJECT MUST BE            13530000
    HERE UNLESS VERB IS "FIND" OR "INVENT(ORY)" (AND NO NEW             13540000
    VERB YET TO BE ANALYSED).  WATER AND OIL ARE ALSO FUNNY,            13550000
    SINCE THEY ARE NEVER ACTUALLY DROPPED AT ANY LOCATION,              13560000
    BUT MIGHT BE HERE INSIDE THE BOTTLE OR AS A FEATURE OF              13570000
    THE LOCATION.                                                       13580000
 */                                                                     13590000
                                                                        13600000
 L5000:  OBJ=K;                                                         13610000
         IF FIXED(K) ^= LOC &  ^ HERE(K) THEN GOTO L5100;               13620000
 L5010:  IF WD2 ^= '     ' THEN GOTO L2800;                             13630000
         IF VERB ^= 0 THEN GOTO L4090;                                  13640000
         CALL A5TOA1(WD1,WD1X,TKWORD,K);                                13650000
         CALL LINESKP;                                                  13660000
         PUT STRING (OUTSTR) EDIT ('What do you want to do with the ',  13670000
             (TKWORD(I) DO I=1 TO K)) (A,20 A);                         13680000
         CALL LINEOUT;                                                  13690000
         GOTO L2600;                                                    13700000
                                                                        13710000
 L5100:  IF K ^= GRATE THEN GOTO L5110;                                 13720000
         IF LOC = 1 | LOC = 4 | LOC = 7 THEN K=DPRSSN;                  13730000
         IF LOC > 9 & LOC < 15 THEN K=ENTRNC;                           13740000
         IF K ^= GRATE THEN GOTO L8;                                    13750000
 L5110:  IF K ^= DWARF THEN GOTO L5120;                                 13760000
         DO I=1 TO 5;                                                   13770000
             IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L5010;             13780000
             END;                                                       13790000
 L5120:  IF (LIQ(0) = K & HERE(BOTTLE))                                 13800000
                | K = LIQLOC(LOC) THEN GOTO L5010;                      13810000
         IF OBJ ^= PLANT |  ^ AT(PLANT2) | PROP(PLANT2) = 0             13820000
               THEN GOTO L5130;                                         13830000
         OBJ=PLANT2;                                                    13840000
         GOTO L5010;                                                    13850000
 L5130:  IF OBJ ^= KNIFE | KNFLOC ^= LOC THEN GOTO L5140;               13860000
         KNFLOC=-1;                                                     13870000
         SPK=116;                                                       13880000
         GOTO L2011;                                                    13890000
 L5140:  IF OBJ ^= ROD |  ^HERE(ROD2) THEN GOTO L5190;                  13900000
         OBJ=ROD2;                                                      13910000
         GOTO L5010;                                                    13920000
 L5190:  IF (VERB = FIND | VERB = INVENT) & WD2 = '     '               13930000
              THEN GOTO L5010;                                          13940000
         CALL A5TOA1(WD1,WD1X,TKWORD,K);                                13950000
         CALL LINESKP;                                                  13960000
         PUT STRING (OUTSTR) EDIT                                       13970000
              ('I see no ',(TKWORD(I) DO I=1 TO K),' here!')            13980000
             (A,20 A);                                                  13990000
         CALL LINEOUT;                                                  14000000
         GOTO L2012;                                                    14010000
1/*                                                                     14020000
    FIGURE OUT THE NEW LOCATION                                         14030000
                                                                        14040000
    GIVEN THE CURRENT LOCATION IN "LOC", AND A MOTION VERB              14050000
    NUMBER IN "K", PUT THE NEW LOCATION IN "NEWLOC".  THE               14060000
    CURRENT LOC IS SAVED IN "OLDLOC" IN CASE HE WANTS TO                14070000
    RETREAT.  THE CURRENT OLDLOC IS SAVED IN OLDLC2, IN CASE            14080000
    HE DIES.  (IF HE DOES, NEWLOC WILL BE LIMBO, AND OLDLOC             14090000
    WILL BE WHAT KILLED HIM, SO WE NEED OLDLC2, WHICH IS THE            14100000
    LAST PLACE HE WAS SAFE.)                                            14110000
 */                                                                     14120000
                                                                        14130000
 L8:     KK=KEY(LOC);                                                   14140000
         NEWLOC=LOC;                                                    14150000
         IF KK = 0 THEN CALL BUG(26);                                   14160000
         IF K = NULLX THEN GOTO L2;                                     14170000
         IF K = BACK THEN GOTO L20;                                     14180000
         IF K = LOOK THEN GOTO L30;                                     14190000
         IF K = CAVE THEN GOTO L40;                                     14200000
         OLDLC2=OLDLOC;                                                 14210000
         OLDLOC=LOC;                                                    14220000
                                                                        14230000
 L9:     LL=ABS(TRAVEL(KK));                                            14240000
         IF MOD(LL,1000) = 1 | MOD(LL,1000) = K THEN GOTO L10;          14250000
         IF TRAVEL(KK) < 0 THEN GOTO L50;                               14260000
         KK=KK+1;                                                       14270000
         GOTO L9;                                                       14280000
                                                                        14290000
 L10:    LL=LL/1000;                                                    14300000
 L11:    NEWLOC=LL/1000;                                                14310000
         K=MOD(NEWLOC,100);                                             14320000
         IF NEWLOC <= 300 THEN GOTO L13;                                14330000
         IF PROP(K) ^= NEWLOC/100-3 THEN GOTO L16;                      14340000
 L12:    IF TRAVEL(KK) < 0 THEN CALL BUG(25);                           14350000
         KK=KK+1;                                                       14360000
         NEWLOC=ABS(TRAVEL(KK))/1000;                                   14370000
         IF NEWLOC = LL THEN GOTO L12;                                  14380000
         LL=NEWLOC;                                                     14390000
         GOTO L11;                                                      14400000
                                                                        14410000
 L13:    IF NEWLOC <= 100 THEN GOTO L14;                                14420000
         IF TOTING(K) | (NEWLOC > 200 & AT(K)) THEN GOTO L16;           14430000
         GOTO L12;                                                      14440000
                                                                        14450000
 L14:    IF NEWLOC ^= 0 &  ^PCT(NEWLOC) THEN GOTO L12;                  14460000
 L16:    NEWLOC=MOD(LL,1000);                                           14470000
         IF NEWLOC <= 300 THEN GOTO L2;                                 14480000
         IF NEWLOC <= 500 THEN GOTO L30000;                             14490000
         CALL RSPEAK(NEWLOC-500);                                       14500000
         NEWLOC=LOC;                                                    14510000
         GOTO L2;                                                       14520000
                                                                        14530000
 /*                                                                     14540000
    SPECIAL MOTIONS COME HERE.  LABELLING CONVENTION:                   14550000
    STATEMENT NUMBERS NNNXX (XX=00-99) ARE USED FOR SPECIAL             14560000
    CASE NUMBER NNN (NNN=301-500).                                      14570000
 */                                                                     14580000
                                                                        14590000
 L30000: NEWLOC=NEWLOC-300;                                             14600000
         SELECT (NEWLOC-1);                                             14610000
             WHEN (00) GO TO L30100;                                    14620000
             WHEN (01) GO TO L30200;                                    14630000
             WHEN (02) GO TO L30300;                                    14640000
             END;                                                       14650000
         CALL BUG(20);                                                  14660000
                                                                        14670000
 /*                                                                     14680000
    TRAVEL 301.  PLOVER-ALCOVE PASSAGE.  CAN CARRY ONLY                 14690000
    EMERALD.  NOTE:  TRAVEL TABLE MUST INCLUDE "USELESS"                14700000
    ENTRIES GOING THROUGH PASSAGE, WHICH CAN NEVER BE USED              14710000
    FOR ACTUAL MOTION, BUT CAN BE SPOTTED BY "GO BACK".                 14720000
 */                                                                     14730000
                                                                        14740000
 L30100: NEWLOC=99+100-LOC;                                             14750000
         IF HOLDNG = 0 | (HOLDNG = 1 & TOTING(EMRALD)) THEN GOTO L2;    14760000
         NEWLOC=LOC;                                                    14770000
         CALL RSPEAK(117);                                              14780000
         GOTO L2;                                                       14790000
                                                                        14800000
 /*                                                                     14810000
    TRAVEL 302.  PLOVER TRANSPORT.  DROP THE EMERALD (ONLY              14820000
    USE SPECIAL TRAVEL IF TOTING IT), SO HE'S FORCED TO USE             14830000
    THE PLOVER-PASSAGE TO GET IT OUT.  HAVING DROPPED IT, GO            14840000
    BACK AND PRETEND HE WASN'T CARRYING IT AFTER ALL.                   14850000
 */                                                                     14860000
                                                                        14870000
 L30200: CALL DROP(EMRALD,LOC);                                         14880000
         GOTO L12;                                                      14890000
                                                                        14900000
 /*                                                                     14910000
    TRAVEL 303.  TROLL BRIDGE.  MUST BE DONE ONLY AS SPECIAL            14920000
    MOTION SO THAT DWARVES WON'T WANDER ACROSS AND ENCOUNTER            14930000
    THE BEAR.  (THEY WON'T FOLLOW THE PLAYER THERE BECAUSE              14940000
    THAT REGION IS FORBIDDEN TO THE PIRATE.) IF                         14950000
    PROP(TROLL)=1, HE'S CROSSED SINCE PAYING, SO STEP OUT AND           14960000
    BLOCK HIM.  (STANDARD TRAVEL ENTRIES CHECK FOR                      14970000
    PROP(TROLL)=0.) SPECIAL STUFF FOR BEAR.                             14980000
 */                                                                     14990000
                                                                        15000000
 L30300: IF PROP(TROLL) ^= 1 THEN GOTO L30310;                          15010000
         CALL PSPEAK(TROLL,1);                                          15020000
         PROP(TROLL)=0;                                                 15030000
         CALL MOVE(TROLL2,0);                                           15040000
         CALL MOVE(TROLL2+100,0);                                       15050000
         CALL MOVE(TROLL,PLAC(TROLL));                                  15060000
         CALL MOVE(TROLL+100,FIXD(TROLL));                              15070000
         CALL JUGGLE(CHASM);                                            15080000
         NEWLOC=LOC;                                                    15090000
         GOTO L2;                                                       15100000
                                                                        15110000
 L30310: NEWLOC=PLAC(TROLL)+FIXD(TROLL)-LOC;                            15120000
         IF PROP(TROLL) = 0 THEN PROP(TROLL)=1;                         15130000
         IF ^TOTING(BEAR) THEN GOTO L2;                                 15140000
         CALL RSPEAK(162);                                              15150000
         PROP(CHASM)=1;                                                 15160000
         PROP(TROLL)=2;                                                 15170000
         CALL DROP(BEAR,NEWLOC);                                        15180000
         FIXED(BEAR)=-1;                                                15190000
         PROP(BEAR)=3;                                                  15200000
         IF PROP(SPICES) < 0 THEN TALLY2=TALLY2+1;                      15210000
         OLDLC2=NEWLOC;                                                 15220000
         GOTO L99;                                                      15230000
                                                                        15240000
 /* END OF SPECIALS. */                                                 15250000
                                                                        15260000
 /*                                                                     15270000
    HANDLE "GO BACK".  LOOK FOR VERB WHICH GOES FROM LOC TO             15280000
    OLDLOC, OR TO OLDLC2 IF OLDLOC HAS FORCED-MOTION.  K2               15290000
    SAVES ENTRY -> FORCED LOC -> PREVIOUS LOC.                          15300000
 */                                                                     15310000
                                                                        15320000
 L20:    K=OLDLOC;                                                      15330000
         IF FORCED(K) THEN K=OLDLC2;                                    15340000
         OLDLC2=OLDLOC;                                                 15350000
         OLDLOC=LOC;                                                    15360000
         K2=0;                                                          15370000
         IF K ^= LOC THEN GOTO L21;                                     15380000
         CALL RSPEAK(91);                                               15390000
         GOTO L2;                                                       15400000
                                                                        15410000
 L21:    LL=MOD((ABS(TRAVEL(KK))/1000),1000);                           15420000
         IF LL = K THEN GOTO L25;                                       15430000
         IF LL > 300 THEN GOTO L22;                                     15440000
         J=KEY(LL);                                                     15450000
         IF FORCED(LL) & MOD((ABS(TRAVEL(J))/1000),1000) = K            15460000
              THEN K2=KK;                                               15470000
 L22:    IF TRAVEL(KK) < 0 THEN GOTO L23;                               15480000
         KK=KK+1;                                                       15490000
         GOTO L21;                                                      15500000
                                                                        15510000
 L23:    KK=K2;                                                         15520000
         IF KK ^= 0 THEN GOTO L25;                                      15530000
         CALL RSPEAK(140);                                              15540000
         GOTO L2;                                                       15550000
                                                                        15560000
 L25:    K=MOD(ABS(TRAVEL(KK)),1000);                                   15570000
         KK=KEY(LOC);                                                   15580000
         GOTO L9;                                                       15590000
                                                                        15600000
 /*                                                                     15610000
    LOOK.  CAN'T GIVE MORE DETAIL.  PRETEND IT WASN'T DARK              15620000
    (THOUGH IT MAY "NOW" BE DARK) SO HE WON'T FALL INTO A PIT           15630000
    WHILE STARING INTO THE GLOOM.                                       15640000
 */                                                                     15650000
                                                                        15660000
 L30:    IF DETAIL < 3 THEN CALL RSPEAK(15);                            15670000
         DETAIL=DETAIL+1;                                               15680000
         WZDARK='0'B;                                                   15690000
         ABB(LOC)=0;                                                    15700000
         GOTO L2;                                                       15710000
                                                                        15720000
 /* CAVE.  DIFFERENT MESSAGES DEPENDING ON WHETHER ABOVE GROUND. */     15730000
                                                                        15740000
 L40:    IF LOC < 8 THEN CALL RSPEAK(57);                               15750000
         IF LOC >= 8 THEN CALL RSPEAK(58);                              15760000
         GOTO L2;                                                       15770000
                                                                        15780000
 /* NON-APPLICABLE MOTION.  VARIOUS MESSAGES DEPENDING ON               15790000
    WORD GIVEN.  */                                                     15800000
                                                                        15810000
 L50:    SPK=12;                                                        15820000
         IF K >= 43 & K <= 50 THEN SPK=9;                               15830000
         IF K = 29 | K = 30 THEN SPK=9;                                 15840000
         IF K = 7 | K = 36 | K = 37 THEN SPK=10;                        15850000
         IF K = 11 | K = 19 THEN SPK=11;                                15860000
         IF VERB = FIND | VERB = INVENT THEN SPK=59;                    15870000
         IF K = 62 | K = 65 THEN SPK=42;                                15880000
         IF K = 17 THEN SPK=80;                                         15890000
         CALL RSPEAK(SPK);                                              15900000
         GOTO L2;                                                       15910000
                                                                        15920000
1/*                                                                     15930000
    "YOU'RE DEAD, JIM."                                                 15940000
                                                                        15950000
    IF THE CURRENT LOC IS ZERO, IT MEANS THE CLOWN GOT                  15960000
    HIMSELF KILLED.  WE'LL ALLOW THIS MAXDIE TIMES.  MAXDIE             15970000
    IS AUTOMATICALLY SET BASED ON THE NUMBER OF SNIDE                   15980000
    MESSAGES AVAILABLE.  EACH DEATH RESULTS IN A MESSAGE (81,           15990000
    83, ETC.) WHICH OFFERS REINCARNATION; IF ACCEPTED, THIS             16000000
    RESULTS IN MESSAGE 82, 84, ETC.  THE LAST TIME, IF HE               16010000
    WANTS ANOTHER CHANCE, HE GETS A SNIDE REMARK AS WE EXIT.            16020000
    WHEN REINCARNATED, ALL OBJECTS BEING CARRIED GET DROPPED            16030000
    AT OLDLC2 (PRESUMABLY THE LAST PLACE PRIOR TO BEING                 16040000
    KILLED) WITHOUT CHANGE OF PROPS.  THE LOOP RUNS BACKWARDS           16050000
    TO ASSURE THAT THE BIRD IS DROPPED BEFORE THE CAGE.                 16060000
    (THIS KLUGE COULD BE CHANGED ONCE WE'RE SURE ALL                    16070000
    REFERENCES TO BIRD AND CAGE ARE DONE BY KEYWORDS.) THE              16080000
    LAMP IS A SPECIAL CASE (IT WOULDN'T DO TO LEAVE IT IN THE           16090000
    CAVE).  IT IS TURNED OFF AND LEFT OUTSIDE THE BUILDING              16100000
    (ONLY IF HE WAS CARRYING IT, OF COURSE).  HE HIMSELF IS             16110000
    LEFT INSIDE THE BUILDING (AND HEAVEN HELP HIM IF HE TRIES           16120000
    TO XYZZY BACK INTO THE CAVE WITHOUT THE LAMP!).  OLDLOC             16130000
    IS ZAPPED SO HE CAN'T JUST "RETREAT".                               16140000
                                                                        16150000
    THE EASIEST WAY TO GET KILLED IS TO FALL INTO A PIT IN              16160000
    PITCH DARKNESS.                                                     16170000
 */                                                                     16180000
                                                                        16190000
 L90:    CALL RSPEAK(23);                                               16200000
         OLDLC2=LOC;                                                    16210000
                                                                        16220000
 /* OKAY, HE'S DEAD.  LET'S GET ON WITH IT. */                          16230000
                                                                        16240000
 L99:    IF CLOSNG THEN GOTO L95;                                       16250000
         YEA=YES(81+NUMDIE*2,82+NUMDIE*2,54);                           16260000
         NUMDIE=NUMDIE+1;                                               16270000
         IF NUMDIE = MAXDIE |  ^YEA THEN GOTO L20000;                   16280000
         PLACE(WATER)=0;                                                16290000
         PLACE(OIL)=0;                                                  16300000
         IF TOTING(LAMP) THEN PROP(LAMP)=0;                             16310000
         DO J=1 TO 100;                                                 16320000
             I=101-J;                                                   16330000
             IF ^TOTING(I) THEN GOTO L98;                               16340000
             K=OLDLC2;                                                  16350000
             IF I = LAMP THEN K=1;                                      16360000
             CALL DROP(I,K);                                            16370000
 L98:        END;                                                       16380000
         LOC=3;                                                         16390000
         OLDLOC=LOC;                                                    16400000
         GOTO L2000;                                                    16410000
                                                                        16420000
 /* HE DIED DURING CLOSING TIME.  NO RESURRECTION.  TALLY UP            16430000
    A DEATH AND EXIT.  */                                               16440000
                                                                        16450000
 L95:    CALL RSPEAK(131);                                              16460000
         NUMDIE=NUMDIE+1;                                               16470000
         GOTO L20000;                                                   16480000
                                                                        16490000
1/*                                                                     16500000
    ROUTINES FOR PERFORMING THE VARIOUS ACTION VERBS                    16510000
                                                                        16520000
    STATEMENT NUMBERS IN THIS SECTION ARE 8000 FOR                      16530000
    INTRANSITIVE VERBS, 9000 FOR TRANSITIVE, PLUS TEN TIMES             16540000
    THE VERB NUMBER.  MANY INTRANSITIVE VERBS USE THE                   16550000
    TRANSITIVE CODE, AND SOME VERBS USE CODE FOR OTHER VERBS,           16560000
    AS NOTED BELOW.                                                     16570000
                                                                        16580000
    RANDOM INTRANSITIVE VERBS COME HERE.  CLEAR OBJ JUST IN             16590000
    CASE (SEE "ATTACK").                                                16600000
 */                                                                     16610000
                                                                        16620000
 L8000:  CALL A5TOA1(WD1,WD1X,TKWORD,K);                                16630000
         CALL LINESKP;                                                  16640000
         PUT STRING (OUTSTR) EDIT                                       16650000
              ((TKWORD(I) DO I=1 TO K),' what?') (A,20 A);              16660000
         CALL LINEOUT;                                                  16670000
         OBJ=0;                                                         16680000
         GOTO L2600;                                                    16690000
                                                                        16700000
 /* CARRY, NO OBJECT GIVEN YET.  OK IF ONLY ONE OBJECT PRESENT. */      16710000
                                                                        16720000
 L8010:  IF ATLOC(LOC) = 0 | LINK(ATLOC(LOC)) ^= 0 THEN GOTO L8000;     16730000
         DO I=1 TO 5;                                                   16740000
             IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L8000;             16750000
             END;                                                       16760000
         OBJ=ATLOC(LOC);                                                16770000
                                                                        16780000
 /*                                                                     16790000
    CARRY AN OBJECT.  SPECIAL CASES FOR BIRD AND CAGE (IF               16800000
    BIRD IN CAGE, CAN'T TAKE ONE WITHOUT THE OTHER.  LIQUIDS            16810000
    ALSO SPECIAL, SINCE THEY DEPEND ON STATUS OF BOTTLE.                16820000
    ALSO VARIOUS SIDE EFFECTS, ETC.                                     16830000
 */                                                                     16840000
                                                                        16850000
 L9010:  IF TOTING(OBJ) THEN GOTO L2011;                                16860000
         SPK=25;                                                        16870000
         IF OBJ = PLANT & PROP(PLANT) <= 0 THEN SPK=115;                16880000
         IF OBJ = BEAR & PROP(BEAR) = 1 THEN SPK=169;                   16890000
         IF OBJ = CHAIN & PROP(BEAR) ^= 0 THEN SPK=170;                 16900000
         IF FIXED(OBJ) ^= 0 THEN GOTO L2011;                            16910000
         IF OBJ ^= WATER & OBJ ^= OIL THEN GOTO L9017;                  16920000
         IF HERE(BOTTLE) & LIQ(0) = OBJ THEN GOTO L9018;                16930000
         OBJ=BOTTLE;                                                    16940000
         IF TOTING(BOTTLE) & PROP(BOTTLE) = 1 THEN GOTO L9220;          16950000
         IF PROP(BOTTLE) ^= 1 THEN SPK=105;                             16960000
         IF ^TOTING(BOTTLE) THEN SPK=104;                               16970000
         GOTO L2011;                                                    16980000
 L9018:  OBJ=BOTTLE;                                                    16990000
 L9017:  IF HOLDNG < 7 THEN GOTO L9016;                                 17000000
         CALL RSPEAK(92);                                               17010000
         GOTO L2012;                                                    17020000
 L9016:  IF OBJ ^= BIRD THEN GOTO L9014;                                17030000
         IF PROP(BIRD) ^= 0 THEN GOTO L9014;                            17040000
         IF ^TOTING(ROD) THEN GOTO L9013;                               17050000
         CALL RSPEAK(26);                                               17060000
         GOTO L2012;                                                    17070000
 L9013:  IF TOTING(CAGE) THEN GOTO L9015;                               17080000
         CALL RSPEAK(27);                                               17090000
         GOTO L2012;                                                    17100000
 L9015:  PROP(BIRD)=1;                                                  17110000
 L9014:  IF (OBJ = BIRD | OBJ = CAGE) & PROP(BIRD) ^= 0                 17120000
             THEN CALL CARRY(BIRD+CAGE-OBJ,LOC);                        17130000
         CALL CARRY(OBJ,LOC);                                           17140000
         K=LIQ(0);                                                      17150000
         IF OBJ = BOTTLE & K ^= 0 THEN PLACE(K)=-1;                     17160000
         GOTO L2009;                                                    17170000
                                                                        17180000
 /*                                                                     17190000
    DISCARD OBJECT.  "THROW" ALSO COMES HERE FOR MOST                   17200000
    OBJECTS.  SPECIAL CASES FOR BIRD (MIGHT ATTACK SNAKE OR             17210000
    DRAGON) AND CAGE (MIGHT CONTAIN BIRD) AND VASE.  DROP               17220000
    COINS AT VENDING MACHINE FOR EXTRA BATTERIES.                       17230000
 */                                                                     17240000
                                                                        17250000
 L9020:  IF TOTING(ROD2) & OBJ = ROD &  ^ TOTING(ROD) THEN OBJ=ROD2;    17260000
         IF ^TOTING(OBJ) THEN GOTO L2011;                               17270000
         IF OBJ ^= BIRD |  ^ HERE(SNAKE) THEN GOTO L9024;               17280000
         CALL RSPEAK(30);                                               17290000
         IF CLOSED THEN GOTO L19000;                                    17300000
         CALL DSTROY(SNAKE);                                            17310000
                                                                        17320000
 /* SET PROP FOR USE BY TRAVEL OPTIONS */                               17330000
                                                                        17340000
         PROP(SNAKE)=1;                                                 17350000
 L9021:  K=LIQ(0);                                                      17360000
         IF K = OBJ THEN OBJ=BOTTLE;                                    17370000
         IF OBJ = BOTTLE & K ^= 0 THEN PLACE(K)=0;                      17380000
         IF OBJ = CAGE & PROP(BIRD) ^= 0 THEN CALL DROP(BIRD,LOC);      17390000
         IF OBJ = BIRD THEN PROP(BIRD)=0;                               17400000
         CALL DROP(OBJ,LOC);                                            17410000
         GOTO L2012;                                                    17420000
                                                                        17430000
 L9024:  IF OBJ ^= COINS |  ^ HERE(VEND) THEN GOTO L9025;               17440000
         CALL DSTROY(COINS);                                            17450000
         CALL DROP(BATTER,LOC);                                         17460000
         CALL PSPEAK(BATTER,0);                                         17470000
         GOTO L2012;                                                    17480000
                                                                        17490000
 L9025:  IF OBJ ^= BIRD |  ^ AT(DRAGON) | PROP(DRAGON) ^= 0             17500000
                THEN GOTO L9026;                                        17510000
         CALL RSPEAK(154);                                              17520000
         CALL DSTROY(BIRD);                                             17530000
         PROP(BIRD)=0;                                                  17540000
         IF PLACE(SNAKE) = PLAC(SNAKE) THEN TALLY2=TALLY2+1;            17550000
         GOTO L2012;                                                    17560000
                                                                        17570000
 L9026:  IF OBJ ^= BEAR |  ^AT(TROLL) THEN GOTO L9027;                  17580000
         CALL RSPEAK(163);                                              17590000
         CALL MOVE(TROLL,0);                                            17600000
         CALL MOVE(TROLL+100,0);                                        17610000
         CALL MOVE(TROLL2,PLAC(TROLL));                                 17620000
         CALL MOVE(TROLL2+100,FIXD(TROLL));                             17630000
         CALL JUGGLE(CHASM);                                            17640000
         PROP(TROLL)=2;                                                 17650000
         GOTO L9021;                                                    17660000
                                                                        17670000
 L9027:  IF OBJ = VASE & LOC ^= PLAC(PILLOW) THEN GOTO L9028;           17680000
         CALL RSPEAK(54);                                               17690000
         GOTO L9021;                                                    17700000
                                                                        17710000
 L9028:  PROP(VASE)=2;                                                  17720000
         IF AT(PILLOW) THEN PROP(VASE)=0;                               17730000
         CALL PSPEAK(VASE,PROP(VASE)+1);                                17740000
         IF PROP(VASE) ^= 0 THEN FIXED(VASE)=-1;                        17750000
         GOTO L9021;                                                    17760000
                                                                        17770000
 /* SAY.  ECHO WD2 (OR WD1 IF NO WD2 (SAY WHAT?, ETC.).)                17780000
    MAGIC WORDS OVERRIDE.  */                                           17790000
                                                                        17800000
 L9030:  CALL A5TOA1(WD2,WD2X,TKWORD,K);                                17810000
         IF WD2 = '     ' THEN CALL A5TOA1(WD1,WD1X,TKWORD,K);          17820000
         IF WD2 ^= '     ' THEN WD1=WD2;                                17830000
         I=VOCAB(WD1,-1);                                               17840000
         IF I = 62 | I = 65 | I = 71 | I = 2025 THEN GOTO L9035;        17850000
         CALL LINESKP;                                                  17860000
         PUT STRING (OUTSTR) EDIT                                       17870000
                ('Okay, "',(TKWORD(I) DO I=1 TO K),'".') (A,20 A);      17880000
         CALL LINEOUT;                                                  17890000
         GOTO L2012;                                                    17900000
                                                                        17910000
 L9035:  WD2='     ';                                                   17920000
         OBJ=0;                                                         17930000
         GOTO L2630;                                                    17940000
                                                                        17950000
 /* LOCK, UNLOCK, NO OBJECT GIVEN.  ASSUME VARIOUS THINGS IF            17960000
    PRESENT.  */                                                        17970000
                                                                        17980000
 L8040:  SPK=28;                                                        17990000
         IF HERE(CLAM) THEN OBJ=CLAM;                                   18000000
         IF HERE(OYSTER) THEN OBJ=OYSTER;                               18010000
         IF AT(DOOR) THEN OBJ=DOOR;                                     18020000
         IF AT(GRATE) THEN OBJ=GRATE;                                   18030000
         IF OBJ ^= 0 & HERE(CHAIN) THEN GOTO L8000;                     18040000
         IF HERE(CHAIN) THEN OBJ=CHAIN;                                 18050000
         IF OBJ = 0 THEN GOTO L2011;                                    18060000
                                                                        18070000
 /* LOCK, UNLOCK OBJECT.  SPECIAL STUFF FOR OPENING                     18080000
    CLAM/OYSTER AND FOR CHAIN.  */                                      18090000
                                                                        18100000
 L9040:  IF OBJ = CLAM | OBJ = OYSTER THEN GOTO L9046;                  18110000
         IF OBJ = DOOR THEN SPK=111;                                    18120000
         IF OBJ = DOOR & PROP(DOOR) = 1 THEN SPK=54;                    18130000
         IF OBJ = CAGE THEN SPK=32;                                     18140000
         IF OBJ = KEYS THEN SPK=55;                                     18150000
         IF OBJ = GRATE | OBJ = CHAIN THEN SPK=31;                      18160000
         IF SPK ^= 31 |  ^ HERE(KEYS) THEN GOTO L2011;                  18170000
         IF OBJ = CHAIN THEN GOTO L9048;                                18180000
         IF ^CLOSNG THEN GOTO L9043;                                    18190000
         K=130;                                                         18200000
         IF ^PANIC THEN CLOCK2=15;                                      18210000
         PANIC='1'B;                                                    18220000
         GOTO L2010;                                                    18230000
                                                                        18240000
 L9043:  K=34+PROP(GRATE);                                              18250000
         PROP(GRATE)=1;                                                 18260000
         IF VERB = LOCK THEN PROP(GRATE)=0;                             18270000
         K=K+2*PROP(GRATE);                                             18280000
         GOTO L2010;                                                    18290000
                                                                        18300000
 /* CLAM/OYSTER. */                                                     18310000
                                                                        18320000
 L9046:  K=0;                                                           18330000
         IF OBJ = OYSTER THEN K=1;                                      18340000
         SPK=124+K;                                                     18350000
         IF TOTING(OBJ) THEN SPK=120+K;                                 18360000
         IF ^TOTING(TRIDNT) THEN SPK=122+K;                             18370000
         IF VERB = LOCK THEN SPK=61;                                    18380000
         IF SPK ^= 124 THEN GOTO L2011;                                 18390000
         CALL DSTROY(CLAM);                                             18400000
         CALL DROP(OYSTER,LOC);                                         18410000
         CALL DROP(PEARL,105);                                          18420000
         GOTO L2011;                                                    18430000
                                                                        18440000
 /* CHAIN. */                                                           18450000
                                                                        18460000
 L9048:  IF VERB = LOCK THEN GOTO L9049;                                18470000
         SPK=171;                                                       18480000
         IF PROP(BEAR) = 0 THEN SPK=41;                                 18490000
         IF PROP(CHAIN) = 0 THEN SPK=37;                                18500000
         IF SPK ^= 171 THEN GOTO L2011;                                 18510000
         PROP(CHAIN)=0;                                                 18520000
         FIXED(CHAIN)=0;                                                18530000
         IF PROP(BEAR) ^= 3 THEN PROP(BEAR)=2;                          18540000
         FIXED(BEAR)=2-PROP(BEAR);                                      18550000
         GOTO L2011;                                                    18560000
                                                                        18570000
 L9049:  SPK=172;                                                       18580000
         IF PROP(CHAIN) ^= 0 THEN SPK=34;                               18590000
         IF LOC ^= PLAC(CHAIN) THEN SPK=173;                            18600000
         IF SPK ^= 172 THEN GOTO L2011;                                 18610000
         PROP(CHAIN)=2;                                                 18620000
         IF TOTING(CHAIN) THEN CALL DROP(CHAIN,LOC);                    18630000
         FIXED(CHAIN)=-1;                                               18640000
         GOTO L2011;                                                    18650000
                                                                        18660000
 /* LIGHT LAMP */                                                       18670000
                                                                        18680000
 L9070:  IF ^HERE(LAMP) THEN GOTO L2011;                                18690000
         SPK=184;                                                       18700000
         IF LIMIT < 0 THEN GOTO L2011;                                  18710000
         PROP(LAMP)=1;                                                  18720000
         CALL RSPEAK(39);                                               18730000
         IF WZDARK THEN GOTO L2000;                                     18740000
         GOTO L2012;                                                    18750000
                                                                        18760000
 /* LAMP OFF */                                                         18770000
                                                                        18780000
 L9080:  IF ^HERE(LAMP) THEN GOTO L2011;                                18790000
         PROP(LAMP)=0;                                                  18800000
         CALL RSPEAK(40);                                               18810000
         IF DARK(0) THEN CALL RSPEAK(16);                               18820000
         GOTO L2012;                                                    18830000
                                                                        18840000
 /* WAVE.  NO EFFECT UNLESS WAVING ROD AT FISSURE. */                   18850000
                                                                        18860000
 L9090:  IF (^TOTING(OBJ)) & (OBJ ^= ROD |  ^ TOTING(ROD2))             18870000
          THEN SPK=29;                                                  18880000
         IF OBJ ^= ROD |  ^ AT(FISSUR) |  ^ TOTING(OBJ)                 18890000
          | CLOSNG THEN GOTO L2011;                                     18900000
         PROP(FISSUR)=1-PROP(FISSUR);                                   18910000
         CALL PSPEAK(FISSUR,2-PROP(FISSUR));                            18920000
         GOTO L2012;                                                    18930000
                                                                        18940000
 /*                                                                     18950000
    ATTACK.  ASSUME TARGET IF UNAMBIGUOUS.  "THROW" ALSO                18960000
    LINKS HERE.  ATTACKABLE OBJECTS FALL INTO TWO CATEGORIES:           18970000
    ENEMIES (SNAKE, DWARF, ETC.) AND OTHERS (BIRD, CLAM).               18980000
    AMBIGUOUS IF TWO ENEMIES, OR IF NO ENEMIES BUT TWO                  18990000
    OTHERS.                                                             19000000
 */                                                                     19010000
                                                                        19020000
 L9120:  DO I=1 TO 5;                                                   19030000
             IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L9122;             19040000
             END;                                                       19050000
         I=0;                                                           19060000
 L9122:  IF OBJ ^= 0 THEN GOTO L9124;                                   19070000
         IF I ^= 0 THEN OBJ=DWARF;                                      19080000
         IF HERE(SNAKE) THEN OBJ=OBJ*100+SNAKE;                         19090000
         IF AT(DRAGON) & PROP(DRAGON) = 0 THEN OBJ=OBJ*100+DRAGON;      19100000
         IF AT(TROLL) THEN OBJ=OBJ*100+TROLL;                           19110000
         IF HERE(BEAR) & PROP(BEAR) = 0 THEN OBJ=OBJ*100+BEAR;          19120000
         IF OBJ > 100 THEN GOTO L8000;                                  19130000
         IF OBJ ^= 0 THEN GOTO L9124;                                   19140000
                                                                        19150000
 /* CAN'T ATTACK BIRD BY THROWING AXE. */                               19160000
                                                                        19170000
         IF HERE(BIRD) & VERB ^= THROW THEN OBJ=BIRD;                   19180000
                                                                        19190000
 /* CLAM AND OYSTER BOTH TREATED AS CLAM FOR INTRANSITIVE               19200000
    CASE; NO HARM DONE.  */                                             19210000
                                                                        19220000
         IF HERE(CLAM) | HERE(OYSTER) THEN OBJ=100*OBJ+CLAM;            19230000
         IF OBJ > 100 THEN GOTO L8000;                                  19240000
 L9124:  IF OBJ ^= BIRD THEN GOTO L9125;                                19250000
         SPK=137;                                                       19260000
         IF CLOSED THEN GOTO L2011;                                     19270000
         CALL DSTROY(BIRD);                                             19280000
         PROP(BIRD)=0;                                                  19290000
         IF PLACE(SNAKE) = PLAC(SNAKE) THEN TALLY2=TALLY2+1;            19300000
         SPK=45;                                                        19310000
 L9125:  IF OBJ = 0 THEN SPK=44;                                        19320000
         IF OBJ = CLAM | OBJ = OYSTER THEN SPK=150;                     19330000
         IF OBJ = SNAKE THEN SPK=46;                                    19340000
         IF OBJ = DWARF THEN SPK=49;                                    19350000
         IF OBJ = DWARF & CLOSED THEN GOTO L19000;                      19360000
         IF OBJ = DRAGON THEN SPK=167;                                  19370000
         IF OBJ = TROLL THEN SPK=157;                                   19380000
         IF OBJ = BEAR THEN SPK=165+(PROP(BEAR)+1)/2;                   19390000
         IF OBJ ^= DRAGON | PROP(DRAGON) ^= 0 THEN GOTO L2011;          19400000
 /*                                                                     19410000
    FUN STUFF FOR DRAGON.  IF HE INSISTS ON ATTACKING IT,               19420000
    WIN!  SET PROP TO DEAD, MOVE DRAGON TO CENTRAL LOC (STILL           19430000
    FIXED), MOVE RUG THERE (NOT FIXED), AND MOVE HIM THERE,             19440000
    TOO.  THEN DO A NULL MOTION TO GET NEW DESCRIPTION.                 19450000
 */                                                                     19460000
         CALL RSPEAK(49);                                               19470000
         VERB=0;                                                        19480000
         OBJ=0;                                                         19490000
         CALL GETIN(WD1,WD1X,WD2,WD2X);                                 19500000
         IF WD1 ^= 'Y' & WD1 ^= 'YES' THEN GOTO L2608;                  19510000
         CALL PSPEAK(DRAGON,1);                                         19520000
         PROP(DRAGON)=2;                                                19530000
         PROP(RUG)=0;                                                   19540000
         K=(PLAC(DRAGON)+FIXD(DRAGON))/2;                               19550000
         CALL MOVE(DRAGON+100,-1);                                      19560000
         CALL MOVE(RUG+100,0);                                          19570000
         CALL MOVE(DRAGON,K);                                           19580000
         CALL MOVE(RUG,K);                                              19590000
         DO OBJ=1 TO 100;                                               19600000
         IF PLACE(OBJ) = PLAC(DRAGON) | PLACE(OBJ) = FIXD(DRAGON)       19610000
              THEN CALL MOVE(OBJ,K);                                    19620000
             END;                                                       19630000
         LOC=K;                                                         19640000
         K=NULLX;                                                       19650000
         GOTO L8;                                                       19660000
                                                                        19670000
 /*                                                                     19680000
    POUR.  IF NO OBJECT, OR OBJECT IS BOTTLE, ASSUME CONTENTS           19690000
    OF BOTTLE.  SPECIAL TESTS FOR POURING WATER OR OIL ON               19700000
    PLANT OR RUSTY DOOR.                                                19710000
 */                                                                     19720000
                                                                        19730000
 L9130:  IF OBJ = BOTTLE | OBJ = 0 THEN OBJ=LIQ(0);                     19740000
         IF OBJ = 0 THEN GOTO L8000;                                    19750000
         IF ^TOTING(OBJ) THEN GOTO L2011;                               19760000
         SPK=78;                                                        19770000
         IF OBJ ^= OIL & OBJ ^= WATER THEN GOTO L2011;                  19780000
         PROP(BOTTLE)=1;                                                19790000
         PLACE(OBJ)=0;                                                  19800000
         SPK=77;                                                        19810000
         IF ^(AT(PLANT) | AT(DOOR)) THEN GOTO L2011;                    19820000
                                                                        19830000
         IF AT(DOOR) THEN GOTO L9132;                                   19840000
         SPK=112;                                                       19850000
         IF OBJ ^= WATER THEN GOTO L2011;                               19860000
         CALL PSPEAK(PLANT,PROP(PLANT)+1);                              19870000
         PROP(PLANT)=MOD(PROP(PLANT)+2,6);                              19880000
         PROP(PLANT2)=PROP(PLANT)/2;                                    19890000
         K=NULLX;                                                       19900000
         GOTO L8;                                                       19910000
                                                                        19920000
 L9132:  PROP(DOOR)=0;                                                  19930000
         IF OBJ = OIL THEN PROP(DOOR)=1;                                19940000
         SPK=113+PROP(DOOR);                                            19950000
         GOTO L2011;                                                    19960000
                                                                        19970000
 /*                                                                     19980000
    EAT.  INTRANSITIVE:  ASSUME FOOD IF PRESENT, ELSE ASK               19990000
    WHAT.  TRANSITIVE:  FOOD OK, SOME THINGS LOSE APPETITE,             20000000
    REST ARE RIDICULOUS.                                                20010000
 */                                                                     20020000
                                                                        20030000
 L8140:  IF ^HERE(FOOD) THEN GOTO L8000;                                20040000
 L8142:  CALL DSTROY(FOOD);                                             20050000
         SPK=72;                                                        20060000
         GOTO L2011;                                                    20070000
                                                                        20080000
 L9140:  IF OBJ = FOOD THEN GOTO L8142;                                 20090000
         IF OBJ = BIRD | OBJ = SNAKE | OBJ = CLAM | OBJ = OYSTER        20100000
          | OBJ = DWARF | OBJ = DRAGON | OBJ = TROLL                    20110000
          | OBJ = BEAR THEN SPK=71;                                     20120000
         GOTO L2011;                                                    20130000
                                                                        20140000
 /*                                                                     20150000
    DRINK.  IF NO OBJECT, ASSUME WATER AND LOOK FOR IT HERE.            20160000
    IF WATER IS IN THE BOTTLE, DRINK THAT, ELSE MUST BE AT A            20170000
    WATER LOC, SO DRINK STREAM.                                         20180000
 */                                                                     20190000
                                                                        20200000
 L9150:  IF OBJ = 0 & LIQLOC(LOC) ^= WATER & (LIQ(0) ^= WATER           20210000
          |  ^ HERE(BOTTLE)) THEN GOTO L8000;                           20220000
         IF OBJ ^= 0 & OBJ ^= WATER THEN SPK=110;                       20230000
         IF SPK = 110 | LIQ(0) ^= WATER |  ^ HERE(BOTTLE)               20240000
              THEN GOTO L2011;                                          20250000
         PROP(BOTTLE)=1;                                                20260000
         PLACE(WATER)=0;                                                20270000
         SPK=74;                                                        20280000
         GOTO L2011;                                                    20290000
                                                                        20300000
 /* RUB.  YIELDS VARIOUS SNIDE REMARKS. */                              20310000
                                                                        20320000
 L9160:  IF OBJ ^= LAMP THEN SPK=76;                                    20330000
         GOTO L2011;                                                    20340000
                                                                        20350000
 /*                                                                     20360000
    THROW.  SAME AS DISCARD UNLESS AXE.  THEN SAME AS ATTACK            20370000
    EXCEPT IGNORE BIRD, AND IF DWARF IS PRESENT THEN ONE                20380000
    MIGHT BE KILLED.  (ONLY WAY TO DO SO!) AXE ALSO SPECIAL             20390000
    FOR DRAGON, BEAR, AND TROLL.  TREASURES SPECIAL FOR                 20400000
    TROLL.                                                              20410000
 */                                                                     20420000
                                                                        20430000
 L9170:  IF TOTING(ROD2) & OBJ = ROD &  ^ TOTING(ROD) THEN OBJ=ROD2;    20440000
         IF ^TOTING(OBJ) THEN GOTO L2011;                               20450000
         IF OBJ >= 50 & OBJ <= MAXTRS & AT(TROLL) THEN GOTO L9178;      20460000
         IF OBJ = FOOD & HERE(BEAR) THEN GOTO L9177;                    20470000
         IF OBJ ^= AXE THEN GOTO L9020;                                 20480000
         DO I=1 TO 5;                                                   20490000
                                                                        20500000
 /* NEEDN'T CHECK DFLAG IF AXE IS HERE. */                              20510000
                                                                        20520000
             IF DLOC(I) = LOC THEN GOTO L9172;                          20530000
             END;                                                       20540000
         SPK=152;                                                       20550000
         IF AT(DRAGON) & PROP(DRAGON) = 0 THEN GOTO L9175;              20560000
         SPK=158;                                                       20570000
         IF AT(TROLL) THEN GOTO L9175;                                  20580000
         IF HERE(BEAR) & PROP(BEAR) = 0 THEN GOTO L9176;                20590000
         OBJ=0;                                                         20600000
         GOTO L9120;                                                    20610000
                                                                        20620000
 L9172:  SPK=48;                                                        20630000
                                                                        20640000
                                                                        20650000
         IF RAN(3) = 0 THEN GO TO L9175;                                20660000
         DSEEN(I)='0'B;                                                 20670000
         DLOC(I)=0;                                                     20680000
         SPK=47;                                                        20690000
         DKILL=DKILL+1;                                                 20700000
         IF DKILL = 1 THEN SPK=149;                                     20710000
 L9175:  CALL RSPEAK(SPK);                                              20720000
         CALL DROP(AXE,LOC);                                            20730000
         K=NULLX;                                                       20740000
         GOTO L8;                                                       20750000
                                                                        20760000
 /* THIS'LL TEACH HIM TO THROW THE AXE AT THE BEAR! */                  20770000
                                                                        20780000
 L9176:  SPK=164;                                                       20790000
         CALL DROP(AXE,LOC);                                            20800000
         FIXED(AXE)=-1;                                                 20810000
         PROP(AXE)=1;                                                   20820000
         CALL JUGGLE(BEAR);                                             20830000
         GOTO L2011;                                                    20840000
                                                                        20850000
 /* BUT THROWING FOOD IS ANOTHER STORY. */                              20860000
                                                                        20870000
 L9177:  OBJ=BEAR;                                                      20880000
         GOTO L9210;                                                    20890000
                                                                        20900000
 L9178:  SPK=159;                                                       20910000
                                                                        20920000
 /* SNARF A TREASURE FOR THE TROLL. */                                  20930000
                                                                        20940000
         CALL DROP(OBJ,0);                                              20950000
         CALL MOVE(TROLL,0);                                            20960000
         CALL MOVE(TROLL+100,0);                                        20970000
         CALL DROP(TROLL2,PLAC(TROLL));                                 20980000
         CALL DROP(TROLL2+100,FIXD(TROLL));                             20990000
         CALL JUGGLE(CHASM);                                            21000000
         GOTO L2011;                                                    21010000
                                                                        21020000
 /* QUIT.  INTRANSITIVE ONLY.  VERIFY INTENT AND EXIT IF                21030000
    THAT'S WHAT HE WANTS.  */                                           21040000
                                                                        21050000
 L8180:  GAVEUP=YES(22,54,54);                                          21060000
 L8185:  IF GAVEUP THEN GOTO L20000;                                    21070000
         GOTO L2012;                                                    21080000
                                                                        21090000
 /* FIND.  MIGHT BE CARRYING IT, OR IT MIGHT BE HERE.  ELSE             21100000
    GIVE CAVEAT.  */                                                    21110000
                                                                        21120000
 L9190:  IF AT(OBJ) | (LIQ(0) = OBJ & AT(BOTTLE))                       21130000
          | K = LIQLOC(LOC) THEN SPK=94;                                21140000
         DO I=1 TO 5;                                                   21150000
             IF DLOC(I) = LOC & DFLAG >= 2 & OBJ = DWARF THEN SPK=94;   21160000
             END;                                                       21170000
         IF CLOSED THEN SPK=138;                                        21180000
         IF TOTING(OBJ) THEN SPK=24;                                    21190000
         GOTO L2011;                                                    21200000
                                                                        21210000
 /* INVENTORY.  IF OBJECT, TREAT SAME AS FIND.  ELSE REPORT             21220000
    ON CURRENT BURDEN.  */                                              21230000
                                                                        21240000
 L8200:  SPK=98;                                                        21250000
         DO I=1 TO 100;                                                 21260000
            IF I = BEAR |  ^ TOTING(I) THEN GOTO L8201;                 21270000
            IF SPK = 98 THEN CALL RSPEAK(99);                           21280000
            BLKLIN='0'B;                                                21290000
            CALL PSPEAK(I,-1);                                          21300000
            BLKLIN='1'B;                                                21310000
            SPK=0;                                                      21320000
 L8201:     END;                                                        21330000
         IF TOTING(BEAR) THEN SPK=141;                                  21340000
         GOTO L2011;                                                    21350000
                                                                        21360000
 /*                                                                     21370000
 FEED.  IF BIRD, NO SEED.  SNAKE, DRAGON, TROLL:  QUIP.  IF             21380000
    DWARF, MAKE HIM MAD.  BEAR, SPECIAL.                                21390000
 */                                                                     21400000
                                                                        21410000
 L9210:  IF OBJ ^= BIRD THEN GOTO L9212;                                21420000
         SPK=100;                                                       21430000
         GOTO L2011;                                                    21440000
                                                                        21450000
 L9212:  IF OBJ ^= SNAKE & OBJ ^= DRAGON & OBJ ^= TROLL THEN GOTO L9213;21460000
         SPK=102;                                                       21470000
         IF OBJ = DRAGON & PROP(DRAGON) ^= 0 THEN SPK=110;              21480000
         IF OBJ = TROLL THEN SPK=182;                                   21490000
         IF OBJ ^= SNAKE | CLOSED |  ^ HERE(BIRD) THEN GOTO L2011;      21500000
         SPK=101;                                                       21510000
         CALL DSTROY(BIRD);                                             21520000
         PROP(BIRD)=0;                                                  21530000
         TALLY2=TALLY2+1;                                               21540000
         GOTO L2011;                                                    21550000
                                                                        21560000
 L9213:  IF OBJ ^= DWARF THEN GOTO L9214;                               21570000
         IF ^HERE(FOOD) THEN GOTO L2011;                                21580000
         SPK=103;                                                       21590000
         DFLAG=DFLAG+1;                                                 21600000
         GOTO L2011;                                                    21610000
                                                                        21620000
 L9214:  IF OBJ ^= BEAR THEN GOTO L9215;                                21630000
         IF PROP(BEAR) = 0 THEN SPK=102;                                21640000
         IF PROP(BEAR) = 3 THEN SPK=110;                                21650000
         IF ^HERE(FOOD) THEN GOTO L2011;                                21660000
         CALL DSTROY(FOOD);                                             21670000
         PROP(BEAR)=1;                                                  21680000
         FIXED(AXE)=0;                                                  21690000
         PROP(AXE)=0;                                                   21700000
         SPK=168;                                                       21710000
         GOTO L2011;                                                    21720000
                                                                        21730000
 L9215:  SPK=14;                                                        21740000
         GOTO L2011;                                                    21750000
                                                                        21760000
 /* FILL.  BOTTLE MUST BE EMPTY, AND SOME LIQUID AVAILABLE.             21770000
    (VASE IS NASTY.) */                                                 21780000
                                                                        21790000
 L9220:  IF OBJ = VASE THEN GOTO L9222;                                 21800000
         IF OBJ ^= 0 & OBJ ^= BOTTLE THEN GOTO L2011;                   21810000
         IF OBJ = 0 &  ^ HERE(BOTTLE) THEN GOTO L8000;                  21820000
         SPK=107;                                                       21830000
         IF LIQLOC(LOC) = 0 THEN SPK=106;                               21840000
         IF LIQ(0) ^= 0 THEN SPK=105;                                   21850000
         IF SPK ^= 107 THEN GOTO L2011;                                 21860000
         PROP(BOTTLE)=MOD(COND(LOC),4)/2;                               21870000
         PROP(BOTTLE)=PROP(BOTTLE)*2;                                   21880000
         K=LIQ(0);                                                      21890000
         IF TOTING(BOTTLE) THEN PLACE(K)=-1;                            21900000
         IF K = OIL THEN SPK=108;                                       21910000
         GOTO L2011;                                                    21920000
                                                                        21930000
 L9222:  SPK=29;                                                        21940000
         IF LIQLOC(LOC) = 0 THEN SPK=144;                               21950000
         IF LIQLOC(LOC) = 0 |  ^TOTING(VASE) THEN GOTO L2011;           21960000
         CALL RSPEAK(145);                                              21970000
         PROP(VASE)=2;                                                  21980000
         FIXED(VASE)=-1;                                                21990000
         GOTO L9024;                                                    22000000
                                                                        22010000
 /* BLAST.  NO EFFECT UNLESS YOU'VE GOT DYNAMITE, WHICH IS A            22020000
    NEAT TRICK!  */                                                     22030000
                                                                        22040000
 L9230:  IF PROP(ROD2) < 0 |  ^ CLOSED THEN GOTO L2011;                 22050000
         BONUS=133;                                                     22060000
         IF LOC = 115 THEN BONUS=134;                                   22070000
         IF HERE(ROD2) THEN BONUS=135;                                  22080000
         CALL RSPEAK(BONUS);                                            22090000
         GOTO L20000;                                                   22100000
                                                                        22110000
 /* SCORE.  GO TO SCORING SECTION, WHICH WILL RETURN TO 8241            22120000
    IF SCORNG IS TRUE.  */                                              22130000
                                                                        22140000
 L8240:  SCORNG='1'B;                                                   22150000
         GOTO L20000;                                                   22160000
                                                                        22170000
 L8241:  SCORNG='0'B;                                                   22180000
         CALL LINESKP;                                                  22190000
         PUT STRING (OUTSTR) EDIT                                       22200000
              ('If you were to quit now, you would score ',             22210000
             SCORE,' out of a possible',MXSCOR,'.') (A,F(4),A,F(4),A);  22220000
         CALL LINEOUT;                                                  22230000
         GAVEUP=YES(143,54,54);                                         22240000
         GOTO L8185;                                                    22250000
                                                                        22260000
 /*                                                                     22270000
    FEE FIE FOE FOO (AND FUM).  ADVANCE TO NEXT STATE IF GIVEN          22280000
    IN PROPER ORDER.  LOOK UP WD1 IN SECTION 3 OF VOCAB TO              22290000
    DETERMINE WHICH WORD WE'VE GOT.  LAST WORD ZIPS THE EGGS            22300000
    BACK TO THE GIANT ROOM (UNLESS ALREADY THERE).                      22310000
 */                                                                     22320000
                                                                        22330000
 L8250:  K=VOCAB(WD1,3);                                                22340000
         SPK=42;                                                        22350000
         IF FOOBAR = 1-K THEN GOTO L8252;                               22360000
         IF FOOBAR ^= 0 THEN SPK=151;                                   22370000
         GOTO L2011;                                                    22380000
                                                                        22390000
 L8252:  FOOBAR=K;                                                      22400000
         IF K ^= 4 THEN GOTO L2009;                                     22410000
         FOOBAR=0;                                                      22420000
         IF PLACE(EGGS) = PLAC(EGGS)                                    22430000
          | (TOTING(EGGS) & LOC = PLAC(EGGS)) THEN GOTO L2011;          22440000
                                                                        22450000
 /* BRING BACK TROLL IF WE STEAL THE EGGS BACK FROM HIM                 22460000
    BEFORE CROSSING.  */                                                22470000
                                                                        22480000
         IF PLACE(EGGS) = 0 & PLACE(TROLL) = 0 & PROP(TROLL) = 0        22490000
          THEN PROP(TROLL)=1;                                           22500000
         K=2;                                                           22510000
         IF HERE(EGGS) THEN K=1;                                        22520000
         IF LOC = PLAC(EGGS) THEN K=0;                                  22530000
         CALL MOVE(EGGS,PLAC(EGGS));                                    22540000
         CALL PSPEAK(EGGS,K);                                           22550000
         GOTO L2012;                                                    22560000
                                                                        22570000
 /* BRIEF.  INTRANSITIVE ONLY.  SUPPRESS LONG DESCRIPTIONS              22580000
    AFTER FIRST TIME.  */                                               22590000
                                                                        22600000
 L8260:  SPK=156;                                                       22610000
         ABBNUM=10000;                                                  22620000
         DETAIL=3;                                                      22630000
         GOTO L2011;                                                    22640000
                                                                        22650000
 /* READ.  MAGAZINES IN DWARVISH, MESSAGE WE'VE SEEN, AND .             22660000
    .  .  OYSTER?  */                                                   22670000
                                                                        22680000
 L8270:  IF HERE(MAGZIN) THEN OBJ=MAGZIN;                               22690000
         IF HERE(TABLET) THEN OBJ=OBJ*100+TABLET;                       22700000
         IF HERE(MESSAG) THEN OBJ=OBJ*100+MESSAG;                       22710000
         IF CLOSED & TOTING(OYSTER) THEN OBJ=OYSTER;                    22720000
         IF OBJ > 100 | OBJ = 0 | DARK(0) THEN GOTO L8000;              22730000
                                                                        22740000
 L9270:  IF DARK(0) THEN GOTO L5190;                                    22750000
         IF OBJ = MAGZIN THEN SPK=190;                                  22760000
         IF OBJ = TABLET THEN SPK=196;                                  22770000
         IF OBJ = MESSAG THEN SPK=191;                                  22780000
         IF OBJ = OYSTER & HINTED(2) & TOTING(OYSTER) THEN SPK=194;     22790000
         IF OBJ ^= OYSTER | HINTED(2) |  ^TOTING(OYSTER)                22800000
          |  ^CLOSED THEN GOTO L2011;                                   22810000
         HINTED(2)=YES(192,193,54);                                     22820000
         GOTO L2012;                                                    22830000
                                                                        22840000
 /* BREAK.  ONLY WORKS FOR MIRROR IN REPOSITORY AND, OF                 22850000
    COURSE, THE VASE.  */                                               22860000
                                                                        22870000
 L9280:  IF OBJ = MIRROR THEN SPK=148;                                  22880000
         IF OBJ = VASE & PROP(VASE) = 0 THEN GOTO L9282;                22890000
         IF OBJ ^= MIRROR |  ^CLOSED THEN GOTO L2011;                   22900000
         CALL RSPEAK(197);                                              22910000
         GOTO L19000;                                                   22920000
                                                                        22930000
 L9282:  SPK=198;                                                       22940000
         IF TOTING(VASE) THEN CALL DROP(VASE,LOC);                      22950000
         PROP(VASE)=2;                                                  22960000
         FIXED(VASE)=-1;                                                22970000
         GOTO L2011;                                                    22980000
                                                                        22990000
 /* WAKE.  ONLY USE IS TO DISTURB THE DWARVES. */                       23000000
                                                                        23010000
 L9290:  IF OBJ ^= DWARF |  ^CLOSED THEN GOTO L2011;                    23020000
         CALL RSPEAK(199);                                              23030000
         GOTO L19000;                                                   23040000
                                                                        23050000
 /*                                                                     23060000
    SUSPEND.  OFFER TO EXIT LEAVING THINGS RESTARTABLE, BUT             23070000
    REQUIRING A DELAY BEFORE RESTARTING (SO CAN'T SAVE THE              23080000
    WORLD BEFORE TRYING SOMETHING RISKY).  UPON RESTARTING,             23090000
    SETUP=-1 CAUSES RETURN TO 8305 TO PICK UP AGAIN.                    23100000
 */                                                                     23110000
                                                                        23120000
 L8300:  PUT STRING (OUTSTR) EDIT                                       23130000
               ('Can''t suspend on this machine') (A);                  23140000
         CALL LINEOUT;                                                  23150000
         GO TO L2012;                                                   23160000
                                                                        23170000
 /* HOURS.  REPORT CURRENT NON-PRIME-TIME HOURS. */                     23180000
                                                                        23190000
 L8310:  PUT STRING (OUTSTR) EDIT ('Open all day!') (A);                23200000
         CALL LINEOUT;                                                  23210000
         GOTO L2012;                                                    23220000
                                                                        23230000
 /* LOG.  TOGGLE LOGGIN EITHER ON OR OFF */                             23240000
                                                                        23250000
 SETLOG: LOGON = ^ LOGON;                                               23260000
         IF LOGON THEN PUT STRING (OUTSTR) EDIT ('Log on.') (A);        23270000
                  ELSE PUT STRING (OUTSTR) EDIT ('Log off.') (A);       23280000
         CALL LINEOUT;                                                  23290000
         CALL LINESKP;                                                  23300000
         GO TO L2012;                                                   23310000
                                                                        23320000
1/*                                                                     23330000
    HINTS                                                               23340000
                                                                        23350000
    COME HERE IF HE'S BEEN LONG ENOUGH AT REQUIRED LOC(S) FOR           23360000
    SOME UNUSED HINT.  HINT NUMBER IS IN VARIABLE "HINT".               23370000
    BRANCH TO QUICK TEST FOR ADDITIONAL CONDITIONS, THEN COME           23380000
    BACK TO DO NEAT STUFF.  GOTO 40010 IF CONDITIONS ARE MET            23390000
    AND WE WANT TO OFFER THE HINT.  GOTO 40020 TO CLEAR                 23400000
    HINTLC BACK TO ZERO, 40030 TO TAKE NO ACTION YET.                   23410000
 */                                                                     23420000
                                                                        23430000
 L40000: SELECT (HINT-4);                                               23440000
             WHEN (00) GO TO L40400;        /* CAVE */                  23450000
             WHEN (01) GO TO L40500;        /* BIRD */                  23460000
             WHEN (02) GO TO L40600;        /* SNAKE */                 23470000
             WHEN (03) GO TO L40700;        /* MAZE */                  23480000
             WHEN (04) GO TO L40800;        /* DARK */                  23490000
             WHEN (05) GO TO L40900;        /* WITT */                  23500000
             END;                                                       23510000
         CALL BUG(27);                                                  23520000
                                                                        23530000
 L40010: HINTLC(HINT)=0;                                                23540000
         IF ^YES(HINTS(HINT,3),0,54) THEN GOTO L2602;                   23550000
         CALL LINESKP;                                                  23560000
         PUT STRING (OUTSTR) EDIT                                       23570000
           ('I am prepared to give you a hint, but it will cost you',   23580000
              HINTS(HINT,2),' points.') (A,F(2),A);                     23590000
         CALL LINEOUT;                                                  23600000
         HINTED(HINT)=YES(175,HINTS(HINT,4),54);                        23610000
         IF HINTED(HINT) & LIMIT > 30                                   23620000
                THEN LIMIT=LIMIT+30*HINTS(HINT,2);                      23630000
 L40020: HINTLC(HINT)=0;                                                23640000
 L40030: GOTO L2602;                                                    23650000
                                                                        23660000
 /* NOW FOR THE QUICK TESTS.  SEE DATABASE DESCRIPTION FOR              23670000
    ONE-LINE NOTES.  */                                                 23680000
                                                                        23690000
 L40400: IF PROP(GRATE) = 0 &  ^ HERE(KEYS) THEN GOTO L40010;           23700000
         GOTO L40020;                                                   23710000
                                                                        23720000
 L40500: IF HERE(BIRD) & TOTING(ROD) & OBJ = BIRD THEN GOTO L40010;     23730000
         GOTO L40030;                                                   23740000
                                                                        23750000
 L40600: IF HERE(SNAKE) &  ^ HERE(BIRD) THEN GOTO L40010;               23760000
         GOTO L40020;                                                   23770000
                                                                        23780000
 L40700: IF ATLOC(LOC) = 0 & ATLOC(OLDLOC) = 0                          23790000
          & ATLOC(OLDLC2) = 0 & HOLDNG > 1 THEN GOTO L40010;            23800000
         GOTO L40020;                                                   23810000
                                                                        23820000
 L40800: IF PROP(EMRALD) ^= -1 & PROP(PYRAM) = -1 THEN GOTO L40010;     23830000
         GOTO L40020;                                                   23840000
                                                                        23850000
 L40900: GOTO L40010;                                                   23860000
                                                                        23870000
1/*                                                                     23880000
    CAVE CLOSING AND SCORING                                            23890000
                                                                        23900000
                                                                        23910000
    THESE SECTIONS HANDLE THE CLOSING OF THE CAVE.  THE CAVE            23920000
    CLOSES "CLOCK1" TURNS AFTER THE LAST TREASURE HAS BEEN              23930000
    LOCATED (INCLUDING THE PIRATE'S CHEST, WHICH MAY OF                 23940000
    COURSE NEVER SHOW UP).  NOTE THAT THE TREASURES NEED NOT            23950000
    HAVE BEEN TAKEN YET, JUST LOCATED.  HENCE CLOCK1 MUST BE            23960000
    LARGE ENOUGH TO GET OUT OF THE CAVE (IT ONLY TICKS WHILE            23970000
    INSIDE THE CAVE).  WHEN IT HITS ZERO, WE BRANCH TO 10000            23980000
    TO START CLOSING THE CAVE, AND THEN SIT BACK AND WAIT FOR           23990000
    HIM TO TRY TO GET OUT.  IF HE DOESN'T WITHIN CLOCK2                 24000000
    TURNS, WE CLOSE THE CAVE; IF HE DOES TRY, WE ASSUME HE              24010000
    PANICS, AND GIVE HIM A FEW ADDITIONAL TURNS TO GET                  24020000
    FRANTIC BEFORE WE CLOSE.  WHEN CLOCK2 HITS ZERO, WE                 24030000
    BRANCH TO 11000 TO TRANSPORT HIM INTO THE FINAL PUZZLE.             24040000
    NOTE THAT THE PUZZLE DEPENDS UPON ALL SORTS OF RANDOM               24050000
    THINGS.  FOR INSTANCE, THERE MUST BE NO WATER OR OIL,               24060000
    SINCE THERE ARE BEANSTALKS WHICH WE DON'T WANT TO BE ABLE           24070000
    TO WATER, SINCE THE CODE CAN'T HANDLE IT.  ALSO, WE CAN             24080000
    HAVE NO KEYS, SINCE THERE IS A GRATE (HAVING MOVED THE              24090000
    FIXED OBJECT!) THERE SEPARATING HIM FROM ALL THE                    24100000
    TREASURES.  MOST OF THESE PROBLEMS ARISE FROM THE USE OF            24110000
    NEGATIVE PROP NUMBERS TO SUPPRESS THE OBJECT DESCRIPTIONS           24120000
    UNTIL HE'S ACTUALLY MOVED THE OBJECTS.                              24130000
                                                                        24140000
    WHEN THE FIRST WARNING COMES, WE LOCK THE GRATE, DESTROY            24150000
    THE BRIDGE, KILL ALL THE DWARVES (AND THE PIRATE), REMOVE           24160000
    THE TROLL AND BEAR (UNLESS DEAD), AND SET "CLOSNG" TO               24170000
    TRUE.  LEAVE THE DRAGON; TOO MUCH TROUBLE TO MOVE IT.               24180000
    FROM NOW UNTIL CLOCK2 RUNS OUT, HE CANNOT UNLOCK THE                24190000
    GRATE, MOVE TO ANY LOCATION OUTSIDE THE CAVE (LOC<9), OR            24200000
    CREATE THE BRIDGE.  NOR CAN HE BE RESURRECTED IF HE DIES.           24210000
    NOTE THAT THE SNAKE IS ALREADY GONE, SINCE HE GOT TO THE            24220000
    TREASURE ACCESSIBLE ONLY VIA THE HALL OF THE MT.  KING.             24230000
    ALSO, HE'S BEEN IN GIANT ROOM (TO GET EGGS), SO WE CAN              24240000
    REFER TO IT.  ALSO ALSO, HE'S GOTTEN THE PEARL, SO WE               24250000
    KNOW THE BIVALVE IS AN OYSTER.  *AND*, THE DWARVES MUST             24260000
    HAVE BEEN ACTIVATED, SINCE WE'VE FOUND CHEST.                       24270000
 */                                                                     24280000
                                                                        24290000
 L10000: PROP(GRATE)=0;                                                 24300000
         PROP(FISSUR)=0;                                                24310000
         DO I=1 TO 6;                                                   24320000
             DSEEN(I)='0'B;                                             24330000
             END;                                                       24340000
         CALL MOVE(TROLL,0);                                            24350000
         CALL MOVE(TROLL+100,0);                                        24360000
         CALL MOVE(TROLL2,PLAC(TROLL));                                 24370000
         CALL MOVE(TROLL2+100,FIXD(TROLL));                             24380000
         CALL JUGGLE(CHASM);                                            24390000
         IF PROP(BEAR) ^= 3 THEN CALL DSTROY(BEAR);                     24400000
         PROP(CHAIN)=0;                                                 24410000
         FIXED(CHAIN)=0;                                                24420000
         PROP(AXE)=0;                                                   24430000
         FIXED(AXE)=0;                                                  24440000
         CALL RSPEAK(129);                                              24450000
         CLOCK1=-1;                                                     24460000
         CLOSNG='1'B;                                                   24470000
         GOTO L19999;                                                   24480000
                                                                        24490000
 /*                                                                     24500000
    ONCE HE'S PANICKED, AND CLOCK2 HAS RUN OUT, WE COME HERE            24510000
    TO SET UP THE STORAGE ROOM.  THE ROOM HAS TWO LOCS,                 24520000
    HARDWIRED AS 115 (NE) AND 116 (SW).  AT THE NE END, WE              24530000
    PLACE EMPTY BOTTLES, A NURSERY OF PLANTS, A BED OF                  24540000
    OYSTERS, A PILE OF LAMPS, RODS WITH STARS, SLEEPING                 24550000
    DWARVES, AND HIM.  AND THE SW END WE PLACE GRATE OVER               24560000
    TREASURES, SNAKE PIT, COVEY OF CAGED BIRDS, MORE RODS,              24570000
    AND PILLOWS.  A MIRROR STRETCHES ACROSS ONE WALL.  MANY             24580000
    OF THE OBJECTS COME FROM KNOWN LOCATIONS AND/OR STATES              24590000
    (E.G.  THE SNAKE IS KNOWN TO HAVE BEEN DESTROYED AND                24600000
    NEEDN'T BE CARRIED AWAY FROM ITS OLD "PLACE"), MAKING THE           24610000
    VARIOUS OBJECTS BE HANDLED DIFFERENTLY.  WE ALSO DROP ALL           24620000
    OTHER OBJECTS HE MIGHT BE CARRYING (LEST HE HAVE SOME               24630000
    WHICH COULD CAUSE TROUBLE, SUCH AS THE KEYS).  WE                   24640000
    DESCRIBE THE FLASH OF LIGHT AND TRUNDLE BACK.                       24650000
 */                                                                     24660000
                                                                        24670000
 L11000: PROP(BOTTLE)=PUT(BOTTLE,115,1);                                24680000
         PROP(PLANT)=PUT(PLANT,115,0);                                  24690000
         PROP(OYSTER)=PUT(OYSTER,115,0);                                24700000
         PROP(LAMP)=PUT(LAMP,115,0);                                    24710000
         PROP(ROD)=PUT(ROD,115,0);                                      24720000
         PROP(DWARF)=PUT(DWARF,115,0);                                  24730000
         LOC=115;                                                       24740000
         OLDLOC=115;                                                    24750000
         NEWLOC=115;                                                    24760000
                                                                        24770000
 /* LEAVE THE GRATE WITH NORMAL (NON-NEGATIVE PROPERTY). */             24780000
                                                                        24790000
         FOO=PUT(GRATE,116,0);                                          24800000
         PROP(SNAKE)=PUT(SNAKE,116,1);                                  24810000
         PROP(BIRD)=PUT(BIRD,116,1);                                    24820000
         PROP(CAGE)=PUT(CAGE,116,0);                                    24830000
         PROP(ROD2)=PUT(ROD2,116,0);                                    24840000
         PROP(PILLOW)=PUT(PILLOW,116,0);                                24850000
                                                                        24860000
         PROP(MIRROR)=PUT(MIRROR,115,0);                                24870000
         FIXED(MIRROR)=116;                                             24880000
                                                                        24890000
         DO I=1 TO 100;                                                 24900000
             IF TOTING(I) THEN CALL DSTROY(I);                          24910000
             END;                                                       24920000
                                                                        24930000
         CALL RSPEAK(132);                                              24940000
         CLOSED='1'B;                                                   24950000
         GOTO L2;                                                       24960000
                                                                        24970000
 /*                                                                     24980000
    ANOTHER WAY WE CAN FORCE AN END TO THINGS IS BY HAVING              24990000
    THE LAMP GIVE OUT.  WHEN IT GETS CLOSE, WE COME HERE TO             25000000
    WARN HIM.  WE GO TO 12000 IF THE LAMP AND FRESH BATTERIES           25010000
    ARE HERE, IN WHICH CASE WE REPLACE THE BATTERIES AND                25020000
    CONTINUE.  12200 IS FOR OTHER CASES OF LAMP DYING.  12400           25030000
    IS WHEN IT GOES OUT, AND 12600 IS IF HE'S WANDERED                  25040000
    OUTSIDE AND THE LAMP IS USED UP, IN WHICH CASE WE FORCE             25050000
    HIM TO GIVE UP.                                                     25060000
 */                                                                     25070000
                                                                        25080000
 L12000: CALL RSPEAK(188);                                              25090000
         PROP(BATTER)=1;                                                25100000
         IF TOTING(BATTER) THEN CALL DROP(BATTER,LOC);                  25110000
         LIMIT=LIMIT+2500;                                              25120000
         LMWARN='0'B;                                                   25130000
         GOTO L19999;                                                   25140000
                                                                        25150000
 L12200: IF LMWARN |  ^HERE(LAMP) THEN GOTO L19999;                     25160000
         LMWARN='1'B;                                                   25170000
         SPK=187;                                                       25180000
         IF PLACE(BATTER) = 0 THEN SPK=183;                             25190000
         IF PROP(BATTER) = 1 THEN SPK=189;                              25200000
         CALL RSPEAK(SPK);                                              25210000
         GOTO L19999;                                                   25220000
                                                                        25230000
 L12400: LIMIT=-1;                                                      25240000
         PROP(LAMP)=0;                                                  25250000
         IF HERE(LAMP) THEN CALL RSPEAK(184);                           25260000
         GOTO L19999;                                                   25270000
                                                                        25280000
 L12600: CALL RSPEAK(185);                                              25290000
         GAVEUP='1'B;                                                   25300000
         GOTO L20000;                                                   25310000
                                                                        25320000
 /* OH DEAR, HE'S DISTURBED THE DWARVES. */                             25330000
                                                                        25340000
 L19000: CALL RSPEAK(136);                                              25350000
                                                                        25360000
 /*                                                                     25370000
    EXIT CODE.  WILL EVENTUALLY INCLUDE SCORING.  FOR NOW, HOWEVER, ... 25380000
                                                                        25390000
    THE PRESENT SCORING ALGORITHM IS AS FOLLOWS:                        25400000
       OBJECTIVE:          POINTS:        PRESENT TOTAL POSSIBLE:       25410000
    GETTING WELL INTO CAVE   25                    25                   25420000
    EACH TREASURE < CHEST    12                    60                   25430000
    TREASURE CHEST ITSELF    14                    14                   25440000
    EACH TREASURE > CHEST    16                   144                   25450000
    SURVIVING             (MAX-NUM)*10             30                   25460000
    NOT QUITTING              4                     4                   25470000
    REACHING "CLOSNG"        25                    25                   25480000
    "CLOSED": QUIT/KILLED    10                                         25490000
              KLUTZED        25                                         25500000
              WRONG WAY      30                                         25510000
              SUCCESS        45                    45                   25520000
    CAME TO WITT'S END        1                     1                   25530000
    ROUND OUT THE TOTAL       2                     2                   25540000
                                         TOTAL:   350                   25550000
    (POINTS CAN ALSO BE DEDUCTED FOR USING HINTS.)                      25560000
 */                                                                     25570000
                                                                        25580000
 L20000: SCORE=0;                                                       25590000
         MXSCOR=0;                                                      25600000
                                                                        25610000
 /*                                                                     25620000
    FIRST TALLY UP THE TREASURES.  MUST BE IN BUILDING AND              25630000
    NOT BROKEN.  GIVE THE POOR GUY 2 POINTS JUST FOR FINDING            25640000
    EACH TREASURE.                                                      25650000
 */                                                                     25660000
                                                                        25670000
         DO I=50 TO MAXTRS;                                             25680000
             IF PTEXT(I) ^= 0 THEN DO;                                  25690000
                 K=12;                                                  25700000
                 IF I = CHEST THEN K=14;                                25710000
                 IF I > CHEST THEN K=16;                                25720000
                 IF PROP(I) >= 0 THEN SCORE=SCORE+2;                    25730000
                 IF PLACE(I) = 3 & PROP(I) = 0 THEN SCORE=SCORE+K-2;    25740000
                 MXSCOR=MXSCOR+K;                                       25750000
                 END;                                                   25760000
             END;                                                       25770000
                                                                        25780000
 /*                                                                     25790000
    NOW LOOK AT HOW HE FINISHED AND HOW FAR HE GOT.  MAXDIE             25800000
    AND NUMDIE TELL US HOW WELL HE SURVIVED.  GAVEUP SAYS               25810000
    WHETHER HE EXITED VIA QUIT.  DFLAG WILL TELL US IF HE               25820000
    EVER GOT SUITABLY DEEP INTO THE CAVE.  CLOSNG STILL                 25830000
    INDICATES WHETHER HE REACHED THE ENDGAME.  AND IF HE GOT            25840000
    AS FAR AS "CAVE CLOSED" (INDICATED BY "CLOSED"), THEN               25850000
    BONUS IS ZERO FOR MUNDANE EXITS OR 133, 134, 135 IF HE              25860000
    BLEW IT (SO TO SPEAK).                                              25870000
 */                                                                     25880000
                                                                        25890000
         SCORE=SCORE+(MAXDIE-NUMDIE)*10;                                25900000
         MXSCOR=MXSCOR+MAXDIE*10;                                       25910000
         IF ^(SCORNG | GAVEUP) THEN SCORE=SCORE+4;                      25920000
         MXSCOR=MXSCOR+4;                                               25930000
         IF DFLAG ^= 0 THEN SCORE=SCORE+25;                             25940000
         MXSCOR=MXSCOR+25;                                              25950000
         IF CLOSNG THEN SCORE=SCORE+25;                                 25960000
         MXSCOR=MXSCOR+25;                                              25970000
         IF ^CLOSED THEN GOTO L20020;                                   25980000
         IF BONUS = 0 THEN SCORE=SCORE+10;                              25990000
         IF BONUS = 135 THEN SCORE=SCORE+25;                            26000000
         IF BONUS = 134 THEN SCORE=SCORE+30;                            26010000
         IF BONUS = 133 THEN SCORE=SCORE+45;                            26020000
 L20020: MXSCOR=MXSCOR+45;                                              26030000
                                                                        26040000
 /* DID HE COME TO WITT'S END AS HE SHOULD? */                          26050000
                                                                        26060000
         IF PLACE(MAGZIN) = 108 THEN SCORE=SCORE+1;                     26070000
         MXSCOR=MXSCOR+1;                                               26080000
                                                                        26090000
 /* ROUND IT OFF. */                                                    26100000
                                                                        26110000
         SCORE=SCORE+2;                                                 26120000
         MXSCOR=MXSCOR+2;                                               26130000
                                                                        26140000
 /* DEDUCT POINTS FOR HINTS.  HINTS < 4 ARE SPECIAL; SEE                26150000
    DATABASE DESCRIPTION.  */                                           26160000
                                                                        26170000
         DO I=1 TO HNTMAX;                                              26180000
             IF HINTED(I) THEN SCORE=SCORE-HINTS(I,2);                  26190000
             END;                                                       26200000
                                                                        26210000
 /* RETURN TO SCORE COMMAND IF THAT'S WHERE WE CAME FROM. */            26220000
                                                                        26230000
         IF SCORNG THEN GOTO L8241;                                     26240000
                                                                        26250000
 /* THAT SHOULD BE GOOD ENOUGH.  LET'S TELL HIM ALL ABOUT IT. */        26260000
                                                                        26270000
         CALL LINESKP;                                                  26280000
         CALL LINESKP;                                                  26290000
         CALL LINESKP;                                                  26300000
         PUT STRING (OUTSTR) EDIT                                       26310000
             ('You scored',SCORE,' out of a possible',                  26320000
             MXSCOR,' using',TURNS,' turns.')                           26330000
            (A,F(4),A,F(4),A,F(4),A);                                   26340000
         CALL LINEOUT;                                                  26350000
                                                                        26360000
         DO I=1 TO CLSSES;                                              26370000
             IF CVAL(I) >= SCORE THEN GOTO L20210;                      26380000
             END;                                                       26390000
         CALL LINESKP;                                                  26400000
         PUT STRING (OUTSTR) EDIT ('You just went of my scale!!') (A);  26410000
         CALL LINEOUT;                                                  26420000
         GOTO L25000;                                                   26430000
                                                                        26440000
 L20210: CALL SPEAK(CTEXT(I));                                          26450000
         IF I = CLSSES-1 THEN GOTO L20220;                              26460000
         K=CVAL(I)+1-SCORE;                                             26470000
         KKWORD='s.';                                                   26480000
         IF K = 1 THEN KKWORD='. ';                                     26490000
         CALL LINESKP;                                                  26500000
         PUT STRING (OUTSTR) EDIT                                       26510000
             ('To achieve the next higher rating, you need',            26520000
                K,' more point',KKWORD) (A,F(3),A,A(2));                26530000
         CALL LINEOUT;                                                  26540000
         GOTO L25000;                                                   26550000
                                                                        26560000
 L20220: CALL LINESKP;                                                  26570000
         PUT STRING (OUTSTR) EDIT                                       26580000
          ('To achieve the next higher rating would be a neat trick!')  26590000
                (A);                                                    26600000
         CALL LINEOUT;                                                  26610000
         CALL LINESKP;                                                  26620000
         PUT STRING (OUTSTR) EDIT ('Congratulations!!') (A);            26630000
         CALL LINEOUT;                                                  26640000
                                                                        26650000
 L25000: CALL LINESKP;                                                  26660000
         STOP;                                                          26670000
1/*  SUBROUTINES/FUNCTIONS                                              26680000
                                                                        26690000
                                                                        26700000
    TOTING(OBJ)  = TRUE IF THE OBJ IS BEING CARRIED                     26710000
    HERE(OBJ)    = TRUE IF THE OBJ IS AT "LOC" (OR IS BEING CARRIED)    26720000
    AT(OBJ)      = TRUE IF ON EITHER SIDE OF TWO-PLACED OBJECT          26730000
    LIQ(DUMMY)   = OBJECT NUMBER OF LIQUID IN BOTTLE                    26740000
    LIQLOC(LOC)  = OBJECT NUMBER OF LIQUID (IF ANY) AT LOC              26750000
    BITSET(L,N)  = TRUE IF COND(L) HAS BIT N SET (BIT 0 IS UNITS BIT)   26760000
    FORCED(LOC)  = TRUE IF LOC MOVES WITHOUT ASKING FOR INPUT (COND=2)  26770000
    DARK(DUMMY)  = TRUE IF LOCATION "LOC" IS DARK                       26780000
    PCT(N)       = TRUE N% OF THE TIME (N INTEGER FROM 0 TO 100)        26790000
                                                                        26800000
 */                                                                     26810000
                                                                        26820000
 TOTING: PROC (OBJ) RETURNS (BIT(1));                                   26830000
                                                                        26840000
         DCL OBJ FIXED BIN(31);                                         26850000
                                                                        26860000
         RETURN(PLACE(OBJ) = -1);                                       26870000
         END;                                                           26880000
                                                                        26890000
 HERE: PROC (OBJ) RETURNS (BIT(1));                                     26900000
                                                                        26910000
         DCL OBJ FIXED BIN(31);                                         26920000
                                                                        26930000
         RETURN(PLACE(OBJ) = LOC | TOTING(OBJ));                        26940000
         END;                                                           26950000
                                                                        26960000
 AT: PROC (OBJ) RETURNS (BIT(1));                                       26970000
                                                                        26980000
         DCL OBJ FIXED BIN (31);                                        26990000
                                                                        27000000
         RETURN(PLACE(OBJ) = LOC | FIXED (OBJ) = LOC);                  27010000
         END;                                                           27020000
                                                                        27030000
 LIQ2: PROC (PBOTL) RETURNS (FIXED BIN(31));                            27040000
                                                                        27050000
         DCL PBOTL FIXED BIN(31);                                       27060000
         DCL LIQ2TEMP FIXED BIN(31);                                    27070000
                                                                        27080000
         LIQ2TEMP=PBOTL/2;                                              27090000
         RETURN((1-PBOTL)*WATER+(LIQ2TEMP)*(WATER+OIL));                27100000
         END;                                                           27110000
                                                                        27120000
 LIQ: PROC (DUMMY) RETURNS (FIXED BIN(31));                             27130000
                                                                        27140000
         DCL DUMMY FIXED BIN(31);                                       27150000
                                                                        27160000
         RETURN(LIQ2(MAX(PROP(BOTTLE),-1-PROP(BOTTLE))));               27170000
         END;                                                           27180000
                                                                        27190000
 LIQLOC: PROC (LOC) RETURNS (FIXED BIN(31));                            27200000
                                                                        27210000
         DCL LOC FIXED BIN(31);                                         27220000
         DCL (LIQTEMP1,LIQTEMP2) FIXED BIN(31);                         27230000
                                                                        27240000
         LIQTEMP1=COND(LOC)/2;                                          27250000
         LIQTEMP1=LIQTEMP1*2;                                           27260000
         LIQTEMP2=COND(LOC)/4;                                          27270000
         RETURN(LIQ2((MOD(LIQTEMP1,8)-5)*MOD(LIQTEMP2,2)+1));           27280000
         END;                                                           27290000
                                                                        27300000
 BITSET: PROC (L,N) RETURNS (BIT(1));                                   27310000
                                                                        27320000
         DCL (L,N) FIXED BIN(31);                                       27330000
         DCL BITTEMP FIXED BIN(31) STATIC;                              27340000
                                                                        27350000
         BITTEMP=COND(L)/2**N;                                          27360000
         RETURN(MOD(BITTEMP,2) ^= 0);                                   27370000
         END;                                                           27380000
                                                                        27390000
 FORCED: PROC (LOC) RETURNS (BIT(1));                                   27400000
                                                                        27410000
         DCL LOC FIXED BIN(31);                                         27420000
                                                                        27430000
         RETURN(COND(LOC) = 2);                                         27440000
         END;                                                           27450000
                                                                        27460000
 DARK: PROC (DUMMY) RETURNS (BIT(1));                                   27470000
                                                                        27480000
         DCL DUMMY FIXED BIN(31);                                       27490000
                                                                        27500000
         RETURN(MOD(COND(LOC),2) = 0 &                                  27510000
              (PROP(LAMP) = 0 | ^ HERE(LAMP)));                         27520000
         END;                                                           27530000
                                                                        27540000
 PCT: PROC (N) RETURNS (BIT(1));                                        27550000
                                                                        27560000
         DCL N FIXED BIN(31);                                           27570000
                                                                        27580000
         RETURN(RAN(100) < N);                                          27590000
         END;                                                           27600000
1/* I/O ROUTINES (SPEAK, PSPEAK, RSPEAK, GETIN, YES, A5TOA1) */         27610000
                                                                        27620000
                                                                        27630000
 SPEAK: PROC (N);                                                       27640000
                                                                        27650000
         DCL N FIXED BIN(31);                                           27660000
         DCL (I,K,L) FIXED BIN (31);                                    27670000
                                                                        27680000
 /*                                                                     27690000
    PRINT THE MESSAGE WHICH STARTS AT LINES(N).  PRECEDE IT             27700000
    WITH A BLANK LINE UNLESS BLKLIN IS FALSE.                           27710000
 */                                                                     27720000
                                                                        27730000
         IF N = 0 THEN RETURN;                                          27740000
         IF LINES(N+1) = '>$<' THEN RETURN;                             27750000
         IF (BLKLIN) THEN CALL LINESKP;                                 27760000
         K=N;                                                           27770000
 L1:     L=ABS(LINES(K))-1;                                             27780000
         K=K+1;                                                         27790000
         PUT STRING (OUTSTR) EDIT ((LINES(I) DO I=K TO L)) (14 A(5));   27800000
         CALL LINEOUT;                                                  27810000
         K=L+1;                                                         27820000
         IF LINES(K) >= 0 THEN GOTO L1;                                 27830000
         RETURN;                                                        27840000
         END;                                                           27850000
                                                                        27860000
                                                                        27870000
                                                                        27880000
 PSPEAK:PROC (MSG,SKIP);                                                27890000
                                                                        27900000
         DCL (MSG,SKIP) FIXED BIN(31);                                  27910000
         DCL (I,M) FIXED BIN (31);                                      27920000
                                                                        27930000
 /*                                                                     27940000
    FIND THE SKIP+1ST MESSAGE FROM MSG AND PRINT IT.  MSG               27950000
    SHOULD BE THE INDEX OF THE INVENTORY MESSAGE FOR OBJECT.            27960000
    (INVEN+N+1 MESSAGE IS PROP=N MESSAGE).                              27970000
 */                                                                     27980000
                                                                        27990000
         M=PTEXT(MSG);                                                  28000000
         IF SKIP < 0 THEN GOTO L9;                                      28010000
         DO I=0 TO SKIP;                                                28020000
 L1:         M=ABS(LINES(M));                                           28030000
             IF LINES(M) >= 0 THEN GOTO L1;                             28040000
             END;                                                       28050000
 L9:     CALL SPEAK(M);                                                 28060000
         RETURN;                                                        28070000
         END;                                                           28080000
                                                                        28090000
                                                                        28100000
                                                                        28110000
 RSPEAK: PROC (I);                                                      28120000
                                                                        28130000
         DCL I FIXED BIN(31);                                           28140000
                                                                        28150000
 /* PRINT THE I-TH "RANDOM" MESSAGE (SECTION 6 OF DATABASE). */         28160000
                                                                        28170000
         IF I ^= 0 THEN CALL SPEAK(RTEXT(I));                           28180000
         RETURN;                                                        28190000
         END;                                                           28200000
                                                                        28210000
 GETIN: PROC (WORD1,WORD1X,WORD2,WORD2X);                               28220000
                                                                        28230000
 /*                                                                     28240000
    GET A COMMAND FROM THE ADVENTURER.  SNARF OUT THE FIRST             28250000
    WORD, PAD IT WITH BLANKS, AND RETURN IT IN WORD1.  CHARS            28260000
    6 THRU 10 ARE RETURNED IN WORD1X, IN CASE WE NEED TO                28270000
    PRINT OUT THE WHOLE WORD IN AN ERROR MESSAGE.  ANY NUMBER           28280000
    OF BLANKS MAY FOLLOW THE WORD.  IF A SECOND WORD APPEARS,           28290000
    IT IS RETURNED IN WORD2 (CHARS 6 THRU 10 IN WORD2X), ELSE           28300000
    WORD2 IS SET TO ZERO.                                               28310000
 */                                                                     28320000
                                                                        28330000
         DCL (WORD1,WORD1X,WORD2,WORD2X) CHAR(5);                       28340000
                                                                        28350000
         WORD1,WORD1X,WORD2,WORD2X='     ';                             28360000
         IF LOGON THEN PUT SKIP;                                        28370000
         WORDSTRT=0;                                                    28380000
         DO WHILE (WORDSTRT = 0);                                       28390000
             IF BLKLIN THEN CALL LINESKP;                               28400000
             CALL TREAD(INSTR,0,INSTR,INLEN,CCODE);                     28410000
             IF CCODE = 1 THEN DO;                                      28420000
                 OUTSTR=SUBSTR(INSTR,1,INLEN);                          28430000
                 WORDSTRT=VERIFY(OUTSTR,' ');                           28440000
                 END;                                                   28450000
             ELSE DO;                                                   28460000
                 IF BLKLIN THEN CALL LINESKP;                           28470000
                 PUT STRING (OUTSTR) EDIT                               28480000
                    ('Terminal error..reenter.') (A);                   28490000
                 CALL LINEOUT;                                          28500000
                 END;                                                   28510000
             END;                                                       28520000
         IF LOGON THEN PUT SKIP EDIT (OUTSTR) (A);                      28530000
         OUTSTR=SUBSTR(OUTSTR,WORDSTRT);                                28540000
         WORDEND=INDEX(OUTSTR,' ')-1;                                   28550000
         IF WORDEND=-1 THEN WORDEND=LENGTH(OUTSTR);                     28560000
         WORDSIZE=MIN(WORDEND,5);                                       28570000
         WORD1=SUBSTR(OUTSTR,1,WORDSIZE);                               28580000
         IF WORDEND > 5 THEN DO;                                        28590000
             WORDSIZE=MIN(WORDEND-5,5);                                 28600000
             WORD1X=SUBSTR(OUTSTR,6,WORDSIZE);                          28610000
             END;                                                       28620000
         IF WORDEND=LENGTH(OUTSTR) THEN RETURN;                         28630000
         OUTSTR=SUBSTR(OUTSTR,WORDEND+1);                               28640000
         WORDSTRT=VERIFY(OUTSTR,' ');                                   28650000
         IF WORDSTRT = 0 THEN RETURN;                                   28660000
         OUTSTR=SUBSTR(OUTSTR,WORDSTRT);                                28670000
         WORDEND=INDEX(OUTSTR,' ')-1;                                   28680000
         IF WORDEND = -1 THEN WORDEND=LENGTH(OUTSTR);                   28690000
         WORDSIZE=MIN(WORDEND,5);                                       28700000
         WORD2=SUBSTR(OUTSTR,1,WORDSIZE);                               28710000
         IF WORDEND > 5 THEN DO;                                        28720000
             WORDSIZE=MIN(WORDEND-5,5);                                 28730000
             WORD2X=SUBSTR(OUTSTR,6,WORDSIZE);                          28740000
             END;                                                       28750000
         RETURN;                                                        28760000
         END;                                                           28770000
                                                                        28780000
                                                                        28790000
                                                                        28800000
 YES: PROC (X,Y,Z) RETURNS (BIT(1));                                    28810000
                                                                        28820000
         DCL (X,Y,Z) FIXED BIN(31);                                     28830000
                                                                        28840000
 /*                                                                     28850000
    PRINT MESSAGE X, WAIT FOR YES/NO ANSWER.  IF YES, PRINT Y           28860000
    AND LEAVE YEA TRUE; IF NO, PRINT Z AND LEAVE YEA FALSE.             28870000
 */                                                                     28880000
                                                                        28890000
                                                                        28900000
 L1:     IF X ^= 0 THEN CALL RSPEAK(X);                                 28910000
         CALL GETIN(REPLY,JUNK1,JUNK2,JUNK3);                           28920000
         IF REPLY = 'YES' | REPLY = 'Y' THEN GOTO L10;                  28930000
         IF REPLY = 'NO' | REPLY = 'N' THEN GOTO L20;                   28940000
         CALL LINESKP;                                                  28950000
         PUT STRING (OUTSTR) EDIT ('Please answer the question!') (A);  28960000
         CALL LINEOUT;                                                  28970000
         GOTO L1;                                                       28980000
 L10:    IF Y ^= 0 THEN CALL RSPEAK(Y);                                 28990000
         RETURN('1'B);                                                  29000000
 L20:    IF Z ^=0 THEN CALL RSPEAK(Z);                                  29010000
         RETURN('0'B);                                                  29020000
         END;                                                           29030000
                                                                        29040000
                                                                        29050000
                                                                        29060000
 A5TOA1: PROC (A,B,CHARS,LENG);                                         29070000
                                                                        29080000
 /*                                                                     29090000
   A AND B CONTAN A 1-10 CHARACTER WORD IN A5 FORMAT.                   29100000
   THEY ARE CONCATENATED AND MOVED INTO A CHAR(1)                       29110000
   ARRAY UNTIL A BLANK IS ENCOUNTERED.  THE TOTAL                       29120000
   LENGTH IS RETURNED IN LENG.                                          29130000
                                                                        29140000
 */                                                                     29150000
                                                                        29160000
         DCL (A,B) CHAR(5);                                             29170000
         DCL LENG FIXED BIN(31);                                        29180000
         DCL CHARS(10) CHAR(1);                                         29190000
                                                                        29200000
         DCL WORDS(2) CHAR(5);                                          29210000
         DCL XLATETO CHAR(26) INIT ('abcdefghijklmnopqrstuvwxyz');      29220000
         DCL XLATEFR CHAR(26) INIT ('ABCDEFGHIJKLMNOPQRSTUVWXYZ');      29230000
                                                                        29240000
         WORDS(1)=TRANSLATE(A,XLATETO,XLATEFR);                         29250000
         WORDS(2)=TRANSLATE(B,XLATETO,XLATEFR);                         29260000
         LENG=0;                                                        29270000
         DO WORD=1 TO 2;                                                29280000
             DO CH=1 TO 5;                                              29290000
                 CHARS(LENG+1)=SUBSTR(WORDS(WORD),CH,1);                29300000
                 IF CHARS(LENG+1) = ' ' THEN RETURN;                    29310000
                 LENG=LENG+1;                                           29320000
                 END;                                                   29330000
             END;                                                       29340000
         RETURN;                                                        29350000
         END;                                                           29360000
1/*                                                                     29370000
    DATA STRUCTURE ROUTINES (VOCAB, DSTROY, JUGGLE, MOVE,               29380000
    PUT, CARRY, DROP)                                                   29390000
 */                                                                     29400000
                                                                        29410000
 VOCAB: PROC (ID,INIT) RETURNS(FIXED BIN(31));                          29420000
                                                                        29430000
         DCL ID CHAR(5);                                                29440000
         DCL INIT FIXED BIN(31);                                        29450000
         DCL I    FIXED BIN(31);                                        29460000
                                                                        29470000
 /*                                                                     29480000
    LOOK UP ID IN THE VOCABULARY (ATAB) AND RETURN ITS                  29490000
    "DEFINITION" (KTAB), OR -1 IF NOT FOUND.  IF INIT IS                29500000
    POSITIVE, THIS IS AN INITIALISATION CALL SETTING UP A               29510000
    KEYWORD VARIABLE, AND NOT FINDING IT CONSTITUTES A BUG.             29520000
    IT ALSO MEANS THAT ONLY KTAB VALUES WHICH TAKEN OVER 1000           29530000
    EQUAL INIT MAY BE CONSIDERED.  (THUS "STEPS", WHICH IS A            29540000
    MOTION VERB AS WELL AS AN OBJECT, MAY BE LOCATED AS AN              29550000
    OBJECT.)  AND IT ALSO MEANS THE KTAB VALUE IS TAKEN MOD             29560000
    1000.                                                               29570000
 */                                                                     29580000
                                                                        29590000
        DCL VOCRTN FIXED BIN(31);                                       29600000
                                                                        29610000
         DO I=1 TO TABSIZ;                                              29620000
             IF KTAB(I) = -1 THEN GOTO L2;                              29630000
             IF INIT >= 0 & KTAB(I)/1000 ^= INIT THEN GOTO L1;          29640000
             IF ATAB(I) = ID THEN GOTO L3;                              29650000
 L1:         END;                                                       29660000
         CALL BUG(21);                                                  29670000
                                                                        29680000
 L2:     IF INIT < 0 THEN RETURN(-1);                                   29690000
         CALL BUG(5);                                                   29700000
                                                                        29710000
 L3:     VOCRTN=KTAB(I);                                                29720000
         IF INIT >= 0 THEN VOCRTN=MOD(VOCRTN,1000);                     29730000
         RETURN(VOCRTN);                                                29740000
         END;                                                           29750000
                                                                        29760000
                                                                        29770000
                                                                        29780000
 DSTROY: PROC (OBJECT);                                                 29790000
                                                                        29800000
         DCL OBJECT FIXED BIN(31);                                      29810000
                                                                        29820000
 /*                                                                     29830000
    PERMANENTLY ELIMINATE "OBJECT" BY MOVING TO A                       29840000
    NON-EXISTANT LOCATION.                                              29850000
 */                                                                     29860000
                                                                        29870000
                                                                        29880000
         CALL MOVE(OBJECT,0);                                           29890000
         RETURN;                                                        29900000
         END;                                                           29910000
                                                                        29920000
                                                                        29930000
                                                                        29940000
 JUGGLE: PROC (OBJECT);                                                 29950000
                                                                        29960000
         DCL OBJECT FIXED BIN(31);                                      29970000
         DCL (I,J)  FIXED BIN(31);                                      29980000
                                                                        29990000
 /*                                                                     30000000
    JUGGLE AN OBJECT BY PICKING IT UP AND PUTTING IT DOWN               30010000
    AGAIN, THE PURPOSE BEING TO GET THE OBJECT TO THE FRONT             30020000
    OF THE CHAIN OF THINGS AT ITS LOC.                                  30030000
 */                                                                     30040000
                                                                        30050000
         I=PLACE(OBJECT);                                               30060000
         J=FIXED(OBJECT);                                               30070000
         CALL MOVE(OBJECT,I);                                           30080000
         CALL MOVE(OBJECT+100,J);                                       30090000
         RETURN;                                                        30100000
         END;                                                           30110000
                                                                        30120000
                                                                        30130000
                                                                        30140000
 MOVE: PROC (OBJECT,WHERE);                                             30150000
                                                                        30160000
         DCL (OBJECT,WHERE) FIXED BIN(31);                              30170000
                                                                        30180000
 /*                                                                     30190000
    PLACE ANY OBJECT ANYWHERE BY PICKING IT UP AND DROPPING             30200000
    IT.  MAY ALREADY BE TOTING, IN WHICH CASE THE CARRY IS A            30210000
    NO-OP.  MUSTN'T PICK UP OBJECTS WHICH ARE NOT AT ANY LOC,           30220000
    SINCE CARRY WANTS TO REMOVE OBJECTS FROM ATLOC CHAINS.              30230000
 */                                                                     30240000
                                                                        30250000
         IF OBJECT > 100 THEN GOTO L1;                                  30260000
         FROM=PLACE(OBJECT);                                            30270000
         GOTO L2;                                                       30280000
 L1:     FROM=FIXED(OBJECT-100);                                        30290000
 L2:     IF FROM > 0 & FROM <= 300 THEN CALL CARRY(OBJECT,FROM);        30300000
         CALL DROP(OBJECT,WHERE);                                       30310000
         RETURN;                                                        30320000
         END;                                                           30330000
                                                                        30340000
                                                                        30350000
                                                                        30360000
 PUT: PROC (OBJECT,WHERE,PVAL) RETURNS(FIXED BIN(31));                  30370000
                                                                        30380000
         DCL (OBJECT,WHERE,PVAL) FIXED BIN(31);                         30390000
                                                                        30400000
 /*                                                                     30410000
    PUT IS THE SAME AS MOVE, EXCEPT IT RETURNS A VALUE USED             30420000
    TO SET UP THE NEGATED PROP VALUES FOR THE REPOSITORY                30430000
    OBJECTS.                                                            30440000
 */                                                                     30450000
                                                                        30460000
         CALL MOVE(OBJECT,WHERE);                                       30470000
         RETURN((-1)-PVAL);                                             30480000
         END;                                                           30490000
                                                                        30500000
                                                                        30510000
                                                                        30520000
 CARRY: PROC (OBJECT,WHERE);                                            30530000
                                                                        30540000
         DCL (OBJECT,WHERE) FIXED BIN(31);                              30550000
                                                                        30560000
 /*                                                                     30570000
    START TOTING AN OBJECT, REMOVING IT FROM THE LIST OF                30580000
    THINGS AT ITS FORMER LOCATION.  INCR HOLDNG UNLESS IT WAS           30590000
    ALREADY BEING TOTED.  IF OBJECT>100 (MOVING "FIXED"                 30600000
    SECOND LOC), DON'T CHANGE PLACE OR HOLDNG.                          30610000
 */                                                                     30620000
                                                                        30630000
                                                                        30640000
                                                                        30650000
         IF OBJECT > 100 THEN GOTO L5;                                  30660000
         IF PLACE(OBJECT) = -1 THEN RETURN;                             30670000
         PLACE(OBJECT)=-1;                                              30680000
         HOLDNG=HOLDNG+1;                                               30690000
 L5:     IF ATLOC(WHERE) ^= OBJECT THEN GOTO L6;                        30700000
         ATLOC(WHERE)=LINK(OBJECT);                                     30710000
         RETURN;                                                        30720000
 L6:     TEMP=ATLOC(WHERE);                                             30730000
 L7:     IF LINK(TEMP) = OBJECT THEN GOTO L8;                           30740000
         TEMP=LINK(TEMP);                                               30750000
         GOTO L7;                                                       30760000
 L8:     LINK(TEMP)=LINK(OBJECT);                                       30770000
         RETURN;                                                        30780000
         END;                                                           30790000
                                                                        30800000
                                                                        30810000
                                                                        30820000
 DROP: PROC (OBJECT,WHERE);                                             30830000
                                                                        30840000
         DCL (OBJECT,WHERE) FIXED BIN(31);                              30850000
                                                                        30860000
 /*                                                                     30870000
    PLACE AN OBJECT AT A GIVEN LOC, PREFIXING IT ONTO THE               30880000
    ATLOC LIST.  DECR HOLDNG IF THE OBJECT WAS BEING TOTED.             30890000
 */                                                                     30900000
                                                                        30910000
         IF OBJECT > 100 THEN GOTO L1;                                  30920000
         IF PLACE(OBJECT) = -1 THEN HOLDNG=HOLDNG-1;                    30930000
         PLACE(OBJECT)=WHERE;                                           30940000
         GOTO L2;                                                       30950000
 L1:     FIXED(OBJECT-100)=WHERE;                                       30960000
 L2:     IF WHERE <= 0 THEN RETURN;                                     30970000
         LINK(OBJECT)=ATLOC(WHERE);                                     30980000
         ATLOC(WHERE)=OBJECT;                                           30990000
         RETURN;                                                        31000000
         END;                                                           31010000
                                                                        31020000
1/*  UTILITY ROUTINES (RAN, CIAO, BUG) */                               31030000
                                                                        31040000
 CIAO: PROC;                                                            31050000
                                                                        31060000
 /*                                                                     31070000
    EXITS...NO MESSAGE OUTPUT SINCE CAN'T SAVE CORE IMAGE               31080000
 */                                                                     31090000
                                                                        31100000
         STOP;                                                          31110000
         END;                                                           31120000
                                                                        31130000
                                                                        31140000
                                                                        31150000
 BUG: PROC (NUM);                                                       31160000
                                                                        31170000
         DCL NUM FIXED BIN(31);                                         31180000
                                                                        31190000
 /*                                                                     31200000
    THE FOLLOWING CONDITIONS ARE CURRENTLY CONSIDERED FATAL             31210000
    BUGS.  NUMBERS < 20 ARE DETECTED WHILE READING THE                  31220000
    DATABASE; THE OTHERS OCCUR AT "RUN TIME".                           31230000
         0       MESSAGE LINE > 70 CHARACTERS                           31240000
         1       NULL LINE IN MESSAGE                                   31250000
         2       TOO MANY WORDS OF MESSAGES                             31260000
         3       TOO MANY TRAVEL OPTIONS                                31270000
         4       TOO MANY VOCABULARY WORDS                              31280000
         5       REQUIRED VOCABULARY WORD NOT FOUND                     31290000
         6       TOO MANY RTEXT OR MTEXT MESSAGES                       31300000
         7       TOO MANY HINTS                                         31310000
         8       LOCATION HAS COND BIT BEING SET TWICE                  31320000
         9       INVALID SECTION NUMBER IN DATABASE                     31330000
         20      SPECIAL TRAVEL (500>L>300) EXCEEDS GOTO LIST           31340000
         21      RAN OFF END OF VOCABULARY TABLE                        31350000
         22      VOCABULARY TYPE (N/1000) NOT BETWEEN 0 AND 3           31360000
         23      INTRANSITIVE ACTION VERB EXCEEDS GOTO LIST             31370000
         24      TRANSITIVE ACTION VERB EXCEEDS GOTO LIST               31380000
         25      CONDITIONAL TRAVEL ENTRY WITH NO ALTERNATIVE           31390000
         26      LOCATION HAS NO TRAVEL ENTRIES                         31400000
         27      HINT NUMBER EXCEEDS GOTO LIST                          31410000
         28      INVALID MONTH RETURNED BY DATE FUNCTION                31420000
 */                                                                     31430000
                                                                        31440000
                                                                        31450000
         PUT STRING (OUTSTR) EDIT ('Fatal error # ',NUM) (A,F(2));      31460000
         CALL LINEOUT;                                                  31470000
         STOP;                                                          31480000
         END;                                                           31490000
                                                                        31500000
 LINESKP: PROC;                                                         31510000
                                                                        31520000
 /* OUTPUTS A BLANK LINE */                                             31530000
                                                                        31540000
         OUTSTR=' ';                                                    31550000
         CALL LINEOUT;                                                  31560000
         RETURN;                                                        31570000
         END;                                                           31580000
                                                                        31590000
 LINEOUT: PROC;                                                         31600000
                                                                        31610000
 /* OUTPUT A LINE TO MILTEN */                                          31620000
                                                                        31630000
         INSTR=OUTSTR;                                                  31640000
         IF LOGON & OUTSTR ^= ' ' THEN                                  31650000
              PUT SKIP EDIT (OUTSTR) (A);                               31660000
         CCODE=0;                                                       31670000
         DO WHILE (CCODE = 0);                                          31680000
             CALL TWRITE(INSTR,LENGTH(OUTSTR),CCODE);                   31690000
             END;                                                       31700000
         RETURN;                                                        31710000
         END;                                                           31720000
                                                                        31730000
 RAN: PROC (N) RETURNS (FIXED BIN(31));                                 31740000
                                                                        31750000
 /* RETURNS RANDOM NUMBER BETWEEN 0 AND N-1 */                          31760000
                                                                        31770000
         DCL N FIXED BIN(31);                                           31780000
         DCL RANRTN FIXED BIN(31);                                      31790000
                                                                        31800000
         RANRTN=N;                                                      31810000
         DO WHILE (RANRTN = N);                                         31820000
             CALL RANDU(IX,IY,Y);                                       31830000
             IX=IY;                                                     31840000
             RANRTN=Y*N;                                                31850000
             END;                                                       31860000
         RETURN(RANRTN);                                                31870000
         END;                                                           31880000
                                                                        31890000
                                                                        31900000
   END ADVENT;                                                          31910000