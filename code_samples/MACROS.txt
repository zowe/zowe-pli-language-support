 15655-PL6  IBM(R) Enterprise PL/I for z/OS  6.1      (Built:20230320)                           2024.05.11 01:45:04   Page     1
 -                     Options Specified
 0  Install:
 0  Command: RULES(LAXDCL),SOURCE
 0  Line.File Process Statements
 0     1.0    *PROCESS MI(':'),NEST,X,AG,A,MAR(2,72,1),GN,NUM,STG;
 0  Install:
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page     2
 0 Compiler Source
 0    Line.File LV NT
 0       2.0           :                                                                       :
         3.0           : /***     (CHECK):     ***/                                            :
         4.0           :                                                                       :
         5.0           : /***  03/27/85  15:47:04  ***   "MACRO PROCESSOR"  PDSPROC     */     :
         6.0           : PDSPROC: PROC (PARM) OPTIONS(MAIN);          /*  ALIAS:  MACROS       :
         7.0           :                                                                       :
         8.0           :  ***************************************************************      :
         9.0           :  ***************************************************************      :
        10.0           :  ***************************************************************      :
        11.0           :  ***                                                         ***      :
        12.0           :  ***           COPYRIGHT   1981    HANS J. BECKER            ***      :
        13.0           :  ***                                                         ***      :
        14.0           :  ***************************************************************      :
        15.0           :  ***************************************************************      :
        16.0           :  ***                                                         ***      :
        17.0           :  ***    THIS PROGRAM HAS BEEN CONTRIBUTED TO SHARE,  AND     ***      :
        18.0           :  ***    IT MAY BE USED BY IT'S MEMBERS ANY WAY THEY WISH.    ***      :
        19.0           :  ***                                                         ***      :
        20.0           :  ***                                                         ***      :
        21.0           :  ***************************************************************      :
        22.0           :  ***************************************************************      :
        23.0           :  ***************************************************************      :
        24.0           :                                                                       :
        25.0           :   AUTHOR:    HANS J. BECKER      (202-252-6874)                       :
        26.0           :              ENERGY INFORMATION ADMINISTRATION                        :
        27.0           :              WASHINGTON, D.C.   20585                                 :
        28.0           :                                                                       :
        29.0           :                                                                       :
        30.0           :       MACROS  is  a  partitioned  data  set  utility program.         :
        31.0           :  Members are invoked via control data  records.   Invocations         :
        32.0           :  may  be  nested  and  recurrent.   Invocations  may  also be         :
        33.0           :  qualified using special qualification  verbs,  and  patterns         :
        34.0           :  within each member may be altered. Fixed Block, Variable             :
        35.0           :  Blocked and Superwylbur data sets are supported.                     :
        36.0           :                                                                       :
        37.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page     3
 0    Line.File LV NT
 0      38.0           :  JCL:                                                                 :
        39.0           :                                                                       :
        40.0           :  //MACROS  EXEC PGM=MACROS,REGION=330K,                               :
        41.0           :  // PARM='/RC=''&'',NAME,INTRDR,NEST,ANYPDS,PROFILE,PRINT,REWRITE,    :
        42.0           :  //   NOOPNT,CN=''+'',LIST,NONUM,SHORT,AND,OR,WYLFMT,CUTOFF=50'       :
        43.0           :  //STEPLIB  DD  DISP=SHR,DSN=FEA.LINKLIB                              :
        44.0           :  //SYSPRINT DD  SYSOUT=A                                              :
        45.0           :  //SYSOUT   DD  SYSOUT=A,DCB=BLKSIZE=80                               :
        46.0           :  //MACROS   DD  DISP=SHR,DSN=CNaaaa.uuu.ANY.PDS    ***LIBRARY***      :
        47.0           :  //SYSIN DD *                                                         :
        48.0           :                                                                       :
        49.0           :  CONTROL CARD SYNTAX:                                                 :
        50.0           :                                                                       :
        51.0           :  OPTION 1:                                                            :
        52.0           :                                                                       :
        53.0           :     |&MEMBER| |PDSNAME| |T1=R1| |,T2=R2| ... |,S=(Q)|                 :
        54.0           :                                                                       :
        55.0           :  OPTION 2:                                                            :
        56.0           :                                                                       :
        57.0           :     |&MEMBER| CHANGE |'TARGET'| |COL1||/COL2|                         :
        58.0           :               TO 'REPLACEMENT' |IN LINE1||/LINE2|                     :
        59.0           :NOTES:                                                                 :
        60.0           :                                                                       :
        61.0           :        1.   Control cards are coded on card image records.  To        :
        62.0           :   continue an instruction, code a  CONTINUATION  character  as        :
        63.0           :   the  last  nonblank character of a card.  The maximun number        :
        64.0           :   of  characters  in  an  instruction  is  255.   The  default        :
        65.0           :   CONTINUATION character is '+'.                                      :
        66.0           :   THE  CONTINUATION  CHARACTER WILL BE RECOGNIZED  ONLY IN THE        :
        67.0           :   CONTROL CARDS IN THE SYSIN STREAM.                                  :
        68.0           :                                                                       :
        69.0           :        2.    The  default  reference  character  (RC)  is  the        :
        70.0           :   ampersand.  When used it is coded in column  1.   It  causes        :
        71.0           :   the invocation of a member.                                         :
        72.0           :                                                                       :
        73.0           :        3.   Records  that do not have a reference character in        :
        74.0           :   column 1 are passed to the output file  undisturbed,  except        :
        75.0           :   as noted below.                                                     :
        76.0           :                                                                       :
        77.0           :        4.  The NAME option causes the member name to appear in        :
        78.0           :   columns 73 thru 80 in the output file.  (default = NONAME)          :
        79.0           :                                                                       :
        80.0           :        5.  The INTRDR option causes the output to be submitted        :
        81.0           :   as a job.  (default = NOINTRDR)                                     :
        82.0           :                                                                       :
        83.0           :        6.  The NONEST option inhibits the resolution of nested        :
        84.0           :   members.  (default = NEST)                                          :
        85.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page     4
 0    Line.File LV NT
 0      86.0           :        7.   When  the ANYPDS option is used, then the data set        :
        87.0           :   name is obtained from the PDSNAME of the control card.  This        :
        88.0           :   allows the user to access members from various pds'.                :
        89.0           :                                                                       :
        90.0           :        8.  The PROFILE option causes the automatic  processing        :
        91.0           :   of all members of the pds in turn.  It is highly recommended        :
        92.0           :   that the NONEST option be specified.                                :
        93.0           :                                                                       :
        94.0           :        9.  Target patterns (T1,T2..) will be replaced by their        :
        95.0           :   corresponding  replacement  patterns  (R1,R2..). Any pattern        :
        96.0           :   that contains a blank, equal sign or comma must be  enclosed        :
        97.0           :   in single or double quotes.                                         :
        98.0           :                                                                       :
        99.0           :        10.   The selection criteria (S) can take several forms        :
       100.0           :   as   follows:    FROM=(any   pattern),   TO=(any   pattern),        :
       101.0           :   EXTRACT=(any       pattern),      DELETE=(any      pattern),        :
       102.0           :   INCLUDE=(lines), EXCLUDE=(lines).                                   :
       103.0           :                                                                       :
       104.0           :        11.  The order of  processing  the  selection  criteria        :
       105.0           :   should  be  as  follows:                                            :
       106.0           :          a) INCLUDE, EXCLUDE or EXTRACT                               :
       107.0           :          b) FROM and/or TO                                            :
       108.0           :          c) DELETE                                                    :
       109.0           :                                                                       :
       110.0           :        12.  The following  are  valid  abbreviations  for  the        :
       111.0           :   selection criteria:  INC, EXC, EXTR, DEL.                           :
       112.0           :                                                                       :
       113.0           :        13.   LIST,  FIND,  SEL,  SELECT  are  synonyms for the        :
       114.0           :   EXTRACT selection criteria.                                         :
       115.0           :                                                                       :
       116.0           :        14.  The REWRITE option is used in conjuction with  the        :
       117.0           :   PROFILE  option.  The user specifies changes he/she wants to        :
       118.0           :   apply to every member, and after the changes have been  made,       :
       119.0           :   the member will be re-written into the pds. for superwylbur         :
       120.0           :   files, the member will be written onto a PDS where ddname=EDIT.     :
       121.0           :                                                                       :
       122.0           :        15.   The  PRINT  option causes the output to appear on        :
       123.0           :   sysprint rather than sysout, and after  a  member  has  been        :
       124.0           :   invoked, a page eject will occur.                                   :
       125.0           :                                                                       :
       126.0           :        16.   When  using  the  PROFILE  option,  the selection        :
       127.0           :   criteria  may  appear  on  several  lines.    The   criteria        :
       128.0           :   appearing  on  the  same  line  are  always  ORed, but those        :
       129.0           :   appearing on seperate lines may be ANDed by  using  the  AND        :
       130.0           :   option in the parm.                                                 :
       131.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page     5
 0    Line.File LV NT
 0     132.0           :        17.   A  special  case  of  a  control  card has the           :
       133.0           :   following format:                                                   :
       134.0           :                                                                       :
       135.0           :        &PARM="NEW OR CHANGED PROCESSING OPTIONS"                      :
       136.0           :                                                                       :
       137.0           :        In other words, any options that can be set in the  JCL        :
       138.0           :   may be changed using this special control card.                     :
       139.0           :                                                                       :
       140.0           :        18.  At times it is desirable to process only the first        :
       141.0           :   few  records of the invoked member.  The variable CUTOFF can        :
       142.0           :   be assigned a new value, and if  the  read  counter  exceeds        :
       143.0           :   this value, then the reading loop is terminated.                    :
       144.0           :                                                                       :
       145.0           :        19.   The WYLFMT option causes the output to be written        :
       146.0           :   onto a file assigned to the ddname=EDIT.  The format will be        :
       147.0           :   in Superwylbur.   Note  that  the  REWRITE  option  will  be        :
       148.0           :   automatically set to NOREWRITE.                                     :
       149.0           :                                                                       :
       150.0           :        20.   Neither  GLOBAL  nor PARM  are generally names of        :
       151.0           :   members.  But they are coded in the same  manner,  and  this        :
       152.0           :   could  result in a conflict.  Set the NOOPTN parameter in           :
       153.0           :   order that these names may be used as member names.                 :
       154.0           :                                                                       :
       155.0           :        21.  Assignments made to the GLOBAL variable remain  in        :
       156.0           :   effect  until  changed  by  another  GLOBAL assignment.  The        :
       157.0           :   contents of the GLOBAL variable will be concatenated to each        :
       158.0           :   invocation of a pds member.                                         :
       159.0           :                                                                       :
       160.0           :        22.   If  the  ddname=MEMBERS exists, then only selected       :
       161.0           :   members will be processed by the LISTPDS and PROFILE options.       :
       162.0           :                                                                       :
       163.0           :        23.  If the ddname=PDSCOPY exists, then the COPY  option       :
       164.0           :   is  set  on, and the invoked members will be copied into that       :
       165.0           :   PDS.                                                                :
       166.0           :                                                                       :
       167.0           :        24.  Use NOBLANKLINE to bypass blank lines on input from       :
       168.0           :   DD=MACROS.                                                          :
       169.0           :                                                                       :
       170.0           :        25.  RENUM causes renumbering of wylbur datasets on input.     :
       171.0           :   This is necessary to be able to concatenate wylbur datasets.        :
       172.0           :                                                                       :
       173.0           :        26.  The UNLOAD option causes IEBUPDT control cards to be      :
       174.0           :   placed into the output stream at the beginning of each member.      :
       175.0           :                                                                       :
       176.0           :        27.  The LOAD option allows you to load a sequential file      :
       177.0           :   with IEBUPDT control cards into a pds.                              :
       178.0           :                                                                       :
       179.0           :                                                                       :
       180.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page     6
 0    Line.File LV NT
 0     181.0           :                                                                       :
       182.0           :   PROGRAM MODIFICATIONS:                                              :
       183.0           :                                                                       :
       184.0           :   AUG 83:   USE LIST PROCESSING INSTEAD OF A STACK AND AN ARRAY;      :
       185.0           :   9/16/83:  SIGNAL ERROR WHEN NESTLVL > 5.                            :
       186.0           :   9/26/83:  WYLFMT OPTION.                                            :
       187.0           :   11/3/83:  ADD "PGSIZE=60" WHEN OPENING PDSLIST                      :
       188.0           :             ALLOW FOR CONTINUATIONS WHEN PROFILE IS USED              :
       189.0           :   11/30/83: INCORPORATE THE "CHANGE_RTN" INTO THE PROGRAM.            :
       190.0           :   01/15/84: PUT IN "TEST" INTO THE ON ERROR BLOCK IN OPTIONS PROC     :
       191.0           :   01/17/84: PUT IN MORE FEEDBACK IN THE DYRTN PROCEDURE               :
       192.0           :   01/19/84: GLOBAL VARIABLE                                           :
       193.0           :   01/29/84: CH MEMBER TO DYMEMBER                                     :
       194.0           :   03/07/84: SHORTLST - SUBSET OF ALL THE MEMBERS                      :
       195.0           :   03/07/84: COPY OTION                                                :
       196.0           :   03/25/84: CALL SVC99 FOR DYNAMIC ALLOCATIONS                        :
       197.0           :   05/16/84: ADDED RENUM AND BLANKLINE AND SHOMEM                      :
       198.0           :             REVISED "ALL_MEMBERS" ROUTINE                             :
       199.0           :   05/30/84: FIX PRESS ROUTINE, IE DONT WRITE "EMPTY" BLOCKS           :
       200.0           :   08/10/84: CH RELATIVE NUMBERS TO LINE NUMBERS FOR INC/EXC           :
       201.0           :             ADD SOME MORE DIAGNOSTICS                                 :
       202.0           :   08/15/84: PUT IN FLOW & SNAP OPTIONS                                :
       203.0           :   09/12/84: CAUSE "SHOMEM" TO DISPLAY MEMBERS ON ENTRY OF MACPROC     :
       204.0           :   09/21/84: CH DDN TO "MACROS" FOR REWRITE                            :
       205.0           :   09/26/84: TAKE "FLOW" OUT                                           :
       206.0           :   10/01/84: CH KNT TO KNT*1000 IN UNPRESS                             :
       207.0           :             PUT IN "WHOAMI" FOR THE CHECK MODE                        :
       208.0           :             ELIMINATE EXTRANEOUS "KNT" TO GET RID OF 0C4 PROBLEM      :
       209.0           :             SIGNAL ERROR WHEN EXTENT=0                                :
       210.0           :   10/03/84: PUT "KNT" BACK,  CALL IT "UPZKNT"                         :
       211.0           :             ADD "UNLOAD" IEBUPDT OPTION                               :
       212.0           :             GET RID OF MOST OF THE COMPILER WARNINGS                  :
       213.0           :   11/13/84: LOAD OPTION                                               :
       214.0           :   12/05/84: ISSUE WARNING WHEN PROCESSING "INVALID" RECORDS           :
       215.0           :   12/10/84: FIX PROBLEMS INTRODUCED 12/5                              :
       216.0           :   12/28/84: PUT IN "FILE2" AS A PRINT FILE                            :
       217.0           :   03/21/85: DO THE INITIAL SYSIN READ AS PART OF INITIALIZATION       :
       218.0           :             EXPAND PDSLIST OPTION TO FUNCTION LIKE THE PROFILE OPTN   :
       219.0           :             PROVIDE 1 "APPLICATION" WHEN SYSIN IS EMPTY               :
       220.0           :   03/27/85: ADDED "EXCLUDE" TO SET_BIT PROC, ADDED "Q(65)"            :
       221.0           :             IF WYLBUR THEN 1000X LINE NUMBERS IN INC_EXC_RANGE        :
       222.0           :                                                                       :
       223.0           :                                                                       :
       224.0           :                                                                       :
       225.0           :                                                                       :
       226.0           :                                                                       :
       227.0           :  *****************************************************************/   :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page     7
 0    Line.File LV NT
 0     228.0     1     :     ON ERROR SNAP BEGIN; ON ERROR SYSTEM;                             :
       229.0     2     :        IF TEST  THEN PUT SKIP DATA; END;                              :
       230.0           :                                                                       :
       231.0     1     :     ON CONDITION(DYNALOC)         /* RETURN DYNALLOC INFORMATION */   :
       232.0     1     :        BEGIN;  ON ERROR SYSTEM;                                       :
       233.0     2     :           DCL ZONES                   CHAR(2000);                     :
       234.0     2     :           DCL DIGITS                  CHAR(2000);                     :
       235.0     2     :           PUT SKIP(2) EDIT('-------ALLOCATION DATA--------')(A);      :
       236.0     2     :           PUT SKIP(2) DATA(DSNAME,OUTFILE);                           :
       237.0     2     :           PUT SKIP(2) DATA(INFORMATION);                              :
       238.0     2     :           PUT SKIP(2) DATA(DD);                                       :
       239.0     2     :           ZONES = TRANSLATE(WRKAREA,                                  :
       240.0           :                       (  (16)'0' ||(16)'1' ||(16)'2' ||(16)'3'        :
       241.0           :                        ||(16)'4' ||(16)'5' ||(16)'6' ||(16)'7'        :
       242.0           :                        ||(16)'8' ||(16)'9' ||(16)'A' ||(16)'B'        :
       243.0           :                        ||(16)'C' ||(16)'D' ||(16)'E' ||(16)'F'));     :
       244.0     2     :           DIGITS = TRANSLATE(WRKAREA,(16)'0123456789ABCDEF');         :
       245.0     2     :           DO I = 1 TO 300 BY 100;                                     :
       246.0     2  1  :              PUT SKIP(2) EDIT(SUBSTR(WRKAREA,I,100))(A);              :
       247.0     2  1  :              PUT SKIP    EDIT(SUBSTR(ZONES  ,I,100))(A);              :
       248.0     2  1  :              PUT SKIP    EDIT(SUBSTR(DIGITS ,I,100))(A);              :
       249.0     2  1  :           END;                                                        :
       250.0     2     :        END;                                                           :
       251.0           :                                                                       :
       252.0     1     :     ON CONVERSION                                                     :
       253.0     1     :        BEGIN;                                                         :
       254.0     2     :           PUT SKIP EDIT('CONVERSION ERROR IN ',ONLOC,                 :
       255.0     2     :               ', ONCODE=',ONCODE,', ONSOURCE=',ONSOURCE)(A);  END;    :
       256.0           :                                                                       :
       257.0     1     :     ON STRINGRANGE                                                    :
       258.0     1     :        BEGIN;                                                         :
       259.0     2     :           IF TEST THEN DO;                                            :
       260.0     2  1  :              PUT SKIP EDIT('STRINGRANGE ERROR IN ',ONLOC,             :
       261.0           :               ', ONCODE=',ONCODE,', ONSOURCE=',ONSOURCE)(A);          :
       262.0     2  1  :              PUT SKIP DATA; END; END;                                 :
       263.0           :                                                                       :
       264.0     1     :     ON STRINGSIZE                                                     :
       265.0     1     :        BEGIN;                                                         :
       266.0     2     :           IF TEST THEN DO;                                            :
       267.0     2  1  :              PUT SKIP EDIT('STRINGSIZE ERROR IN ',ONLOC,              :
       268.0           :               ', ONCODE=',ONCODE,', ONSOURCE=',ONSOURCE)(A);          :
       269.0     2  1  :              PUT SKIP DATA; END; END;                                 :
       270.0           :                                                                       :
       271.0     1     :     ON ENDFILE(SYSIN)   BEGIN; END_OF_FILE = TRUE; END;               :
       272.0     1     :     ON ENDFILE(INPUT)   BEGIN; E_O_F       = TRUE; END;               :
       273.0     1     :     ON ENDFILE(BLOCKS)  BEGIN; MORE        = FALSE;END;               :
       274.0     1     :     ON ENDFILE(MACROS)  BEGIN; MORE        = FALSE;END;               :
       275.0     1     :     ON ENDFILE(MEMBERS) BEGIN; MORE        = FALSE;END;               :
       276.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page     8
 0    Line.File LV NT
 0     277.0     1     :     ON ENDPAGE(PDSLIST)                                               :
       278.0     1     :        BEGIN;                                                         :
       279.0     2     :        IF SHORT                                                       :
       280.0     2     :           THEN DO;                                                    :
       281.0     2  1  :                PUT FILE(PDSLIST) PAGE EDIT                            :
       282.0           :                    (MEM_NAME_HDR)      (COL(1),A)                     :
       283.0           :                    (MEMNAME)           (COL(15),A)                    :
       284.0           :                    ('TIME:')           (COL(28),A)                    :
       285.0           :                    (NOW)               (COL(34),A)                    :
       286.0           :                    ('DATE:')           (COL(48),A)                    :
       287.0           :                    (TODAY)             (COL(54),A)                    :
       288.0           :                    ('PAGE:')           (COL(68),A)                    :
       289.0           :                    (PAGE_KNT)          (COL(75),P'ZZZZ');             :
       290.0     2  1  :                PUT FILE(PDSLIST) SKIP(2) EDIT                         :
       291.0           :                    ('PDS=')            (COL(1),A)                     :
       292.0           :                    (DSNAME)            (COL(5),A)                     :
       293.0           :                    (MEMNAME)           (COL(68),A)                    :
       294.0           :                    ((80) '_')          (COL(1),A)                     :
       295.0           :                    ((80) ' ')          (COL(1),A);                    :
       296.0     2  1  :                END;                                                   :
       297.0     2     :           ELSE DO;                                                    :
       298.0     2  1  :                PUT FILE(PDSLIST) PAGE EDIT                            :
       299.0           :                    (MEM_NAME_HDR)      (COL(1),A)                     :
       300.0           :                    (MEMNAME)           (COL(15),A)                    :
       301.0           :                    ('TIME:')           (COL(56),A)                    :
       302.0           :                    (NOW)               (COL(63),A)                    :
       303.0           :                    ('DATE:')           (COL(84),A)                    :
       304.0           :                    (TODAY)             (COL(90),A)                    :
       305.0           :                    ('PAGE:')           (COL(120),A)                   :
       306.0           :                    (PAGE_KNT)          (COL(126),P'ZZZZ');            :
       307.0     2  1  :                PUT FILE(PDSLIST) SKIP(2) EDIT                         :
       308.0           :                    ('PDS=')            (COL(1),A)                     :
       309.0           :                    (DSNAME)            (COL(5),A)                     :
       310.0           :                    (MEMNAME)           (COL(68),A)                    :
       311.0           :                    ((132) '_')         (COL(1),A)                     :
       312.0           :                    ((132) ' ')         (COL(1),A);                    :
       313.0     2  1  :                END;                                                   :
       314.0     2     :        PAGE_KNT = PAGE_KNT + 1;                                       :
       315.0     2     :        END;                                                           :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page     9
 0    Line.File LV NT
 0     316.0           :                                                                       :
       317.0     1     :     DCL  ALLOW_INPUT       BIT      INIT(1B);                         :
       318.0     1     :     DCL  ALLOW_OUTPUT      BIT      INIT(1B);                         :
       319.0     1     :     DCL  AND               BIT      INIT(0B);                         :
       320.0     1     :     DCL  ANYPDS            BIT      INIT(0B);                         :
       321.0     1     :     DCL  BLANKLINE         BIT      INIT(1B);                         :
       322.0     1     :     DCL  BUMMER            BIT      INIT(0B);                         :
       323.0     1     :     DCL  CONTINUED         BIT      INIT(0B);                         :
       324.0     1     :     DCL  COPY              BIT      INIT(0B);                         :
       325.0     1     :     DCL  DTS               BIT      INIT(0B);                         :
       326.0     1     :     DCL  DUMP              BIT      INIT(0B);                         :
       327.0     1     :     DCL  END_OF_FILE       BIT      INIT(0B);                         :
       328.0     1     :     DCL  EOF               BIT      INIT(0B);                         :
       329.0     1     :     DCL  E_O_F             BIT      INIT(0B);                         :
       330.0     1     :     DCL  FALSE             BIT      INIT(0B);                         :
       331.0     1     :     DCL  FIRST_TIME        BIT      INIT(1B);                         :
       332.0     1     :     DCL  INTRDR            BIT      INIT(0B);                         :
       333.0     1     :     DCL  LIST              BIT      INIT(0B);                         :
       334.0     1     :     DCL  LISTPDS           BIT      INIT(0B);                         :
       335.0     1     :     DCL  LOAD              BIT      INIT(0B);                         :
       336.0     1     :     DCL  LONG              BIT      INIT(1B);                         :
       337.0     1     :     DCL  MATCH             BIT      INIT(0B);                         :
       338.0     1     :     DCL  MASK_SWITCH       BIT;                                       :
       339.0     1     :     DCL  MORE              BIT      INIT(1B);                         :
       340.0     1     :     DCL  NAME              BIT      INIT(0B);                         :
       341.0     1     :     DCL  NEST              BIT      INIT(1B);                         :
       342.0     1     :     DCL  NUM               BIT      INIT(1B);                         :
       343.0     1     :     DCL  OBS               BIT      INIT(0B);                         :
       344.0     1     :     DCL  OPTN              BIT      INIT(1B);                         :
       345.0     1     :     DCL  OR                BIT      INIT(1B);                         :
       346.0     1     :     DCL  PRINT             BIT      INIT(0B);                         :
       347.0     1     :     DCL  PROFILE           BIT      INIT(0B);                         :
       348.0     1     :     DCL  RENUM             BIT      INIT(0B);                         :
       349.0     1     :     DCL  REWRITE           BIT      INIT(0B);                         :
       350.0     1     :     DCL  SHOMEM            BIT      INIT(0B);                         :
       351.0     1     :     DCL  SHORT             BIT      INIT(0B);                         :
       352.0     1     :     DCL  SHORTLST          BIT      INIT(0B);                         :
       353.0     1     :     DCL  TEST              BIT      INIT(0B);                         :
       354.0     1     :     DCL  TRUE              BIT      INIT(1B);                         :
       355.0     1     :     DCL  UNLOAD            BIT      INIT(0B);                         :
       356.0     1     :     DCL  WYLBUR            BIT      INIT(0B);                         :
       357.0     1     :     DCL  WYLFMT            BIT      INIT(0B);                         :
       358.0     1     :     DCL  Q(200)            BIT;                                       :
       359.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    10
 0    Line.File LV NT
 0     360.0     1     :     DCL  BLOCKS            RECORD FILE ENV(U RECSIZE(256));           :
       361.0     1     :     DCL  MACROS            RECORD FILE;                               :
       362.0     1     :     DCL  READER            FILE  ENV(FB RECSIZE(80));                 :
       363.0     1     :     DCL  EDIT              STREAM FILE ENV(U  BLKSIZE(6233));         :
       364.0     1     :     DCL  MEMBERS           STREAM FILE;                               :
       365.0     1     :     DCL  PDSCOPY           STREAM FILE;                               :
       366.0     1     :     DCL  INPUT             RECORD FILE;                               :
       367.0     1     :     DCL  PDSLIST           PRINT  FILE;                               :
       368.0     1     :     DCL  SYSOUT            STREAM FILE;                               :
       369.0     1     :     DCL  SYSIN             STREAM FILE;                               :
       370.0     1     :     DCL  SYSPRINT          STREAM FILE;                               :
       371.0           :                                                                       :
       372.0     1     :     DCL  SVC99             ENTRY OPTIONS(ASM INTER RETCODE);          :
       373.0     1     :     DCL  DDINFO            ENTRY;                                     :
       374.0           :                                                                       :
       375.0     1     :     DCL  (ALLOCATION,INDEX,ONLOC,ONCODE,ONCHAR,ONSOURCE)  BUILTIN;    :
       376.0     1     :     DCL  (VERIFY,HBOUND,LENGTH,REPEAT,SUBSTR,UNSPEC,TIME) BUILTIN;    :
       377.0     1     :     DCL  (DATE,ADDR,HIGH,TRANSLATE,ABS,NULL,PLIRETV,LOW)  BUILTIN;    :
       378.0     1     :     DCL  WHAT_HEX          BIT(16);                                   :
       379.0     1     :     DCL  BIT8              BIT(8);                                    :
       380.0     1     :     DCL  BIT16             BIT(16);                                   :
       381.0           :                                                                       :
       382.0     1     :     DCL  APPLICATION(EXTENT)CHAR(255) CONTROLLED;                     :
       383.0     1     :     DCL  BLANK             CHAR      INIT(' ');                       :
       384.0     1     :     DCL  BLK_OVFLOW        FIXED BIN INIT(6226);                      :
       385.0     1     :     DCL  BLOCK             CHAR(6233)VAR;                             :
       386.0     1     :     DCL  BLOCK_LENGTH      FIXED BIN;                                 :
       387.0     1     :     DCL  BLOCKLENGTH       FIXED BIN(15)  BASED(PTR);                 :
       388.0     1     :     DCL  CN                CHAR DEF CONTINUATION;                     :
       389.0     1     :     DCL  COMMA             CHAR      INIT(',');                       :
       390.0     1     :     DCL  CONTINUATION      CHAR      INIT('+');                       :
       391.0     1     :     DCL  CONTINUE_AREA     CHAR(255) VAR;                             :
       392.0     1     :     DCL  CUTOFF            FIXED BIN INIT(32000);                     :
       393.0     1     :     DCL  DASH              CHAR      INIT('-');                       :
       394.0     1     :     DCL  DDNAME            CHAR(8)   INIT('MACROS  ');                :
       395.0     1     :     DCL  DIRECTORY         CHAR(256);                                 :
       396.0     1     :     DCL  DOUBLE_QUOTE      CHAR      INIT('"');                       :
       397.0     1     :     DCL  DSNAME            CHAR(44)  VAR;                             :
       398.0     1     :     DCL  DYNALOC           CONDITION;                                 :
       399.0     1     :     DCL  EIGHTY            FIXED BIN(31) INIT(80);                    :
       400.0     1     :     DCL  ERR               FIXED BIN(31);                             :
       401.0     1     :     DCL  ERRCODE           FIXED BIN(31);                             :
       402.0     1     :     DCL  EXTENT            FIXED BIN;                                 :
       403.0     1     :     DCL  FIELDLENGTH       FIXED BIN;                                 :
       404.0     1     :     DCL  FILE              FILE  VARIABLE INIT(MACROS);               :
       405.0     1     :     DCL  FILE2             FILE  VARIABLE INIT(SYSPRINT);             :
       406.0     1     :     DCL  GLOBAL            CHAR(255)  VAR;                            :
       407.0     1     :     DCL  INSTRUCTION       CHAR(265)  VAR;                            :
       408.0           :     /*      DCL  INSTRUCTION       CHAR(255)  DEF LINE(1); */         :
       409.0     1     :     DCL  LDSN              FIXED BIN(15);                             :
       410.0     1     :     DCL  LEFT_PAREN        CHAR      INIT('(');                       :
       411.0     1     :     DCL  LENTH             FIXED BIN(31) INIT(8);                     :
       412.0     1     :     DCL  LINE(255)         CHAR STATIC;                               :
       413.0     1     :     DCL  LINE_KNT          FIXED BIN(31);                             :
       414.0     1     :     DCL  MARKER            CHAR(2)   INIT('./');                      :
       415.0     1     :     DCL  MATRIX(EXTENT)    CHAR(8)   CONTROLLED;                      :
       416.0     1     :     DCL  MEM_NAME_HDR      CHAR(13)  INIT('MEMBER NAME =');           :
       417.0     1     :     DCL  MEMBER_NAME       CHAR(8)   CONTROLLED VAR;                  :
       418.0     1     :     DCL  MEMNAME           CHAR(8)   INIT(' ');                       :
       419.0     1     :     DCL  MRECFM            CHAR(4);                                   :
       420.0     1     :     DCL  MINUS3            FIXED BIN INIT(-3);                        :
       421.0     1     :     DCL  NESTLVL           FIXED BIN INIT(0);                         :
       422.0     1     :     DCL  NESTOVFLO         FIXED BIN INIT(5);                         :
       423.0     1     :     DCL  NOW               CHAR(8);                                   :
       424.0     1     :     DCL  OCCURS            FIXED BIN INIT(1);                         :
       425.0     1     :     DCL  ONE               FIXED BIN INIT(1);                         :
       426.0     1     :     DCL  OVFLO             FIXED BIN(15);                             :
       427.0     1     :     DCL  OUTFILE           CHAR(44)  VAR;                             :
       428.0     1     :     DCL  OUTLENGTH         FIXED BIN(15);                             :
       429.0     1     :     DCL  P                 POINTER;                                   :
       430.0     1     :     DCL  PAGE_KNT          FIXED BIN INIT(1);                         :
       431.0     1     :     DCL  PAGE_NUMBER(EXTENT)FIXED BIN CONTROLLED;                     :
       432.0     1     :     DCL  PARM              CHAR(255)  VAR;                            :
       433.0     1     :     DCL  PHRASE            CHAR(255);                                 :
       434.0     1     :     DCL  PGSIZE            FIXED BIN  INIT(60);                       :
       435.0     1     :     DCL  PTR               POINTER;                                   :
       436.0     1     :     DCL  QUOTE             CHAR      INIT('''');                      :
       437.0     1     :     DCL  RBERR             CHAR(2);                                   :
       438.0     1     :     DCL  RC                CHAR DEF REFERENCE_CHAR;                   :
       439.0     1     :     DCL  REFERENCE_CHAR    CHAR      INIT('&');                       :
       440.0     1     :     DCL  REPLACEMENT       CHAR(255)  VAR INIT(' ');                  :
       441.0     1     :     DCL  RIGHT_PAREN       CHAR      INIT(')');                       :
       442.0     1     :     DCL  RTNCODE           FIXED BIN  INIT(60);                       :
       443.0     1     :     DCL  SLASH             CHAR      INIT('/');                       :
       444.0     1     :     DCL  STACK             CHAR(255) CONTROLLED;                      :
       445.0     1     :     DCL  SVCWRK            FIXED BIN(31) INIT(0);                     :
       446.0     1     :     DCL  TARGET            CHAR(255)  VAR INIT(' ');                  :
       447.0     1     :     DCL  TODAY             CHAR(12);                                  :
       448.0     1     :     DCL  VALID             CHAR(40)  INIT                             :
       449.0           :          (' 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ$#@');                :
       450.0     1     :     DCL  VECTOR            FIXED BIN(31) CONTROLLED;                  :
       451.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    11
 0    Line.File LV NT
 0     452.0     1     :     DCL 1 BLOCKDATA        BASED(P),                                  :
       453.0           :         2  BLOCKSIZE       CHAR(2),                                   :
       454.0           :          2 BLOCK_DATA,                                                :
       455.0           :           3 MEMBR          CHAR(8),                                   :
       456.0           :           3 TTR            CHAR(3),                                   :
       457.0           :           3 JUNK           CHAR,                                      :
       458.0           :           3 FILLER         CHAR(5),                                   :
       459.0           :           3 JULIAN_DATE    CHAR(3),                                   :
       460.0           :           3 FILLER2        CHAR(40);                                  :
       461.0           :                                                                       :
       462.0     1     :     DCL 1 INFORMATION      UNALIGNED,                                 :
       463.0           :          2  DD_NAME        CHAR(8),                                   :
       464.0           :          2  DSN            CHAR(44),                                  :
       465.0           :          2  MEMBER         CHAR(8),                                   :
       466.0           :          2  STATUS         BIT(8),                                    :
       467.0           :          2  NORM_DISP      BIT(8),                                    :
       468.0           :          2  COND_DISP      BIT(8),                                    :
       469.0           :          2  DSORG          BIT(16),                                   :
       470.0           :          2  LIMIT          FIXED BIN(15),                             :
       471.0           :          2  ATTRIBUTE      BIT(8),                                    :
       472.0           :          2  LAST_ENTRY     BIT(8),                                    :
       473.0           :          2  TYPE           BIT(8);                                    :
       474.0           :                                                                       :
       475.0     1     :     DCL 1 WORK,                                                       :
       476.0           :         2 WRKLENGTH             FIXED BIN(31) INIT(2000),             :
       477.0           :         2 WRKAREA               CHAR(2000);                           :
       478.0           :                                                                       :
       479.0     1     :     DCL 1 ALLOC_DATA,                                                 :
       480.0           :         2 ALLOC_DD              CHAR(3)  INIT('DD='),                 :
       481.0           :         2 ALLOC_DDN             CHAR(9),                              :
       482.0           :         2 ALLOC_DSN             CHAR(4)  INIT('DSN='),                :
       483.0           :         2 ALLOC_DSNAME          CHAR(80),                             :
       484.0           :         2 ALLOC_SGN             CHAR     INIT(';');                   :
       485.0           :                                                                       :
       486.0     1     :     DCL 1 MEMBER_DATA,                                                :
       487.0           :         2 MEMBER_DD             CHAR(3)  INIT('DD='),                 :
       488.0           :         2 MEMBER_DDN            CHAR(9),                              :
       489.0           :         2 MEMBER_DSN            CHAR(4)  INIT('DSN='),                :
       490.0           :         2 MEMBER_DSNAME         CHAR(80),                             :
       491.0           :         2 MEMBER_MEMBR          CHAR(7)  INIT('MEMBER='),             :
       492.0           :         2 MEMBER_NAM            CHAR(8),                              :
       493.0           :         2 MEMBER_SGN            CHAR     INIT(';');                   :
       494.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    12
 0    Line.File LV NT
 0     495.0           :                                                                       :
       496.0     1     :     DCL 1 DD,                                                         :
       497.0           :           2 R_CODE               FIXED BIN(31) INIT(-3),              :
       498.0           :           2 DDN                  CHAR(8) INIT('PDSCOPY '),            :
       499.0           :           2 INFO,                                                     :
       500.0           :              3 OSNAME            CHAR(44),                            :
       501.0           :              3 MEMBER            CHAR(8),                             :
       502.0           :              3 DSORG             CHAR(2),                             :
       503.0           :              3 RECFM             CHAR(4),                             :
       504.0           :              3 LRECL             FIXED BIN(15),                       :
       505.0           :              3 BLKSIZE           FIXED BIN(15),                       :
       506.0           :              3 CATALOGED         CHAR(1),                             :
       507.0           :              3 CREATED           PIC'99999';                          :
       508.0           :                                                                       :
       509.0           :                                                                       :
       510.0           : /*  DCL   WHOAMI            EXTERNAL OPTIONS(ASM  INTER  RETCODE)     :
       511.0           :           ENTRY(01,                                                   :
       512.0           :                 02  CHAR(4),                                          :
       513.0           :                 02  CHAR(8),                                          :
       514.0           :                 02  CHAR(8),                                          :
       515.0           :                 02  CHAR(8),                                          :
       516.0           :                 02  CHAR(6))*/                                        :
       517.0           :                                                                       :
       518.0     1     :     DCL 1 PROFILE_AREA,                                               :
       519.0           :                 2  FILL1                     CHAR(4)     INIT(' '),   :
       520.0           :                 2  JOBNAME                   CHAR(8)     INIT(' '),   :
       521.0           :                 2  FILL2                     CHAR(8)     INIT(' '),   :
       522.0           :                 2  FILL3                     CHAR(8)     INIT(' '),   :
       523.0           :                 2  FILL4                     CHAR(6)     INIT(' ');   :
       524.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    13
 0    Line.File LV NT
 0     525.0     1     :  INITIALIZE:BEGIN;                                                    :
       526.0     2     :     TODAY=                                                            :
       527.0           :        SUBSTR(DATE,3,2)||'/'||SUBSTR(DATE,5)||'/'||SUBSTR(DATE,1);    :
       528.0     2     :     NOW=SUBSTR(TIME,1,2)||'.'||SUBSTR(TIME,3,2)||'.'||                :
       529.0           :         SUBSTR(TIME,5,2);                                             :
       530.0     2     :     IF LENGTH(PARM) > 0  THEN CALL OPTIONS(PARM);  /*RESOLVE PARM*/   :
       531.0           :                                                                       :
       532.0           :  /* CALL  WHOAMI(PROFILE_AREA)*/              /* EXTERNAL CALL   */   :
       533.0           :  /* IF SUBSTR(JOBNAME,1,3) ^= 'HB2' THEN RETURN; /*  <========   */   :
       534.0           :                                                                       :
       535.0     2     :     IF TEST & Q(1) THEN PUT SKIP DATA(Q);                             :
       536.0     2     :     IF DTS THEN PUT SKIP EDIT                                         :
       537.0           :            ('PROGRAM DATE-TIME-STAMP: 03/27/85 15:47:04')(A);         :
       538.0           :                                                                       :
       539.0           :                                                                       :
       540.0     2     :     IF REWRITE THEN NEST = FALSE;                                     :
       541.0     2     :     IF UNLOAD  THEN PROFILE = TRUE;                                   :
       542.0     2     :     IF LOAD    THEN COPY = TRUE;                                      :
       543.0     2     :     IF SHORT        THEN LONG  = 0B;                                  :
       544.0     2     :     IF AND          THEN OR = 0B;                                     :
       545.0     2     :     IF WYLFMT                                                         :
       546.0     2     :        THEN DO;                                                       :
       547.0     2  1  :             REWRITE = FALSE;                                          :
       548.0     2  1  :             FILE = EDIT;                                              :
       549.0     2  1  :             END;                                                      :
       550.0     2     :     IF INTRDR                                                         :
       551.0     2     :        THEN CALL SVC99(WORK,'ALLOC',                                  :
       552.0           :                       'DD=READER SYSOUT=A SYSOPROG=INTRDR;');         :
       553.0     2     :     CALL GET_MACRO_DSN;                                               :
       554.0     2     :     IF COPY                                                           :
       555.0     2     :        THEN DO;                                                       :
       556.0     2  1  :             FILE    = PDSCOPY;                                        :
       557.0     2  1  :             DDNAME  = 'PDSCOPY ';                                     :
       558.0     2  1  :             REWRITE = FALSE;                                          :
       559.0     2  1  :             INTRDR  = FALSE;                                          :
       560.0     2  1  :             END;                                                      :
       561.0           :                                                                       :
       562.0     2     :     IF TEST & Q(6) THEN PUT SKIP DATA                                 :
       563.0           :        (AND,ANYPDS,BLANKLINE,COPY,DTS,INTRDR,LIST,LISTPDS,            :
       564.0           :         LONG,NAME,NEST,NUM,OPTN,OR,PRINT,PROFILE,RENUM,               :
       565.0           :         REWRITE,SHOMEM,SHORTLST,TEST,WYLFMT);                         :
       566.0     2     :     IF TEST & Q(9) THEN PUT SKIP DATA;                                :
       567.0           :                                                                       :
       568.0           :                                                                       :
       569.0     2     :     GET FILE(SYSIN) EDIT(INSTRUCTION)(A(80));    /* INITIAL READ */   :
       570.0           :                                                                       :
       571.0     2     :  END INITIALIZE;                                                      :
       572.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    14
 0    Line.File LV NT
 0     573.0     1     :  #OPTION1:BEGIN;                                                      :
       574.0     2     :     IF LIST | LISTPDS                       /* PRODUCE A PDSLIST */   :
       575.0     2     :        THEN DO;                                                       :
       576.0     2  1  :               FILE, FILE2 = PDSLIST;                                  :
       577.0     2  1  :               NEST = FALSE;                                           :
       578.0     2  1  :               IF SHORT THEN OPEN FILE(PDSLIST) LINESIZE(80)           :
       579.0           :                                             PAGESIZE(PGSIZE);         :
       580.0     2  1  :                        ELSE OPEN FILE(PDSLIST) LINESIZE(132)          :
       581.0           :                                             PAGESIZE(PGSIZE);         :
       582.0     2  1  :               CALL ALL_MEMBERS;                                       :
       583.0     2  1  :               DO I = 1 TO HBOUND(MATRIX,1);    /*FOR ALL MEMBERS*/    :
       584.0     2  2  :                  MEMNAME = MATRIX(I);                                 :
       585.0     2  2  :                  SIGNAL ENDPAGE(PDSLIST);                             :
       586.0     2  2  :                  LINE_KNT = 0;                                        :
       587.0     2  2  :                  PAGE_NUMBER(I) = PAGE_KNT - 1;                       :
       588.0     2  2  :                  ALLOW_INPUT  = TRUE;                                 :
       589.0     2  2  :                  ALLOW_OUTPUT = FALSE;                                :
       590.0     2  2  :                  DO J = 1 TO HBOUND(APPLICATION,1);                   :
       591.0     2  3  :                     IF J = HBOUND(APPLICATION,1)                      :
       592.0     2  3  :                        THEN ALLOW_OUTPUT = TRUE;                      :
       593.0     2  3  :                     INSTRUCTION=RC||MATRIX(I)||' '||APPLICATION(J);   :
       594.0     2  3  :                     IF VERIFY(MATRIX(I),VALID) > 0                    :
       595.0     2  3  :                        THEN PUT SKIP(2) FILE(PDSLIST)                 :
       596.0           :                                 EDIT('INVALID MEMBER ',               :
       597.0           :                                 'NAME "',MATRIX(I),'"')(A);           :
       598.0     2  3  :                        ELSE IF MATRIX(I) ^= '        ' THEN           :
       599.0     2  3  :                                CALL MACPROC(J);                       :
       600.0     2  3  :                     ALLOW_INPUT  = FALSE;                             :
       601.0     2  3  :                  END;                                                 :
       602.0     2  2  :                  CLOSE FILE(MACROS);                                  :
       603.0     2  2  :               END;                                                    :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    15
 0    Line.File LV NT
 0     604.0     2  1  :               MEM_NAME_HDR = 'MEMBER INDEX';                          :
       605.0     2  1  :               SIGNAL ENDPAGE(PDSLIST);                                :
       606.0     2  1  :               J = 0;                                                  :
       607.0     2  1  :               EXTENT = HBOUND(MATRIX,1);                              :
       608.0     2  1  :               DO WHILE(J <= EXTENT);              /* INDEX PAGES */   :
       609.0     2  2  :                  DO K = 1 TO 50  WHILE(J <= EXTENT);                  :
       610.0     2  3  :                     J = J + 1; J50 = J + 50; J100 = J + 100;          :
       611.0     2  3  :                     IF J100 <= EXTENT THEN                            :
       612.0     2  3  :                        PUT SKIP FILE(PDSLIST) EDIT                    :
       613.0           :                            (MATRIX(J))        (COL(5),A)              :
       614.0           :                            (PAGE_NUMBER(J))   (COL(15),P'ZZZZZ')      :
       615.0           :                            (MATRIX(J50))     (COL(30),A)              :
       616.0           :                            (PAGE_NUMBER(J50))(COL(40),P'ZZZZZ')       :
       617.0           :                            (MATRIX(J100))    (COL(55),A)              :
       618.0           :                            (PAGE_NUMBER(J100))(COL(65),P'ZZZZZ');     :
       619.0     2  3  :                     ELSE                                              :
       620.0     2  3  :                     IF J50  <= EXTENT THEN                            :
       621.0     2  3  :                        PUT SKIP FILE(PDSLIST) EDIT                    :
       622.0           :                            (MATRIX(J))        (COL(5),A)              :
       623.0           :                            (PAGE_NUMBER(J))   (COL(15),P'ZZZZZ')      :
       624.0           :                            (MATRIX(J50))     (COL(30),A)              :
       625.0           :                            (PAGE_NUMBER(J50))(COL(40),P'ZZZZZ');      :
       626.0     2  3  :                     ELSE                                              :
       627.0     2  3  :                     IF J    <= EXTENT THEN                            :
       628.0     2  3  :                        PUT SKIP FILE(PDSLIST) EDIT                    :
       629.0           :                            (MATRIX(J))        (COL(5),A)              :
       630.0           :                            (PAGE_NUMBER(J))   (COL(15),P'ZZZZZ');     :
       631.0     2  3  :                  END;                                                 :
       632.0     2  2  :                  J = J + 100;                                         :
       633.0     2  2  :                  IF J < EXTENT THEN SIGNAL ENDPAGE(PDSLIST);          :
       634.0     2  2  :               END;                                                    :
       635.0     2  1  :               RETURN;                                                 :
       636.0     2  1  :             END;                                                      :
       637.0     2     :  END #OPTION1;                                                        :
       638.0           :                                                                       :
       639.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    16
 0    Line.File LV NT
 0     640.0     1     :  #OPTION2:BEGIN;                                                      :
       641.0     2     :     IF PROFILE                 /* PROCESS ALL MEMBERS OF THE PDS */   :
       642.0     2     :        THEN DO;                                                       :
       643.0     2  1  :               CALL ALL_MEMBERS;                                       :
       644.0     2  1  :               DO I = 1 TO HBOUND(MATRIX,1);   /*NUMBER OF MEMBERS*/   :
       645.0     2  2  :                  ALLOW_INPUT  = TRUE;                                 :
       646.0     2  2  :                  ALLOW_OUTPUT = FALSE;                                :
       647.0     2  2  :                  DO J = 1 TO HBOUND(APPLICATION,1);                   :
       648.0     2  3  :                     IF J = HBOUND(APPLICATION,1)                      :
       649.0     2  3  :                        THEN ALLOW_OUTPUT = TRUE;                      :
       650.0     2  3  :                     INSTRUCTION=RC||MATRIX(I)||' '||APPLICATION(J);   :
       651.0     2  3  :                     IF VERIFY(MATRIX(I),VALID) > 0                    :
       652.0     2  3  :                        THEN PUT SKIP(2) EDIT('INVALID MEMBER ',       :
       653.0           :                                 'NAME "',MATRIX(I),'"')(A);           :
       654.0     2  3  :                        ELSE IF MATRIX(I) ^= '        ' THEN           :
       655.0     2  3  :                                CALL MACPROC(J);                       :
       656.0     2  3  :                     ALLOW_INPUT  = FALSE;                             :
       657.0     2  3  :                  END;                                                 :
       658.0     2  2  :               END;                                                    :
       659.0     2  1  :               RETURN;                                                 :
       660.0     2  1  :             END;                                                      :
       661.0     2     :  END #OPTION2;                                                        :
       662.0           :                                                                       :
       663.0           :                                                                       :
       664.0     1     :  #OPTION3:BEGIN;                                                      :
       665.0     2     :     IF LOAD                 /* LOAD A SEQUENTIAL FILE INTO A PDS */   :
       666.0     2     :        THEN DO;                                                       :
       667.0     2  1  :             READ FILE(INPUT) INTO(BLOCK);                             :
       668.0     2  1  :             DO WHILE(^E_O_F);                                         :
       669.0     2  2  :                CALL MACPROC(ONE);                                     :
       670.0     2  2  :             END;                                                      :
       671.0     2  1  :             RETURN;                                                   :
       672.0     2  1  :             END;                                                      :
       673.0     2     :  END #OPTION3;                                                        :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    17
 0    Line.File LV NT
 0     674.0           :                                                                       :
       675.0     1     :  #OPTION4:BEGIN;                                                      :
       676.0     2     :     DO WHILE(^END_OF_FILE);                /* produce a "stream" */   :
       677.0     2  1  :        SELECT(LINE(1));                                               :
       678.0     2  2  :           WHEN(RC)                                                    :
       679.0     2  2  :              DO;                                                      :
       680.0     2  3  :                DO J = 80 TO 1 BY -1 WHILE(LINE(J)=' ');END;           :
       681.0     2  3  :                IF LINE(J) = CONTINUATION                              :
       682.0     2  3  :                   THEN DO;                                            :
       683.0     2  4  :                          CONTINUED = 1B;                              :
       684.0     2  4  :                          CONTINUE_AREA = SUBSTR(INSTRUCTION,1,J-1);   :
       685.0     2  4  :                          DO WHILE(CONTINUED);                         :
       686.0     2  5  :                            GET FILE(SYSIN)EDIT(INSTRUCTION)(A(80));   :
       687.0     2  5  :                            DO J = 80 TO 1 BY -1                       :
       688.0     2  6  :                               WHILE(LINE(J)=' ');END;                 :
       689.0     2  5  :                            IF LINE(J) ^= CONTINUATION                 :
       690.0     2  5  :                               THEN DO;                                :
       691.0     2  6  :                                    CONTINUE_AREA = CONTINUE_AREA ||   :
       692.0           :                                                    INSTRUCTION;       :
       693.0     2  6  :                                    CONTINUED = 0B;                    :
       694.0     2  6  :                                    END;                               :
       695.0     2  5  :                               ELSE CONTINUE_AREA = CONTINUE_AREA ||   :
       696.0           :                                          SUBSTR(INSTRUCTION,1,J-1);   :
       697.0     2  5  :                          END;                                         :
       698.0     2  4  :                          INSTRUCTION = CONTINUE_AREA;                 :
       699.0     2  4  :                        END;                                           :
       700.0     2  3  :                 IF OPTN                                               :
       701.0           :                  & (SUBSTR(INSTRUCTION,2,4) = 'PARM'   |              :
       702.0           :                     SUBSTR(INSTRUCTION,2,6) = 'GLOBAL')               :
       703.0     2  3  :                    THEN CALL CHANGE_OPTN;                             :
       704.0     2  3  :                    ELSE CALL MACPROC(ONE);                            :
       705.0     2  3  :               END;                                                    :
       706.0     2  2  :           OTHERWISE CALL OUTPUT_RTN(LINE_KNT);                        :
       707.0     2  2  :        END;                                                           :
       708.0     2  1  :        GET FILE(SYSIN) EDIT(INSTRUCTION)(A(80));                      :
       709.0     2  1  :     END;                                                              :
       710.0     2     :  END #OPTION4;                                                        :
       711.0           : /*****************************************************************/   :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    18
 0    Line.File LV NT
 0     712.0     1     : MACPROC:PROCEDURE(CNTL)         RECURSIVE;                            :
       713.0     2     :     ON ERROR SNAP BEGIN; ON ERROR SYSTEM;                             :
       714.0     3     :        IF TEST  THEN PUT SKIP DATA; END;                              :
       715.0           :                                                                       :
       716.0     2     :     DCL  (CNTL,I,J,K,L,M,N,LM)  FIXED BIN;                            :
       717.0     2     :     DCL  (KNT,EXTENT)           FIXED BIN;                            :
       718.0     2     :     DCL  UPZKNT                 FIXED BIN(31);                        :
       719.0     2     :     DCL  LINE(255)              CHAR;                                 :
       720.0     2     :     DCL  ARG                    CHAR(255)  DEF LINE(1);               :
       721.0     2     :     DCL  PARM                   CHAR(255)  VAR;                       :
       722.0     2     :     DCL  MASK(EXTENT,OCCURS)    BIT        CONTROLLED;                :
       723.0     2     :     DCL  (START,HOLD,CURRENT)   PTR;                                  :
       724.0     2     :     DCL 1  ARRAY                BASED(CURRENT),                       :
       725.0           :         11 LINE_NUMBER          FIXED BIN(31),                        :
       726.0           :         11 TEXT                 CHAR(255)  VAR,                       :
       727.0           :         11 (NEXT,PRIOR)         POINTER;                              :
       728.0           :                                                                       :
       729.0     2     :     IF TEST & Q(20) THEN PUT SKIP DATA(INSTRUCTION);                  :
       730.0     2     :     NESTLVL = NESTLVL + 1;                                            :
       731.0     2     :     IF NESTLVL > NESTOVFLO                                            :
       732.0     2     :        THEN DO;                                                       :
       733.0     2  1  :             PUT SKIP(2) LIST('*** EXCESSIVE NESTING ***');            :
       734.0     2  1  :             SIGNAL ERROR;                                             :
       735.0     2  1  :             END;                                                      :
       736.0     2     :     PARM = INSTRUCTION;                                               :
       737.0     2     :     DO I = 255 TO 1 BY -1 WHILE(SUBSTR(PARM,I,1)=' ');END;            :
       738.0     2     :     IF LENGTH(GLOBAL) > 1                                             :
       739.0     2     :        THEN DO;                                                       :
       740.0     2  1  :             IF INDEX(PARM,'=') > 0                                    :
       741.0     2  1  :                THEN PARM = SUBSTR(PARM,1,I)||','||GLOBAL;             :
       742.0     2  1  :                ELSE PARM = SUBSTR(PARM,1,I)||' '||GLOBAL;             :
       743.0     2  1  :             DO I = 255 TO 1 BY -1 WHILE(SUBSTR(PARM,I,1)=' ');END;    :
       744.0     2  1  :             IF TEST & Q(24) THEN PUT SKIP DATA(PARM);                 :
       745.0     2  1  :             END;                                                      :
       746.0     2     :     ARG,PARM = SUBSTR(PARM,1,I);                                      :
       747.0     2     :     IF SUBSTR(PARM,LENGTH(PARM)) ^= QUOTE  THEN PARM = PARM || ',';   :
       748.0     2     :     DO M = 2 TO 255 WHILE(LINE(M)^=' ' & M<LENGTH(PARM));END;         :
       749.0     2     :     MEMNAME = SUBSTR(ARG,2,M-2);                                      :
       750.0     2     :     IF SHOMEM THEN PUT SKIP LIST('CURRENT MEMBER:',MEMNAME);          :
       751.0     2     :     IF ANYPDS                      /*OBTAIN THE DSN FROM THE DATA*/   :
       752.0     2     :        THEN DO;                                                       :
       753.0     2  1  :             L = LENGTH(PARM);                                         :
       754.0     2  1  :             DO I = M TO L WHILE(LINE(I)=' ');END;                     :
       755.0     2  1  :             DO M = I TO L WHILE(LINE(M)^=' ');END;                    :
       756.0     2  1  :             LDSN = M;                                                 :
       757.0     2  1  :             DSNAME = SUBSTR(ARG,I,M-I);                               :
       758.0     2  1  :             END;                                                      :
       759.0     2     :     ARG =  PARM;                                                      :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    19
 0    Line.File LV NT
 0     760.0           :                                                                       :
       761.0     2     :     IF ALLOW_INPUT  THEN                                              :
       762.0     2     :  #STACKIT:BEGIN;                                                      :
       763.0     3     :     EXTENT = 0;                                                       :
       764.0     3     :     START = NULL;                                                     :
       765.0     3     :     KNT = 1;                                                          :
       766.0     3     :     IF LOAD                                                           :
       767.0     3     :        THEN DO;                                                       :
       768.0     3  1  :             ARG = ' ';                                                :
       769.0     3  1  :             IF SUBSTR(BLOCK,1,2) = MARKER                             :
       770.0     3  1  :                THEN I = INDEX(BLOCK,'NAME=');                         :
       771.0     3  1  :                ELSE SIGNAL ERROR;                                     :
       772.0     3  1  :             MEMNAME = SUBSTR(BLOCK,I+5,8);                            :
       773.0     3  1  :             READ FILE(INPUT) INTO(BLOCK);                             :
       774.0     3  1  :             DO WHILE(^E_O_F & SUBSTR(BLOCK,1,2) ^= MARKER);           :
       775.0     3  2  :                ALLOC ARRAY;                                           :
       776.0     3  2  :                EXTENT = EXTENT + 1;                                   :
       777.0     3  2  :                LINE_NUMBER = KNT;                                     :
       778.0     3  2  :                TEXT = BLOCK;                                          :
       779.0     3  2  :                IF START = NULL                                        :
       780.0     3  2  :                   THEN START = CURRENT;                               :
       781.0     3  2  :                   ELSE HOLD->NEXT = CURRENT;                          :
       782.0     3  2  :                HOLD = CURRENT;                                        :
       783.0     3  2  :                NEXT = NULL;                                           :
       784.0     3  2  :                READ FILE(INPUT) INTO(BLOCK);                          :
       785.0     3  2  :                KNT = KNT + 1;                                         :
       786.0     3  2  :                IF KNT > CUTOFF THEN MORE = 0B;                        :
       787.0     3  2  :             END;                                                      :
       788.0     3  1  :             END;                                                      :
       789.0     3     :        ELSE DO;                                                       :
       790.0     3  1  :             MEMBER_DDN = 'MACROS';                                    :
       791.0     3  1  :             MEMBER_DSNAME = DSNAME || ' SHR';                         :
       792.0     3  1  :             MEMBER_NAM = MEMNAME;                                     :
       793.0     3  1  :             CALL SVC99(WORK,'ALLOC',MEMBER_DATA);                     :
       794.0     3  1  :             IF PLIRETV ^= 0  THEN SIGNAL CONDITION(DYNALOC);          :
       795.0     3  1  :             IF PRINT  THEN PUT PAGE;                                  :
       796.0     3  1  :             MORE = 1B;                                                :
       797.0     3  1  :             READ FILE(MACROS) INTO(BLOCK);                            :
       798.0     3  1  :             UPZKNT = 0;                                               :
       799.0     3  1  :             DO WHILE(MORE);                                           :
       800.0     3  2  :                BIT16 = UNSPEC(SUBSTR(BLOCK,1,2));                     :
       801.0     3  2  :                UNSPEC(BIT16)=UNSPEC(BIT16)&'0111111111111111'B;       :
       802.0     3  2  :                BLOCK_LENGTH = BIT16;                                  :
       803.0     3  2  :                IF BLOCK_LENGTH = LENGTH(BLOCK)                        :
       804.0     3  2  :                 | OBS  THEN CALL UNPRESS;                             :
       805.0     3  2  :                ELSE IF MRECFM = 'U'                                   :
       806.0     3  2  :                        THEN DO;                                       :
       807.0     3  3  :                             PUT SKIP FILE(FILE2) EDIT                 :
       808.0           :                                ('***ERROR: INVALID ' ||               :
       809.0           :                                'RECORD FORMAT - ' || MEMNAME)(A);     :
       810.0     3  3  :                             MORE = 0B;                                :
       811.0     3  3  :                             BUMMER = TRUE;                            :
       812.0     3  3  :                             END;                                      :
       813.0     3  2  :                        ELSE DO;                                       :
       814.0     3  3  :                             IF ^BLANKLINE                             :
       815.0     3  3  :                              & VERIFY(BLOCK,BLANK) = 0  THEN;         :
       816.0     3  3  :                                ELSE DO;                               :
       817.0     3  4  :                                     ALLOC ARRAY;                      :
       818.0     3  4  :                                     EXTENT = EXTENT + 1;              :
       819.0     3  4  :                                     LINE_NUMBER = KNT;                :
       820.0     3  4  :                                     TEXT = BLOCK;                     :
       821.0     3  4  :                                     IF START = NULL                   :
       822.0     3  4  :                                        THEN START = CURRENT;          :
       823.0     3  4  :                                        ELSE HOLD->NEXT = CURRENT;     :
       824.0     3  4  :                                     HOLD = CURRENT;                   :
       825.0     3  4  :                                     NEXT = NULL;                      :
       826.0     3  4  :                                     END;                              :
       827.0     3  3  :                             END;                                      :
       828.0     3  2  :               READ FILE(MACROS) INTO(BLOCK);                          :
       829.0     3  2  :                KNT = KNT + 1;                                         :
       830.0     3  2  :                IF KNT > CUTOFF THEN MORE = 0B;                        :
       831.0     3  2  :             END;                                                      :
       832.0     3  1  :             END;                                                      :
       833.0           :                                                                       :
       834.0     3     :     LM = EXTENT;                                                      :
       835.0     3     :     CLOSE FILE(MACROS);                                               :
       836.0     3     :     IF ^LOAD THEN CALL SVC99(WORK,'UNALLOC','DD=MACROS UNALLOC;');    :
       837.0     3     :     IF EXTENT > 0                                                     :
       838.0     3     :        THEN DO;                                                       :
       839.0     3  1  :             ALLOC MASK;                                               :
       840.0     3  1  :             MASK(*,*) = 1B;                                           :
       841.0     3  1  :             MASK_SWITCH = 1B;                                         :
       842.0     3  1  :             END;                                                      :
       843.0     3     :        ELSE IF ^BUMMER THEN SIGNAL ERROR;                             :
       844.0     3     :  END #STACKIT;                                                        :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    20
 0    Line.File LV NT
 0     845.0           :                                                                       :
       846.0     2     :     DO N = M TO 255 WHILE(LINE(N)=' ');/*SKIP BLANKS*/END;            :
       847.0     2     :     IF SUBSTR(ARG,N,6) = 'CHANGE'                                     :
       848.0           :      | SUBSTR(ARG,N,2) = 'CH'                                         :
       849.0     2     :        THEN CALL CHANGE_RTN(SUBSTR(PARM,N));                          :
       850.0     2     :        ELSE                                                           :
       851.0     2     :           IF INDEX(ARG,'=') > 0   THEN                                :
       852.0           :  /*(STRINGRANGE,STRINGSIZE):CHANGES:BEGIN;*/                          :
       853.0     2     :  #CHANGES:BEGIN; /*..........PARSE  CHANGES/SELECTION CRITEIA....*/   :
       854.0     3     :     DO N = M TO 255 WHILE(LINE(N)=' ');/*SKIP BLANKS*/END;            :
       855.0     3     :     DO WHILE(N < LENGTH(PARM));                                       :
       856.0     3  1  :        M = INDEX(SUBSTR(ARG,N),'=') + N - 1;                          :
       857.0     3  1  :        SELECT(LINE(N));                           /* FIND TARGET */   :
       858.0     3  2  :           WHEN(DOUBLE_QUOTE)                                          :
       859.0     3  2  :                DO;                                                    :
       860.0     3  3  :                M = INDEX(SUBSTR(ARG,N+1),DOUBLE_QUOTE);               :
       861.0     3  3  :                M = (1)*(M=0) + (M)*(M>0);                             :
       862.0     3  3  :                TARGET = SUBSTR(ARG,N+1,M-1);                          :
       863.0     3  3  :                DO M = N+M+1 TO 255 WHILE(LINE(M)=' ');END;            :
       864.0     3  3  :                END;                                                   :
       865.0     3  2  :           WHEN(QUOTE)                                                 :
       866.0     3  2  :                DO;                                                    :
       867.0     3  3  :                M = INDEX(SUBSTR(ARG,N+1),QUOTE);                      :
       868.0     3  3  :                M = (1)*(M=0) + (M)*(M>0);                             :
       869.0     3  3  :                TARGET = SUBSTR(ARG,N+1,M-1);                          :
       870.0     3  3  :                DO M = N+M+1 TO 255 WHILE(LINE(M)=' ');END;            :
       871.0     3  3  :                END;                                                   :
       872.0     3  2  :           OTHERWISE                                                   :
       873.0     3  2  :                DO;                                                    :
       874.0     3  3  :                TARGET = SUBSTR(ARG,N,M-N);                            :
       875.0     3  3  :                DO WHILE(SUBSTR(TARGET,LENGTH(TARGET))=' ');           :
       876.0     3  4  :                   TARGET = SUBSTR(TARGET,1,LENGTH(TARGET)-1);         :
       877.0     3  4  :                END;                                                   :
       878.0     3  3  :                END;                                                   :
       879.0     3  2  :        END;                                                           :
       880.0     3  1  :        N = M + 1;                                                     :
       881.0     3  1  :        DO M = N TO 255 WHILE(LINE(M)=' ');/*SKIP BLANK*/END;          :
       882.0     3  1  :        SELECT(LINE(M));                      /* FIND REPLACEMENT */   :
       883.0     3  2  :           WHEN(LEFT_PAREN)                                            :
       884.0     3  2  :                DO;                                                    :
       885.0     3  3  :                N = INDEX(SUBSTR(ARG,M+1),RIGHT_PAREN);                :
       886.0     3  3  :                N = (1)*(N=0) + (N)*(N>0);                             :
       887.0     3  3  :                REPLACEMENT = SUBSTR(ARG,M,N+1);                       :
       888.0     3  3  :                DO M = N+M+1 TO 255 WHILE(LINE(M)=' ');END;            :
       889.0     3  3  :                END;                                                   :
       890.0     3  2  :           WHEN(DOUBLE_QUOTE)                                          :
       891.0     3  2  :                DO;                                                    :
       892.0     3  3  :                N = INDEX(SUBSTR(ARG,M+1),DOUBLE_QUOTE);               :
       893.0     3  3  :                N = (1)*(N=0) + (N)*(N>0);                             :
       894.0     3  3  :                REPLACEMENT = SUBSTR(ARG,M+1,N-1);                     :
       895.0     3  3  :                DO M = N+M+1 TO 255 WHILE(LINE(M)=' ');END;            :
       896.0     3  3  :                END;                                                   :
       897.0     3  2  :           WHEN(QUOTE)                                                 :
       898.0     3  2  :                DO;                                                    :
       899.0     3  3  :                N = INDEX(SUBSTR(ARG,M+1),QUOTE);                      :
       900.0     3  3  :                N = (1)*(N=0) + (N)*(N>0);                             :
       901.0     3  3  :                REPLACEMENT = SUBSTR(ARG,M+1,N-1);                     :
       902.0     3  3  :                DO M = N+M+1 TO 255 WHILE(LINE(M)=' ');END;            :
       903.0     3  3  :                END;                                                   :
       904.0     3  2  :           OTHERWISE                                                   :
       905.0     3  2  :                DO;                                                    :
       906.0     3  3  :                N = INDEX(SUBSTR(ARG,M),',');                          :
       907.0     3  3  :                N = (1)*(N=0) + (N)*(N>0);                             :
       908.0     3  3  :                REPLACEMENT = SUBSTR(ARG,M,N-1);                       :
       909.0     3  3  :                DO M = N+M TO 255 WHILE(LINE(M)=' ');END;              :
       910.0     3  3  :                END;                                                   :
       911.0     3  2  :        END;                                                           :
       912.0     3  1  :        IF LINE(M) = ','                                               :
       913.0     3  1  :           THEN DO;                                                    :
       914.0     3  2  :                N = M + 1;                                             :
       915.0     3  2  :                DO M = N TO 255 WHILE(LINE(M)=' ');END;                :
       916.0     3  2  :                END;                                                   :
       917.0     3  1  :        N = M;                                                         :
       918.0     3  1  :        IF Q(33) THEN PUT SKIP DATA(TARGET,REPLACEMENT);               :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    21
 0    Line.File LV NT
 0     919.0           :                                                                       :
       920.0           :   /*...............  APPLY  CHANGES /  SELECTION CRITERIA  ......*/   :
       921.0     3  1  :        HOLD = START;                                                  :
       922.0     3  1  :        IF SUBSTR(REPLACEMENT,LENGTH(REPLACEMENT)) = RIGHT_PAREN       :
       923.0           :        &  SUBSTR(REPLACEMENT,1,1) = LEFT_PAREN  THEN                  :
       924.0     3  1  :           SELECT(TARGET);                                             :
       925.0     3  2  :              WHEN('FROM')                                             :
       926.0     3  2  :                   DO;                                                 :
       927.0     3  3  :                     REPLACEMENT =                                     :
       928.0           :                     SUBSTR(REPLACEMENT,2,LENGTH(REPLACEMENT)-2);      :
       929.0     3  3  :                     MATCH = FALSE;                                    :
       930.0     3  3  :                     HOLD = START;                                     :
       931.0     3  3  :                     DO I = 1 TO LM  WHILE(^MATCH & HOLD^=NULL);       :
       932.0     3  4  :                        IF INDEX(HOLD->TEXT,REPLACEMENT) > 0           :
       933.0     3  4  :                           THEN MATCH = TRUE;                          :
       934.0     3  4  :                        HOLD = HOLD->NEXT;                             :
       935.0     3  4  :                     END;                                              :
       936.0     3  3  :                     I = I - 2;                                        :
       937.0     3  3  :                     TARGET = 'DELETE';                                :
       938.0     3  3  :                     DO K = 1 TO I;                                    :
       939.0     3  4  :                        CALL SET_BIT(K,CNTL);                          :
       940.0     3  4  :                     END;                                              :
       941.0     3  3  :                   END;                                                :
       942.0     3  2  :              WHEN('TO')                                               :
       943.0     3  2  :                   DO;                                                 :
       944.0     3  3  :                     REPLACEMENT =                                     :
       945.0           :                     SUBSTR(REPLACEMENT,2,LENGTH(REPLACEMENT)-2);      :
       946.0     3  3  :                     MATCH = FALSE;                                    :
       947.0     3  3  :                     HOLD = START;                                     :
       948.0     3  3  :                     DO I = 1 TO LM  WHILE(^MATCH & HOLD^=NULL);       :
       949.0     3  4  :                        IF INDEX(HOLD->TEXT,REPLACEMENT) > 0           :
       950.0     3  4  :                           THEN MATCH = TRUE;                          :
       951.0     3  4  :                        HOLD = HOLD->NEXT;                             :
       952.0     3  4  :                     END;                                              :
       953.0     3  3  :                     I = I + 2;                                        :
       954.0     3  3  :                     TARGET = 'DELETE';                                :
       955.0     3  3  :                     DO K = I TO LM;                                   :
       956.0     3  4  :                        CALL SET_BIT(K,CNTL);                          :
       957.0     3  4  :                     END;                                              :
       958.0     3  3  :                   END;                                                :
       959.0     3  2  :              WHEN('INC','EXC','EXCLUDE','INCLUDE')                    :
       960.0     3  2  :                   CALL INC_EXC_RANGE(CNTL);                           :
       961.0     3  2  :              WHEN('DEL','DELETE')                                     :
       962.0     3  2  :                   DO;                                                 :
       963.0     3  3  :                     HOLD = START;                                     :
       964.0     3  3  :                     REPLACEMENT =                                     :
       965.0           :                     SUBSTR(REPLACEMENT,2,LENGTH(REPLACEMENT)-2);      :
       966.0     3  3  :                     DO I = 1 TO EXTENT WHILE(HOLD^=NULL);             :
       967.0     3  4  :                        IF INDEX(HOLD->TEXT,REPLACEMENT)>0             :
       968.0     3  4  :                           THEN MASK(I,CNTL)=0B;                       :
       969.0     3  4  :                        HOLD = HOLD->NEXT;                             :
       970.0     3  4  :                     END;                                              :
       971.0     3  3  :                   END;                                                :
       972.0     3  2  :              WHEN('LIST','SELECT','SEL','FIND','EXTR','EXTRACT')      :
       973.0     3  2  :                   DO;                                                 :
       974.0     3  3  :                     HOLD = START;                                     :
       975.0     3  3  :                     IF MASK_SWITCH THEN MASK(*,*) = 0B;               :
       976.0     3  3  :                     MASK_SWITCH = 0B;                                 :
       977.0     3  3  :                     REPLACEMENT =                                     :
       978.0           :                     SUBSTR(REPLACEMENT,2,LENGTH(REPLACEMENT)-2);      :
       979.0     3  3  :                     DO I = 1 TO EXTENT WHILE(HOLD^=NULL);             :
       980.0     3  4  :                        IF Q(37) THEN PUT SKIP EDIT                    :
       981.0           :                           (MASK(I,CNTL), REPLACEMENT, HOLD->TEXT)     :
       982.0           :                           (COL(1),A,     COL(11),A,   COL(21),A);     :
       983.0     3  4  :                        IF INDEX(HOLD->TEXT,REPLACEMENT)>0             :
       984.0     3  4  :                           THEN MASK(I,CNTL)=1B;                       :
       985.0     3  4  :                        HOLD = HOLD->NEXT;                             :
       986.0     3  4  :                     END;                                              :
       987.0     3  3  :                   END;                                                :
       988.0     3  2  :              OTHERWISE;                                               :
       989.0     3  2  :              END;                                                     :
       990.0     3  1  :           ELSE DO I = 1 TO EXTENT WHILE(HOLD^=NULL);                  :
       991.0     3  2  :                   LT = LENGTH(TARGET);                                :
       992.0     3  2  :                   LC = LENGTH(REPLACEMENT);                           :
       993.0     3  2  :                   K = 0;                                              :
       994.0     3  2  :                   MORE = 1B;                                          :
       995.0     3  2  :                   MM = 1;                                             :
       996.0     3  2  :                   DO WHILE(MORE & HOLD^=NULL);                        :
       997.0     3  3  :                      KK = INDEX(SUBSTR(HOLD->TEXT,MM),TARGET);        :
       998.0     3  3  :                      K  = KK + MM - 1;                                :
       999.0     3  3  :                      IF KK = 0  THEN MORE = FALSE;                    :
      1000.0     3  3  :                      ELSE HOLD->TEXT = SUBSTR(HOLD->TEXT,1,K-1) ||    :
      1001.0           :                           REPLACEMENT || SUBSTR(HOLD->TEXT,LT+K);     :
      1002.0     3  3  :                      MM = K + LC;                                     :
      1003.0     3  3  :                   END;                                                :
      1004.0     3  2  :                   HOLD = HOLD->NEXT;                                  :
      1005.0     3  2  :                END;                                                   :
      1006.0     3  1  :     END;                                                              :
      1007.0     3     :  END #CHANGES;/* .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  */   :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    22
 0    Line.File LV NT
 0    1008.0           :                                                                       :
      1009.0     2     :     IF ALLOW_OUTPUT  THEN                                             :
      1010.0     2     :  #PUTITOUT:BEGIN;                                                     :
      1011.0     3     :     IF UNLOAD                                                         :
      1012.0     3     :        THEN DO;                                                       :
      1013.0     3  1  :             INSTRUCTION = MARKER||'      ADD   NAME='||MEMNAME;       :
      1014.0     3  1  :             CALL OUTPUT_RTN(0);                                       :
      1015.0     3  1  :             END;                                                      :
      1016.0           :                                                                       :
      1017.0     3     :     HOLD = START;                                                     :
      1018.0     3     :     IF ^WYLFMT & ^COPY                                                :
      1019.0     3     :        THEN DO K = 1 TO EXTENT WHILE(HOLD^=NULL);                     :
      1020.0     3  1  :                LINE_KNT = HOLD->LINE_NUMBER;                          :
      1021.0     3  1  :                INSTRUCTION = HOLD->TEXT;                              :
      1022.0     3  1  :                IF LOGICAL_MASK(K) THEN                                :
      1023.0     3  1  :                   IF SUBSTR(INSTRUCTION,1,1) = REFERENCE_CHAR         :
      1024.0     3  1  :                      THEN IF NEST THEN CALL MACPROC(CNTL);            :
      1025.0     3  1  :                           ELSE CALL OUTPUT_RTN(LINE_KNT);             :
      1026.0     3  1  :                      ELSE CALL OUTPUT_RTN(LINE_KNT);                  :
      1027.0     3  1  :                PTR = HOLD;                                            :
      1028.0     3  1  :                HOLD = HOLD->NEXT;                                     :
      1029.0     3  1  :                IF ^REWRITE THEN FREE PTR->ARRAY;                      :
      1030.0     3  1  :             END;                                                      :
      1031.0           :                                                                       :
      1032.0     3     :     IF WYLFMT & ^COPY                                                 :
      1033.0     3     :        THEN DO;                                                       :
      1034.0     3  1  :               DO K = 1 TO EXTENT WHILE(HOLD^=NULL);                   :
      1035.0     3  2  :                  IF LOGICAL_MASK(K)                                   :
      1036.0     3  2  :                     THEN CALL PRESS(HOLD->LINE_NUMBER,                :
      1037.0           :                                     HOLD->TEXT,EOF);                  :
      1038.0     3  2  :                  PTR = HOLD;                                          :
      1039.0     3  2  :                  HOLD = HOLD->NEXT;                                   :
      1040.0     3  2  :                  FREE PTR->ARRAY;                                     :
      1041.0     3  2  :               END;                                                    :
      1042.0     3  1  :               EOF = 1B;                                               :
      1043.0     3  1  :               CALL PRESS(HOLD->LINE_NUMBER,HOLD->TEXT,EOF);           :
      1044.0     3  1  :               EOF = 0B;                                               :
      1045.0     3  1  :             END;                                                      :
      1046.0           :                                                                       :
      1047.0     3     :     HOLD = START;                                                     :
      1048.0     3     :     IF COPY    & ^WYLFMT                                              :
      1049.0     3     :        THEN DO;                                                       :
      1050.0     3  1  :               MEMBER_DDN = 'PDSCOPY';                                 :
      1051.0     3  1  :               MEMBER_DSNAME = OUTFILE || ' OLD KEEP';                 :
      1052.0     3  1  :               MEMBER_NAM = MEMNAME;                                   :
      1053.0     3  1  :               CALL SVC99(WORK,'ALLOC',MEMBER_DATA);                   :
      1054.0     3  1  :               IF PLIRETV ^= 0  THEN SIGNAL CONDITION(DYNALOC);        :
      1055.0     3  1  :               DO K = 1 TO EXTENT WHILE(HOLD^=NULL);                   :
      1056.0     3  2  :                  IF LOGICAL_MASK(K) THEN                              :
      1057.0     3  2  :                     PUT SKIP FILE(FILE) EDIT(HOLD->TEXT)(A(LRECL));   :
      1058.0     3  2  :                  PTR = HOLD;                                          :
      1059.0     3  2  :                  HOLD = HOLD->NEXT;                                   :
      1060.0     3  2  :                  FREE PTR->ARRAY;                                     :
      1061.0     3  2  :               END;                                                    :
      1062.0     3  1  :               CLOSE FILE(FILE);                                       :
      1063.0     3  1  :               CALL SVC99(WORK,'UNALLOC','DD=PDSCOPY UNALLOC;');       :
      1064.0     3  1  :             END;                                                      :
      1065.0           :                                                                       :
      1066.0     3     :     IF COPY    & WYLFMT                                               :
      1067.0     3     :        THEN DO;                                                       :
      1068.0     3  1  :               MEMBER_DDN = 'PDSCOPY';                                 :
      1069.0     3  1  :               MEMBER_DSNAME = OUTFILE || ' OLD KEEP';                 :
      1070.0     3  1  :               MEMBER_NAM = MEMNAME;                                   :
      1071.0     3  1  :               CALL SVC99(WORK,'ALLOC',MEMBER_DATA);                   :
      1072.0     3  1  :               IF PLIRETV ^= 0  THEN SIGNAL CONDITION(DYNALOC);        :
      1073.0     3  1  :               DO K = 1 TO EXTENT WHILE(HOLD^=NULL);                   :
      1074.0     3  2  :                  IF LOGICAL_MASK(K)                                   :
      1075.0     3  2  :                     THEN CALL PRESS(HOLD->LINE_NUMBER,                :
      1076.0           :                                     HOLD->TEXT,EOF);                  :
      1077.0     3  2  :                  PTR = HOLD;                                          :
      1078.0     3  2  :                  HOLD = HOLD->NEXT;                                   :
      1079.0     3  2  :                  FREE PTR->ARRAY;                                     :
      1080.0     3  2  :               END;                                                    :
      1081.0     3  1  :               EOF = 1B;                                               :
      1082.0     3  1  :               CALL PRESS(HOLD->LINE_NUMBER,HOLD->TEXT,EOF);           :
      1083.0     3  1  :               EOF = 0B;                                               :
      1084.0     3  1  :               CLOSE FILE(FILE);                                       :
      1085.0     3  1  :               CALL SVC99(WORK,'UNALLOC','DD=PDSCOPY UNALLOC;');       :
      1086.0     3  1  :             END;                                                      :
      1087.0           :                                                                       :
      1088.0     3     :     HOLD = START;                                                     :
      1089.0     3     :     IF REWRITE & ^WYLBUR                                              :
      1090.0     3     :        THEN DO;                                                       :
      1091.0     3  1  :               MEMBER_DDN = 'MACROS';                                  :
      1092.0     3  1  :               MEMBER_DSNAME = OUTFILE || ' OLD KEEP';                 :
      1093.0     3  1  :               MEMBER_NAM = MEMNAME;                                   :
      1094.0     3  1  :               CALL SVC99(WORK,'ALLOC',MEMBER_DATA);                   :
      1095.0     3  1  :               IF PLIRETV ^= 0  THEN SIGNAL CONDITION(DYNALOC);        :
      1096.0     3  1  :               DO K = 1 TO EXTENT WHILE(HOLD^=NULL);                   :
      1097.0     3  2  :                  IF LOGICAL_MASK(K) THEN                              :
      1098.0     3  2  :                     WRITE FILE(FILE) FROM(HOLD->TEXT);                :
      1099.0     3  2  :                  PTR = HOLD;                                          :
      1100.0     3  2  :                  HOLD = HOLD->NEXT;                                   :
      1101.0     3  2  :                  FREE PTR->ARRAY;                                     :
      1102.0     3  2  :               END;                                                    :
      1103.0     3  1  :               CLOSE FILE(FILE);                                       :
      1104.0     3  1  :               CALL SVC99(WORK,'UNALLOC','DD=MACROS UNALLOC;');        :
      1105.0     3  1  :             END;                                                      :
      1106.0           :                                                                       :
      1107.0     3     :     IF REWRITE & WYLBUR                                               :
      1108.0     3     :        THEN DO;                                                       :
      1109.0     3  1  :               MEMBER_DDN = 'MACROS';                                  :
      1110.0     3  1  :               MEMBER_DSNAME = OUTFILE || ' OLD KEEP';                 :
      1111.0     3  1  :               MEMBER_NAM = MEMNAME;                                   :
      1112.0     3  1  :               CALL SVC99(WORK,'ALLOC',MEMBER_DATA);                   :
      1113.0     3  1  :               IF PLIRETV ^= 0  THEN SIGNAL CONDITION(DYNALOC);        :
      1114.0     3  1  :               DO K = 1 TO EXTENT WHILE(HOLD^=NULL);                   :
      1115.0     3  2  :                  IF LOGICAL_MASK(K)                                   :
      1116.0     3  2  :                     THEN CALL PRESS(HOLD->LINE_NUMBER,                :
      1117.0           :                                     HOLD->TEXT,EOF);                  :
      1118.0     3  2  :                  PTR = HOLD;                                          :
      1119.0     3  2  :                  HOLD = HOLD->NEXT;                                   :
      1120.0     3  2  :                  FREE PTR->ARRAY;                                     :
      1121.0     3  2  :               END;                                                    :
      1122.0     3  1  :               EOF = 1B;                                               :
      1123.0     3  1  :               CALL PRESS(HOLD->LINE_NUMBER,HOLD->TEXT,EOF);           :
      1124.0     3  1  :               EOF = 0B;                                               :
      1125.0     3  1  :               CLOSE FILE(FILE);                                       :
      1126.0     3  1  :               CALL SVC99(WORK,'UNALLOC','DD=MACROS UNALLOC;');        :
      1127.0     3  1  :             END;                                                      :
      1128.0     3     :     IF Q(52) THEN PUT SKIP DATA(ALLOW_OUTPUT,CNTL,MASK);              :
      1129.0     3     :     FREE  MASK;                                                       :
      1130.0     3     :  END #PUTITOUT;                                                       :
      1131.0           :                                                                       :
      1132.0     2     :  MEMNAME = BLANK;                                                     :
      1133.0     2     :  NESTLVL = NESTLVL - 1;                                               :
      1134.0     2     :  BUMMER = FALSE;                                                      :
      1135.0           :                                                                       :
      1136.0     2     :  IF TEST & Q(56) THEN PUT PAGE DATA;                                  :
      1137.0     2     :  RETURN;                                                              :
      1138.0           : /**.............................................................**/   :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    23
 0    Line.File LV NT
 0    1139.0           :                                                                       :
      1140.0           :                                                                       :
      1141.0     2     : UNPRESS: PROC;                                                        :
      1142.0     3     :     DCL  TRUE              BIT      INIT(1B);                         :
      1143.0     3     :     DCL  FALSE             BIT      INIT(0B);                         :
      1144.0     3     :     DCL  MORE              BIT      INIT(1B);                         :
      1145.0     3     :     DCL  BIT8              BIT(8);                                    :
      1146.0     3     :     DCL  BIT16             BIT(16);                                   :
      1147.0     3     :     DCL  BIT24             BIT(24);                                   :
      1148.0     3     :     DCL  BIT32             BIT(32);                                   :
      1149.0     3     :     DCL  CNTL              BIT(4)   DEF BIT32 POS(1);                 :
      1150.0     3     :     DCL  BIT28             BIT(28)  DEF BIT32 POS(5);                 :
      1151.0     3     :     DCL  HEX_C             BIT(4)   INIT(1100B);                      :
      1152.0     3     :     DCL  HEX_0             BIT(4)   INIT(0000B);                      :
      1153.0     3     :     DCL  HEX_4             BIT(4)   INIT(0100B);                      :
      1154.0     3     :     DCL  SW_LINE_NUMBER    FIXED BIN(31);                             :
      1155.0     3     :     DCL  STRING_LENGTH     FIXED BIN;                                 :
      1156.0     3     :     DCL  (I,J,K,L)         FIXED BIN;                                 :
      1157.0     3     :     DCL  (BUFFER,LINE)     CHAR(256)   VAR;                           :
      1158.0           :                                                                       :
      1159.0     3     :     WYLBUR = TRUE;                                                    :
      1160.0     3     :     BIT32 = UNSPEC(SUBSTR(BLOCK,3,4));                                :
      1161.0     3     :     SW_LINE_NUMBER = BIT28;                                           :
      1162.0     3     :     I = 7;                                                            :
      1163.0     3     :     DO WHILE(I < BLOCK_LENGTH+1);                                     :
      1164.0     3  1  :        BIT8 = UNSPEC( SUBSTR(BLOCK,I,1));                             :
      1165.0     3  1  :        J, STRING_LENGTH = BIT8;                                       :
      1166.0     3  1  :        BUFFER = SUBSTR(BLOCK,I+1,J);                                  :
      1167.0     3  1  :        IF DUMP THEN                                                   :
      1168.0     3  1  :           PUT SKIP EDIT(BIN_HEX(UNSPEC(BIT32)),J,'  ',BUFFER)(A);     :
      1169.0     3  1  :        IF CNTL = HEX_C | CNTL = '1000'B                               :
      1170.0     3  1  :           THEN DO;                                                    :
      1171.0     3  2  :                IF BLANKLINE | STRING_LENGTH > 0                       :
      1172.0     3  2  :                   THEN DO;                                            :
      1173.0     3  3  :                        ALLOC ARRAY;                                   :
      1174.0     3  3  :                        EXTENT = EXTENT + 1;                           :
      1175.0     3  3  :                        TEXT = BUFFER;                                 :
      1176.0     3  3  :                        UPZKNT = UPZKNT + 1000;                        :
      1177.0     3  3  :                        LINE_NUMBER = SW_LINE_NUMBER;                  :
      1178.0     3  3  :                        IF RENUM THEN LINE_NUMBER = UPZKNT;            :
      1179.0     3  3  :                        IF START = NULL                                :
      1180.0     3  3  :                           THEN START = CURRENT;                       :
      1181.0     3  3  :                           ELSE HOLD->NEXT = CURRENT;                  :
      1182.0     3  3  :                        HOLD = CURRENT;                                :
      1183.0     3  3  :                        NEXT = NULL;                                   :
      1184.0     3  3  :                        IF TEST & Q(57)                                :
      1185.0     3  3  :                           THEN PUT SKIP DATA(EXTENT,BUFFER);          :
      1186.0     3  3  :                        END;                                           :
      1187.0     3  2  :                END;                                                   :
      1188.0     3  1  :           ELSE IF CNTL = HEX_4 | CNTL = HEX_0                         :
      1189.0     3  1  :                   THEN DO;                                            :
      1190.0     3  2  :                        CALL INSERT_BLANKS(J);                         :
      1191.0     3  2  :                        IF TEST & Q(57)                                :
      1192.0     3  2  :                           THEN PUT SKIP DATA(EXTENT,LINE);            :
      1193.0     3  2  :                        END;                                           :
      1194.0     3  1  :                   ELSE PUT SKIP EDIT('***ERROR IN:')(A)               :
      1195.0           :                                     (BUFFER)(A);                      :
      1196.0     3  1  :        I = I + J + 1;                                                 :
      1197.0     3  1  :        BIT32 = UNSPEC(SUBSTR(BLOCK,I,4));                             :
      1198.0     3  1  :        SW_LINE_NUMBER = BIT28;                                        :
      1199.0     3  1  :        I = I + 4;                                                     :
      1200.0     3  1  :     END;                                                              :
      1201.0     3     :     RETURN;                                                           :
      1202.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    24
 0    Line.File LV NT
 0    1203.0     3     : INSERT_BLANKS:PROC(L);                                                :
      1204.0     4     :     DCL  BIT8      BIT(8);                                            :
      1205.0     4     :     DCL  BIT1      BIT(4)  DEF BIT8 POS(1);                           :
      1206.0     4     :     DCL  BIT5      BIT(4)  DEF BIT8 POS(5);                           :
      1207.0     4     :     DCL  (I,J,K,L,N) FIXED BIN;                                       :
      1208.0           :                                                                       :
      1209.0     4     :     I = 1;                                                            :
      1210.0     4     :     LINE = '';                                                        :
      1211.0     4     :     DO WHILE(I < L);                                                  :
      1212.0     4  1  :        K = 0;                                                         :
      1213.0     4  1  :        BIT8 = UNSPEC(SUBSTR(BUFFER,I,1));                             :
      1214.0     4  1  :        DO WHILE(BIT5 = '0000'B);                                      :
      1215.0     4  2  :           N = BIT1;                                                   :
      1216.0     4  2  :           K = K + N;                              /*NO OF BLANKS */   :
      1217.0     4  2  :           I = I + 1;                                                  :
      1218.0     4  2  :           BIT8 = UNSPEC(SUBSTR(BUFFER,I,1));                          :
      1219.0     4  2  :        END;                                                           :
      1220.0     4  1  :        N = BIT1;                                                      :
      1221.0     4  1  :        K = K + N;                                 /*NO OF BLANKS */   :
      1222.0     4  1  :        J = BIT5;                                  /* NO OF CHAR  */   :
      1223.0     4  1  :        IF K = 0                                                       :
      1224.0     4  1  :           THEN LINE=LINE||SUBSTR(BUFFER,I+1,J);                       :
      1225.0     4  1  :           ELSE LINE=LINE||REPEAT(' ',K-1)||SUBSTR(BUFFER,I+1,J);      :
      1226.0     4  1  :        I = I + J + 1;                                                 :
      1227.0     4  1  :     END;                                                              :
      1228.0     4     :     LINE = LINE || BLANK;                                             :
      1229.0     4     :   IF BLANKLINE | STRING_LENGTH > 0                                    :
      1230.0     4     :       THEN DO;                                                        :
      1231.0     4  1  :            ALLOC ARRAY;                                               :
      1232.0     4  1  :            EXTENT = EXTENT + 1;                                       :
      1233.0     4  1  :            TEXT = LINE;                                               :
      1234.0     4  1  :            LINE_NUMBER = SW_LINE_NUMBER;                              :
      1235.0     4  1  :            UPZKNT = UPZKNT + 1000;                                    :
      1236.0     4  1  :            IF RENUM THEN LINE_NUMBER = UPZKNT;                        :
      1237.0     4  1  :            IF START = NULL                                            :
      1238.0     4  1  :               THEN START = CURRENT;                                   :
      1239.0     4  1  :               ELSE HOLD->NEXT = CURRENT;                              :
      1240.0     4  1  :            HOLD = CURRENT;                                            :
      1241.0     4  1  :            NEXT = NULL;                                               :
      1242.0     4  1  :            END;                                                       :
      1243.0     4     : END INSERT_BLANKS;                                                    :
      1244.0     3     : END UNPRESS;/*...................................................*/   :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    25
 0    Line.File LV NT
 0    1245.0           :                                                                       :
      1246.0     2     : INC_EXC_RANGE:PROC(CNTL);                                             :
      1247.0     3     :     DCL  (CNTL,I,J,K,L,M,N,LM)FIXED BIN;                              :
      1248.0     3     :     DCL  MIN             BUILTIN;                                     :
      1249.0     3     :     DCL  PHRASE          CHAR(15)VAR;                                 :
      1250.0     3     :     DCL  (WORD1,WORD2)   CHAR(15)VAR;                                 :
      1251.0           :                                                                       :
      1252.0     3     :     HOLD = START;                                                     :
      1253.0     3     :     LM = HBOUND(MASK,1);                                              :
      1254.0     3     :     IF MASK_SWITCH                                                    :
      1255.0           :      & TARGET = 'INC' | TARGET = 'INCLUDE'                            :
      1256.0     3     :        THEN MASK(*,*) = 0B;                                           :
      1257.0     3     :     MASK_SWITCH = 0B;                                                 :
      1258.0     3     :     REPLACEMENT = SUBSTR(REPLACEMENT,2,LENGTH(REPLACEMENT)-2)         :
      1259.0           :                   || COMMA || BLANK;                  /*NO PARENS*/   :
      1260.0     3     :     L = LENGTH(REPLACEMENT);                                          :
      1261.0     3     :     DO J = 1 TO L WHILE(SUBSTR(REPLACEMENT,J,1)^=COMMA);END;          :
      1262.0     3     :     I = 1;                                                            :
      1263.0     3     :     DO WHILE(J < L);                                                  :
      1264.0     3  1  :        PHRASE = SUBSTR(REPLACEMENT,I,J-I);                            :
      1265.0     3  1  :        K = INDEX(PHRASE,DASH) + INDEX(PHRASE,SLASH);                  :
      1266.0     3  1  :        IF K = 0                                                       :
      1267.0     3  1  :           THEN M, N = CONVERTED(PHRASE);                              :
      1268.0     3  1  :           ELSE DO;                                                    :
      1269.0     3  2  :                WORD1 = SUBSTR(PHRASE,1,K-1);                          :
      1270.0     3  2  :                WORD2 = SUBSTR(PHRASE,K+1);                            :
      1271.0     3  2  :                N = CONVERTED(WORD1);                                  :
      1272.0     3  2  :                M = CONVERTED(WORD2);                                  :
      1273.0     3  2  :                END;                                                   :
      1274.0     3  1  :        IF WYLBUR                                                      :
      1275.0     3  1  :           THEN DO;                                                    :
      1276.0     3  2  :                N = N * 1000;                                          :
      1277.0     3  2  :                M = M * 1000;                                          :
      1278.0     3  2  :                END;                                                   :
      1279.0     3  1  :        HOLD = START;                                                  :
      1280.0     3  1  :        IF TEST & Q(65)                                                :
      1281.0     3  1  :           THEN PUT SKIP DATA(REPLACEMENT,N,M);                        :
      1282.0     3  1  :        DO K = 1 TO EXTENT WHILE(HOLD^=NULL);                          :
      1283.0     3  2  :           IF HOLD->LINE_NUMBER >= N & HOLD->LINE_NUMBER <= M          :
      1284.0     3  2  :              THEN CALL SET_BIT(K,CNTL);                               :
      1285.0     3  2  :           HOLD = HOLD->NEXT;                                          :
      1286.0     3  2  :        END;                                                           :
      1287.0     3  1  :        I = J + 1;                                                     :
      1288.0     3  1  :        DO J = I TO L WHILE(SUBSTR(REPLACEMENT,J,1)^=COMMA);END;       :
      1289.0     3  1  :     END;                                                              :
      1290.0     3     : END INC_EXC_RANGE;/*.............................................*/   :
      1291.0           :                                                                       :
      1292.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    26
 0    Line.File LV NT
 0    1293.0           :                                                                       :
      1294.0     2     : SET_BIT:PROC(I,J);                                                    :
      1295.0     3     :     DCL  (I,J,K,L,M,N,LM)FIXED BIN;                                   :
      1296.0     3     :     IF TARGET = 'DELETE' | TARGET = 'DEL'                             :
      1297.0           :      | TARGET = 'EXC'    | TARGET = 'EXCLUDE'                         :
      1298.0     3     :        THEN MASK(I,J) = 0B;                                           :
      1299.0     3     :        ELSE MASK(I,J) = 1B;                                           :
      1300.0     3     : END SET_BIT;/*...................................................*/   :
      1301.0           :                                                                       :
      1302.0           :                                                                       :
      1303.0           :                                                                       :
      1304.0     2     : LOGICAL_MASK:PROC(ROW)         RETURNS(BIT);                          :
      1305.0     3     :     DCL ROW                    FIXED BIN;                             :
      1306.0     3     :     DCL LINENUMBER             FIXED BIN(31);                         :
      1307.0     3     :     DCL TXT                    CHAR(255)  VAR;                        :
      1308.0     3     :     DCL ANSWER                 BIT;                                   :
      1309.0     3     :     ANSWER = 0B;                                                      :
      1310.0     3     :     LINENUMBER = HOLD->LINE_NUMBER;                                   :
      1311.0     3     :     TXT = HOLD->TEXT;                                                 :
      1312.0     3     :     IF TEST & Q(69)                                                   :
      1313.0     3     :        THEN PUT SKIP DATA(EXTENT,ROW,LINENUMBER,TXT);                 :
      1314.0     3     :     IF AND & ALL(MASK(ROW,*)) THEN ANSWER = 1B;                       :
      1315.0     3     :     IF OR  & ANY(MASK(ROW,*)) THEN ANSWER = 1B;                       :
      1316.0     3     :     RETURN(ANSWER);                                                   :
      1317.0     3     : END LOGICAL_MASK;/*..............................................*/   :
      1318.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    27
 0    Line.File LV NT
 0    1319.0     2     : CHANGE_RTN:PROC(PARM);                                                :
      1320.0           :    /**************************************************************    :
      1321.0           :                                                                       :
      1322.0           :       PURPOSE - ANALYZE AND EXECUTE THE CHANGE COMMAND                :
      1323.0           :       SYNTAX  - CHANGE 'TARGET' C1/C2 TO 'REPLACEMENT' IN L1/L2       :
      1324.0           :                 1       2       3     4   5            6  7           :
      1325.0           :                                                                       :
      1326.0           :       COLUMNS OPTIONS WHEN LENGTH(TARGET)=0                           :
      1327.0           :         12345678            TEXT         T=LENGTH(TEXT)               :
      1328.0           :               *             F <= T        SINGLE                      :
      1329.0           :                     *       T < F                                     :
      1330.0           :              *              F = L <= T   ^SINGLE                      :
      1331.0           :              **             F <= L <= T                               :
      1332.0           :               ****          F <= T < L                                :
      1333.0           :                ****         T <= F <= L                               :
      1334.0           :                   ****      T < F                                     :
      1335.0           :                                                                       :
      1336.0           :    **************************************************************/    :
      1337.0           :                                                                       :
      1338.0     3     :    ON ERROR BEGIN; ON ERROR SYSTEM; END;                              :
      1339.0     3     :    DCL  (I,J,K,KK,LL,LR,LT,L,M,N)   FIXED BIN INIT(0);                :
      1340.0     3     :    DCL  CHANGE_COMMAND         CHAR(255)  INIT((255)' ');             :
      1341.0     3     :    DCL  CURRENT_POINTER        FIXED BIN;                             :
      1342.0     3     :    DCL  ENDCOL                 FIXED BIN;                             :
      1343.0     3     :    DCL  FILLER                 CHAR(*)    CONTROLLED;                 :
      1344.0     3     :    DCL  FIRSTCOLM              FIXED BIN(31);                         :
      1345.0     3     :    DCL  FIRSTLINE              FIXED BIN(31);                         :
      1346.0     3     :    DCL  LASTCOLM               FIXED BIN(31);                         :
      1347.0     3     :    DCL  LASTLINE               FIXED BIN(31);                         :
      1348.0     3     :    DCL  LINE_OVFLO             FIXED BIN  INIT(255);                  :
      1349.0     3     :    DCL  MORE                   BIT        INIT(0B);                   :
      1350.0     3     :    DCL  PARM                   CHAR(255)  VAR;                        :
      1351.0     3     :    DCL  REPLACEMENT            CHAR(80)   VAR;                        :
      1352.0     3     :    DCL  SCREWEDUP              BIT        INIT(0B);                   :
      1353.0     3     :    DCL  SINGLE                 BIT        INIT(0B);                   :
      1354.0     3     :    DCL  STRT                   FIXED BIN;                             :
      1355.0     3     :    DCL  TARGET                 CHAR(80)   VAR;                        :
      1356.0           :                                                                       :
      1357.0     3     :    FIRSTLINE = 0;                                                     :
      1358.0     3     :    LASTLINE  = 99999;                                                 :
      1359.0     3     :    FIRSTCOLM = 1;                                                     :
      1360.0     3     :    LASTCOLM  = 0;                                                     :
      1361.0     3     :    IF SUBSTR(PARM,LENGTH(PARM)) = COMMA                               :
      1362.0     3     :       THEN PARM = SUBSTR(PARM,1,LENGTH(PARM)-1);                      :
      1363.0     3     :    CHANGE_COMMAND = PARM;                                             :
      1364.0     3     :    SCREWEDUP = PARSE_COMMAND(CHANGE_COMMAND);                         :
      1365.0     3     :    IF WYLBUR                                                          :
      1366.0     3     :       THEN DO;                                                        :
      1367.0     3  1  :            FIRSTLINE = FIRSTLINE * 1000;                              :
      1368.0     3  1  :            LASTLINE  = LASTLINE  * 1000;                              :
      1369.0     3  1  :            END;                                                       :
      1370.0     3     :    IF TEST & Q(72)                                                    :
      1371.0     3     :       THEN DO;                                                        :
      1372.0     3  1  :            PUT SKIP EDIT('FIRSTLINE')     (COL(01),A)                 :
      1373.0           :                         (FIRSTLINE)       (COL(11),P'ZZZZZZ')         :
      1374.0           :                         ('LASTLINE ')     (COL(21),A)                 :
      1375.0           :                         (LASTLINE)        (COL(31),P'ZZZZZZ')         :
      1376.0           :                         ('FIRSTCOLM')     (COL(41),A)                 :
      1377.0           :                         (FIRSTCOLM)       (COL(51),P'ZZZZZZ')         :
      1378.0           :                         ('LASTCOLM ')     (COL(61),A)                 :
      1379.0           :                         (LASTCOLM)        (COL(71),P'ZZZZZZ');        :
      1380.0     3  1  :            PUT SKIP DATA(TARGET,REPLACEMENT);                         :
      1381.0     3  1  :            END;                                                       :
      1382.0     3     :    HOLD = START;                                                      :
      1383.0     3     :    LT = LENGTH(TARGET);                                               :
      1384.0     3     :    LR = LENGTH(REPLACEMENT);                                          :
      1385.0           :                                                                       :
      1386.0     3     :    DO WHILE(HOLD ^= NULL & ^SCREWEDUP);                               :
      1387.0     3  1  :       IF TEST & Q(76)                                                 :
      1388.0     3  1  :          THEN PUT SKIP EDIT(HOLD->LINE_NUMBER,' ',HOLD->TEXT)(A);     :
      1389.0     3  1  :       IF HOLD->LINE_NUMBER >= FIRSTLINE &                             :
      1390.0           :          HOLD->LINE_NUMBER <= LASTLINE                                :
      1391.0     3  1  :          THEN DO;                                                     :
      1392.0     3  2  :               ENDCOL = LASTCOLM;                                      :
      1393.0     3  2  :               IF SINGLE & LT = 0 THEN ENDCOL = LENGTH(HOLD->TEXT);    :
      1394.0     3  2  :               IF LT > 0 & LASTCOLM = 0                                :
      1395.0     3  2  :                  THEN ENDCOL = LENGTH(HOLD->TEXT);                    :
      1396.0     3  2  :               K = 0;                                                  :
      1397.0     3  2  :               MORE = 1B;                                              :
      1398.0     3  2  :               M,STRT = FIRSTCOLM;                                     :
      1399.0           :                                                                       :
      1400.0     3  2  :               DO WHILE(MORE & K <= ENDCOL & LT ^= 0);                 :
      1401.0     3  3  :                  IF TEST & Q(80)                                      :
      1402.0     3  3  :                     THEN PUT SKIP(2) EDIT('KK=',KK,' K=',K,           :
      1403.0           :                              ' STRT=',STRT,' ENCOL=',ENDCOL)(A);      :
      1404.0     3  3  :                  IF LENGTH(HOLD->TEXT) < FIRSTCOLM                    :
      1405.0     3  3  :                     THEN MORE = 0B;         /***  CANT DO THAT ***/   :
      1406.0     3  3  :                     ELSE DO;                                          :
      1407.0     3  4  :                          KK= INDEX(SUBSTR(HOLD->TEXT,STRT),TARGET);   :
      1408.0     3  4  :                          K = KK + STRT - 1;/* POS RELATIVE TO 1 */    :
      1409.0     3  4  :                          IF KK = 0            /* NO REAL TARGET */    :
      1410.0     3  4  :                             THEN MORE = 0B;                           :
      1411.0     3  4  :                          IF MORE & K <= ENDCOL                        :
      1412.0     3  4  :                             THEN HOLD->TEXT =                         :
      1413.0           :                                  SUBSTR(HOLD->TEXT,1,K-1) ||          :
      1414.0           :                                  REPLACEMENT ||                       :
      1415.0           :                                  SUBSTR(HOLD->TEXT,LT+K);             :
      1416.0     3  4  :                          STRT = K + LR;                               :
      1417.0     3  4  :                          ENDCOL = ENDCOL + LR - LT;                   :
      1418.0     3  4  :                          END;                                         :
      1419.0     3  3  :               END;                                                    :
      1420.0           :                                                                       :
      1421.0     3  2  :               DO WHILE(MORE & LT = 0 & SINGLE);                       :
      1422.0     3  3  :                  MORE = 0B;                                           :
      1423.0     3  3  :                  IF FIRSTCOLM < LENGTH(HOLD->TEXT)                    :
      1424.0     3  3  :                     THEN HOLD->TEXT = SUBSTR(HOLD->TEXT,1,M)          :
      1425.0           :                          ||REPLACEMENT ||SUBSTR(HOLD->TEXT,M+1);      :
      1426.0     3  3  :                     ELSE DO;                                          :
      1427.0     3  4  :                          N = FIRSTCOLM - LENGTH(HOLD->TEXT);          :
      1428.0     3  4  :                          ALLOC FILLER CHAR(N);                        :
      1429.0     3  4  :                          FILLER = (200)' ';                           :
      1430.0     3  4  :                          HOLD->TEXT = HOLD->TEXT ||                   :
      1431.0           :                          FILLER ||REPLACEMENT;                        :
      1432.0     3  4  :                          FREE FILLER;                                 :
      1433.0     3  4  :                          END;                                         :
      1434.0     3  3  :               END;                                                    :
      1435.0           :                                                                       :
      1436.0     3  2  :               DO WHILE(MORE & LT = 0 & ^SINGLE);                      :
      1437.0     3  3  :                  MORE = 0B;                                           :
      1438.0     3  3  :                  IF FIRSTCOLM = LASTCOLM                              :
      1439.0           :                   & LASTCOLM <= LENGTH(HOLD->TEXT)                    :
      1440.0     3  3  :                     THEN HOLD->TEXT = SUBSTR(HOLD->TEXT,1,M-1)        :
      1441.0           :                          ||REPLACEMENT                                :
      1442.0           :                          ||SUBSTR(HOLD->TEXT,ENDCOL+1);               :
      1443.0     3  3  :                  ELSE                                                 :
      1444.0     3  3  :                  IF FIRSTCOLM < LASTCOLM                              :
      1445.0           :                   & LASTCOLM <= LENGTH(HOLD->TEXT)                    :
      1446.0     3  3  :                     THEN HOLD->TEXT = SUBSTR(HOLD->TEXT,1,M-1)        :
      1447.0           :                          ||REPLACEMENT                                :
      1448.0           :                          ||SUBSTR(HOLD->TEXT,ENDCOL+1);               :
      1449.0     3  3  :                  ELSE                                                 :
      1450.0     3  3  :                  IF FIRSTCOLM <= LENGTH(HOLD->TEXT)                   :
      1451.0           :                   & LENGTH(HOLD->TEXT) < LASTCOLM                     :
      1452.0     3  3  :                     THEN HOLD->TEXT =                                 :
      1453.0           :                          SUBSTR(HOLD->TEXT,1,M-1) || REPLACEMENT;     :
      1454.0     3  3  :                  ELSE                                                 :
      1455.0     3  3  :                  IF LENGTH(HOLD->TEXT) <= FIRSTCOLM                   :
      1456.0     3  3  :                     THEN DO;                                          :
      1457.0     3  4  :                          N = FIRSTCOLM - LENGTH(HOLD->TEXT) - 1;      :
      1458.0     3  4  :                          ALLOC FILLER CHAR(N);                        :
      1459.0     3  4  :                          FILLER = (200)' ';                           :
      1460.0     3  4  :                          HOLD->TEXT = HOLD->TEXT                      :
      1461.0           :                          || FILLER || REPLACEMENT;                    :
      1462.0     3  4  :                          FREE FILLER;                                 :
      1463.0     3  4  :                          END;                                         :
      1464.0     3  3  :               END;                                                    :
      1465.0     3  2  :               END;                                                    :
      1466.0     3  1  :       HOLD = HOLD->NEXT;                                              :
      1467.0     3  1  :    END;                                                               :
      1468.0     3     :    IF SCREWEDUP THEN MASK(*,*) = 0B;             /*INHIBIT OUTPUT*/   :
      1469.0     3     :    IF TEST & Q(84) THEN PUT PAGE DATA;                                :
      1470.0     3     :    RETURN;                                                            :
      1471.0           :                                                                       :
      1472.0           :                                                                       :
      1473.0     3     : PARSE_COMMAND:PROC(COMMAND)      RETURNS(BIT); /* . . . . . . . */    :
      1474.0     4     :     DCL DOUBLEQUOTE  CHAR INIT('"');                                  :
      1475.0     4     :     DCL QUOTE        CHAR INIT('''');                                 :
      1476.0     4     :     DCL CMD(255)     CHAR DEF COMMAND;                                :
      1477.0     4     :     DCL COMMAND      CHAR(255);                                       :
      1478.0     4     :     DCL WORD(7)      CHAR(80) VAR;                                    :
      1479.0           :     /*                                                                :
      1480.0           :     /*           123456789A123456789B123456789C                       :
      1481.0           :     /*    1.     CH 'A1' TO 'B1'                                      :
      1482.0           :     /*    2.     CH'A2'TO'B2'                                         :
      1483.0           :     /*    3.     CH 'A3' 10 TO'B3'                                    :
      1484.0           :     /*    4.     CH 'A4'10 TO 'B4'                                    :
      1485.0           :     /*    5.     CH 'A5' TO'B5'IN 69                                  :
      1486.0           :     /*    6.     CH'A6' 6/9 TO 'B6'                                   :
      1487.0           :     /*    7.       CH'A7' 6/9 TO 'B7' IN 10/20                        :
      1488.0           :     /*    8.     CH 6  TO 'B8'                                        :
      1489.0           :     /*    9.     CH 6/9 TO 'B9' IN 23/34                              :
      1490.0           :     */                                                                :
      1491.0     4     :     WORD(*) = '';                                                     :
      1492.0     4     :     CURRENT_POINTER = 0;                                              :
      1493.0     4     :     LL = LENGTH(PARM);                                                :
      1494.0     4     :     DO I = 1 TO LL WHILE(CMD(I)=' ');END;   /*ELIM LEADING BLANKS*/   :
      1495.0     4     :     J = NEXT_DELIMITER(I,CMD);                                        :
      1496.0     4     :     WORD(1)=SUBSTR(COMMAND,I,J-I);   /*SHOULD BE "CHANGE" COMMAND*/   :
      1497.0     4     :     IF WORD(1) ^= 'CHANGE' & WORD(1) ^= 'CH'                          :
      1498.0     4     :        THEN DO;                                                       :
      1499.0     4  1  :             PUT SKIP EDIT('INVALID SYNTAX:: ',COMMAND)(A);            :
      1500.0     4  1  :             RETURN(1B);                                               :
      1501.0     4  1  :             END;                                                      :
      1502.0     4     :     I,CURRENT_POINTER = J;                                            :
      1503.0     4     :     IF CMD(I) = QUOTE                                                 :
      1504.0     4     :        THEN DO;                                                       :
      1505.0     4  1  :             J = I + INDEX(SUBSTR(COMMAND,I+1),QUOTE);                 :
      1506.0     4  1  :             WORD(2) = SUBSTR(COMMAND,I+1,J-I-1);                      :
      1507.0     4  1  :             END;                                                      :
      1508.0     4     :        ELSE DO;                        /* CMD(I) MUST BE A BLANK */   :
      1509.0     4  1  :             I = NEXT_CHAR(CURRENT_POINTER,CMD);                       :
      1510.0     4  1  :             IF CMD(I) = QUOTE                                         :
      1511.0     4  1  :                THEN DO;                                               :
      1512.0     4  2  :                     J = I + INDEX(SUBSTR(COMMAND,I+1),QUOTE);         :
      1513.0     4  2  :                     WORD(2) = SUBSTR(COMMAND,I+1,J-I-1);              :
      1514.0     4  2  :                     END;                                              :
      1515.0     4  1  :                ELSE DO;                       /* MUST BE NUMERIC */   :
      1516.0     4  2  :                     WORD(2) = '';                                     :
      1517.0     4  2  :                     J = I + INDEX(SUBSTR(COMMAND,I+1),'TO');          :
      1518.0     4  2  :                     WORD(3) = SUBSTR(COMMAND,I,J-I);                  :
      1519.0     4  2  :                     WORD(4) = 'TO';                                   :
      1520.0     4  2  :                     END;                                              :
      1521.0     4  1  :             END;                                                      :
      1522.0     4     :     CURRENT_POINTER = J;                                              :
      1523.0     4     :     I = NEXT_CHAR(CURRENT_POINTER,CMD);                               :
      1524.0     4     :     IF SUBSTR(COMMAND,I,2) = 'TO'                                     :
      1525.0     4     :        THEN DO;                                                       :
      1526.0     4  1  :             I = I + 2;                                                :
      1527.0     4  1  :             WORD(4) = 'TO';                                           :
      1528.0     4  1  :             END;                                                      :
      1529.0     4     :        ELSE IF VERIFY(CMD(I),'0123456789') = 0      /* NUMERIC ? */   :
      1530.0     4     :                THEN DO;                                               :
      1531.0     4  1  :                     J = I + INDEX(SUBSTR(COMMAND,I+1),'TO');          :
      1532.0     4  1  :                     WORD(3) = SUBSTR(COMMAND,I,J-I);                  :
      1533.0     4  1  :                     WORD(4) = 'TO';                                   :
      1534.0     4  1  :                     I = J + 2;                                        :
      1535.0     4  1  :                     END;                                              :
      1536.0     4     :     IF WORD(4) ^= 'TO'                                                :
      1537.0     4     :        THEN DO;                                                       :
      1538.0     4  1  :             PUT SKIP EDIT('INVALID SYNTAX:: ',COMMAND)(A);            :
      1539.0     4  1  :             RETURN(1B);                                               :
      1540.0     4  1  :             END;                                                      :
      1541.0     4     :     CURRENT_POINTER = I;                                              :
      1542.0     4     :     I = I-1+INDEX(SUBSTR(COMMAND,I),QUOTE);                           :
      1543.0     4     :     IF CMD(I) ^= QUOTE                                                :
      1544.0     4     :        THEN DO;                                                       :
      1545.0     4  1  :             PUT SKIP EDIT('INVALID SYNTAX:: ',COMMAND)(A);            :
      1546.0     4  1  :             RETURN(1B);                                               :
      1547.0     4  1  :             END;                                                      :
      1548.0     4     :     J = I + INDEX(SUBSTR(COMMAND,I+1),QUOTE);                         :
      1549.0     4     :     WORD(5) = SUBSTR(COMMAND,I+1,J-I-1);                              :
      1550.0     4     :     I,CURRENT_POINTER = J;                                            :
      1551.0     4     :     SINGLE = 0B;                                                      :
      1552.0     4     :     IF WORD(3) ^= ''                /* COLUMNS OPTION BEING USED */   :
      1553.0     4     :        THEN DO;                                                       :
      1554.0     4  1  :             L = INDEX(WORD(3),'/');                                   :
      1555.0     4  1  :             IF L = 0                              /*SINGLE COLUMN*/   :
      1556.0     4  1  :                THEN DO;                                               :
      1557.0     4  2  :                     FIRSTCOLM, LASTCOLM = WORD(3);                    :
      1558.0     4  2  :                     SINGLE =  1B;                                     :
      1559.0     4  2  :                     END;                                              :
      1560.0     4  1  :                ELSE DO;                          /* MULTICOLUMNS */   :
      1561.0     4  2  :                     FIRSTCOLM = SUBSTR(WORD(3),1,L-1);                :
      1562.0     4  2  :                     LASTCOLM = SUBSTR(WORD(3),L+1);                   :
      1563.0     4  2  :                     END;                                              :
      1564.0     4  1  :              END;                                                     :
      1565.0     4     :     TARGET  = WORD(2);                                                :
      1566.0     4     :     REPLACEMENT = WORD(5);                                            :
      1567.0     4     :     IF LL <= CURRENT_POINTER  THEN RETURN(0B);/* NO LINES OPTION */   :
      1568.0     4     :     I = NEXT_CHAR(CURRENT_POINTER,CMD);                               :
      1569.0     4     :     WORD(6) = CMD(I) || CMD(I+1);                                     :
      1570.0     4     :     I = I + 3;                                                        :
      1571.0     4     :     WORD(7) = SUBSTR(COMMAND,I,LL-I+1);                               :
      1572.0     4     :     L = INDEX(WORD(7),'/');                                           :
      1573.0     4     :     IF L = 0                                        /*SINGLE LINE*/   :
      1574.0     4     :        THEN FIRSTLINE, LASTLINE = WORD(7);                            :
      1575.0     4     :        ELSE DO;                                   /* MULTI LINES */   :
      1576.0     4  1  :             FIRSTLINE = SUBSTR(WORD(7),1,L-1);                        :
      1577.0     4  1  :             LASTLINE = SUBSTR(WORD(7),L+1);                           :
      1578.0     4  1  :             END;                                                      :
      1579.0     4     :     RETURN(0B);                                                       :
      1580.0     4     : END PARSE_COMMAND;                                                    :
      1581.0           :                                                                       :
      1582.0     3     : NEXT_DELIMITER:PROC(CURRENT_POINTER,CMD)/*....*/RETURNS(FIXED BIN);   :
      1583.0           : /* DELIMITERS ARE: BLANKS OR QUOTE OR DOUBLEQUOTE                */   :
      1584.0     4     :     DCL CURRENT_POINTER FIXED BIN, CMD(*) CHAR;                       :
      1585.0     4     :     DO N = CURRENT_POINTER+1 TO LL                                    :
      1586.0           :        WHILE(CMD(N)^=' ' & CMD(N) ^=QUOTE);                           :
      1587.0     4  1  :     END;                                                              :
      1588.0     4     :     RETURN(N);                                                        :
      1589.0     4     : END NEXT_DELIMITER;                                                   :
      1590.0           :                                                                       :
      1591.0     3     : NEXT_CHAR:PROC(CURRENT_POINTER,CMD)/*.........*/RETURNS(FIXED BIN);   :
      1592.0           : /* FIND THE NEXT NON-BLANK CHARACTER                             */   :
      1593.0     4     :     DCL CURRENT_POINTER FIXED BIN, CMD(*) CHAR;                       :
      1594.0     4     :     IF CMD(CURRENT_POINTER) ^= ' '                                    :
      1595.0     4     :        THEN CURRENT_POINTER = CURRENT_POINTER + 1;                    :
      1596.0     4     :     DO N = CURRENT_POINTER TO LL WHILE(CMD(N) = ' ');END;             :
      1597.0     4     :     RETURN(N);                                                        :
      1598.0     4     : END NEXT_CHAR;                                                        :
      1599.0     3     : END CHANGE_RTN;                                                       :
      1600.0     2     : END MACPROC;/*****************************************************/   :
      1601.0           :                                                                       :
      1602.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    28
 0    Line.File LV NT
 0    1603.0           :                                                                       :
      1604.0     1     : PRESS: PROC(NUMBER,WORK,EOF);                                         :
      1605.0     2     :     DCL NUMBER             FIXED BIN(31);                             :
      1606.0     2     :     DCL WORK               CHAR(255)  VAR;                            :
      1607.0     2     :     DCL EOF                BIT;                                       :
      1608.0     2     :     DCL BLOCK              CHAR(6233) VAR STATIC;                     :
      1609.0     2     :     DCL LINE               CHAR(256)  VAR;                            :
      1610.0     2     :     DCL CURRENT_LINE       CHAR(256)  VAR;                            :
      1611.0     2     :     DCL SW_LINE            CHAR(256)  VAR;                            :
      1612.0     2     :     DCL BLANK              CHAR       INIT(' ');                      :
      1613.0     2     :     DCL ONEBYTE            CHAR;                                      :
      1614.0     2     :     DCL TWOBYTE            CHAR(2);                                   :
      1615.0     2     :     DCL FOURBYTE           CHAR(4);                                   :
      1616.0     2     :     DCL BIT32              BIT(32);                                   :
      1617.0     2     :     DCL CNTL               BIT(4);                                    :
      1618.0     2     :     DCL LINE_NUMBER        FIXED BIN(31);                             :
      1619.0     2     :     DCL SW_LINE_NUMBER     FIXED BIN(31);                             :
      1620.0     2     :     DCL STR_LENGTH         FIXED BIN(15);                             :
      1621.0     2     :     DCL BLOCK_LENGTH       FIXED BIN(15);                             :
      1622.0     2     :     DCL OVFLOW             FIXED BIN(15)  INIT(6225);                 :
      1623.0     2     :     DCL (I,J,K,L,M)        FIXED BIN;                                 :
      1624.0     2     :     DCL (INDEX,LENGTH,SUBSTR,UNSPEC)BUILTIN;                          :
      1625.0           :                                                                       :
      1626.0     2     :     IF EOF                       /* SHORT BLOCK  -  FORCE IT OUT */   :
      1627.0     2     :        THEN DO;                                                       :
      1628.0     2  1  :             CALL OUTPUT_RTN;                                          :
      1629.0     2  1  :             RETURN;                                                   :
      1630.0     2  1  :             END;                                                      :
      1631.0     2     :     L = LENGTH(WORK);                                                 :
      1632.0     2     :     DO I = L TO 1 BY -1                 /* STRIP TRAILING BLANKS */   :
      1633.0     2  1  :        WHILE(SUBSTR(WORK,I,1) = ' ');END;                             :
      1634.0     2     :     CURRENT_LINE, LINE = SUBSTR(WORK,1,I);                            :
      1635.0     2     :     IF DUMP THEN                                                      :
      1636.0     2     :        PUT SKIP EDIT(NUMBER,' ',LINE)(A);                             :
      1637.0     2     :     IF INDEX(LINE,'  ') = 0                                           :
      1638.0     2     :        THEN CNTL = '1000'B;   /* LINES WITHOUT CONTIGUOUS BLANKS */   :
      1639.0     2     :        ELSE DO;               /* PROCESS LINES WITH CONT BLANKS  */   :
      1640.0     2  1  :               CNTL = '0000'B;                                         :
      1641.0     2  1  :               SW_LINE = '';                                           :
      1642.0     2  1  :               CALL DELETE_BLANKS;/* AND PUT IN CONTROL CHARACTERS*/   :
      1643.0     2  1  :               IF LENGTH(SW_LINE) > LENGTH(CURRENT_LINE)               :
      1644.0     2  1  :                  THEN CNTL = '1000'B;   /*USE CURRENT LINE ANYWAY*/   :
      1645.0     2  1  :                  ELSE CURRENT_LINE = SW_LINE;                         :
      1646.0     2  1  :             END;                                                      :
      1647.0     2     :     STR_LENGTH = LENGTH(CURRENT_LINE);   /* ONE BYTE LINE LENGTH */   :
      1648.0     2     :     UNSPEC(TWOBYTE) = UNSPEC(STR_LENGTH);                             :
      1649.0     2     :     ONEBYTE = SUBSTR(TWOBYTE,2);      /* THIS IS THE LINE LENGTH */   :
      1650.0     2     :     LINE_NUMBER = NUMBER;         /* THE SUPERWYLBUR LINE NUMBER */   :
      1651.0     2     :     UNSPEC(FOURBYTE) = UNSPEC(LINE_NUMBER);                           :
      1652.0     2     :     UNSPEC(FOURBYTE) = UNSPEC(FOURBYTE) | CNTL;   /*SET HIGH BITS*/   :
      1653.0     2     :     BLOCK_LENGTH = LENGTH(BLOCK);                                     :
      1654.0     2     :     L = BLOCK_LENGTH + STR_LENGTH;                                    :
      1655.0     2     :     IF L > OVFLOW  THEN CALL OUTPUT_RTN;                              :
      1656.0     2     :     BLOCK = BLOCK||FOURBYTE||ONEBYTE||CURRENT_LINE;                   :
      1657.0     2     :     RETURN;                                                           :
      1658.0     2     : OUTPUT_RTN:PROC;/*  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  */   :
      1659.0     3     :     L, BLOCK_LENGTH = LENGTH(BLOCK) + 2;   /* FINAL BLOCK LENGTH */   :
      1660.0     3     :     IF L < 5 THEN RETURN;                         /* EMPTY BLOCK */   :
      1661.0     3     :     UNSPEC(TWOBYTE) = UNSPEC(BLOCK_LENGTH)|1B;     /* MAKE IT SW */   :
      1662.0     3     :     BLOCK = TWOBYTE || BLOCK;         /* SW PRESSED FORMAT BLOCK */   :
      1663.0     3     :     IF REWRITE                                                        :
      1664.0     3     :        THEN WRITE FILE(FILE) FROM(BLOCK);                             :
      1665.0     3     :        ELSE PUT SKIP FILE(FILE) EDIT(BLOCK)(A(L));                    :
      1666.0     3     :     BLOCK = '';                                                       :
      1667.0     3     : END OUTPUT_RTN;                                                       :
      1668.0     2     : DELETE_BLANKS:PROC;/* TAKE OUT BLANKS AND  PUT IN CONTROL CHAR   */   :
      1669.0     3     :     DCL (I,J,K,L,M,N)      FIXED BIN;                                 :
      1670.0     3     :     DCL BIT16              BIT(16);                                   :
      1671.0     3     :     DCL BIT9               BIT(4)  DEF BIT16 POS(9);                  :
      1672.0     3     :     DCL BIT13              BIT(4)  DEF BIT16 POS(13);                 :
      1673.0     3     :     DCL BIT4               BIT(4);                                    :
      1674.0           :                                                                       :
      1675.0     3     :     BIT16 = '0000000000000000'B;                                      :
      1676.0     3     :     DO WHILE(LENGTH(LINE)>0);                                         :
      1677.0     3  1  :        L = LENGTH(LINE);                                              :
      1678.0     3  1  :        IF SUBSTR(LINE,1,1) = ' '                                      :
      1679.0     3  1  :           THEN DO;                             /* PROCESS BLANKS */   :
      1680.0     3  2  :                   DO J = 1 TO L WHILE(SUBSTR(LINE,J,1)=' ');END;      :
      1681.0     3  2  :                   I = J - 1;                 /* NUMBER OF BLANKS */   :
      1682.0     3  2  :                   DO WHILE(I > 15);                                   :
      1683.0     3  3  :                      BIT9 = '1111'B;                                  :
      1684.0     3  3  :                      UNSPEC(TWOBYTE) = BIT16;                         :
      1685.0     3  3  :                      ONEBYTE = SUBSTR(TWOBYTE,2);                     :
      1686.0     3  3  :                      SW_LINE = SW_LINE || ONEBYTE;                    :
      1687.0     3  3  :                      I = I - 15;                                      :
      1688.0     3  3  :                   END;                                                :
      1689.0     3  2  :                   UNSPEC(TWOBYTE) = UNSPEC(I);                        :
      1690.0     3  2  :                   ONEBYTE = SUBSTR(TWOBYTE,2);                        :
      1691.0     3  2  :                   UNSPEC(BIT4) = SUBSTR(UNSPEC(ONEBYTE),5);           :
      1692.0     3  2  :                   SUBSTR(BIT16,9,4) = BIT4;/* SET THE BLANK COUNT*/   :
      1693.0     3  2  :                   LINE = SUBSTR(LINE,J);         /* PURGE BLANKS */   :
      1694.0     3  2  :                END;                                                   :
      1695.0     3  1  :           ELSE DO;               /* PROCESS NON-BLANK CHARACTERS */   :
      1696.0     3  2  :                   J = INDEX(LINE,BLANK);                              :
      1697.0     3  2  :                   IF J = 0  THEN I = L;      /*EXHAUSTED THE LINE*/   :
      1698.0     3  2  :                             ELSE I = J - 1;   /* CHARACTER COUNT */   :
      1699.0     3  2  :                   DO WHILE(I > 15);                                   :
      1700.0     3  3  :                      BIT13 = '1111'B;                                 :
      1701.0     3  3  :                      UNSPEC(TWOBYTE) = BIT16;                         :
      1702.0     3  3  :                      ONEBYTE = SUBSTR(TWOBYTE,2);                     :
      1703.0     3  3  :                      SW_LINE = SW_LINE || ONEBYTE;                    :
      1704.0     3  3  :                      SW_LINE = SW_LINE || SUBSTR(LINE,1,15);          :
      1705.0     3  3  :                      I = I - 15;                                      :
      1706.0     3  3  :                      BIT16 = '0000000000000000'B;                     :
      1707.0     3  3  :                      LINE = SUBSTR(LINE,16);                          :
      1708.0     3  3  :                   END;                                                :
      1709.0     3  2  :                   UNSPEC(TWOBYTE) = UNSPEC(I);                        :
      1710.0     3  2  :                   ONEBYTE = SUBSTR(TWOBYTE,2);                        :
      1711.0     3  2  :                   UNSPEC(BIT4) = SUBSTR(UNSPEC(ONEBYTE),5);           :
      1712.0     3  2  :                   SUBSTR(BIT16,13) = BIT4; /* SET THE CHAR COUNT */   :
      1713.0     3  2  :                   UNSPEC(ONEBYTE) = SUBSTR(UNSPEC(BIT16),9);          :
      1714.0     3  2  :                   SW_LINE = SW_LINE || ONEBYTE;  /* CONTROL CHAR */   :
      1715.0     3  2  :                   SW_LINE = SW_LINE || SUBSTR(LINE,1,I); /* DATA */   :
      1716.0     3  2  :                   BIT16 = '0000000000000000'B;                        :
      1717.0     3  2  :                   LINE = SUBSTR(LINE,I+1);   /* PURGE CHARACTERS */   :
      1718.0     3  2  :                END;                                                   :
      1719.0     3  1  :     END;                                                              :
      1720.0     3     : END DELETE_BLANKS;                                                    :
      1721.0     2     : END PRESS;/*******************************************************/   :
      1722.0           :                                                                       :
      1723.0           :                                                                       :
      1724.0     1     : CONVERTED:PROC(CHARITEM) RETURNS(FIXED BIN);                          :
      1725.0     2     :     DCL  NUMERIC FIXED BIN,CHARITEM CHAR(15) VAR;                     :
      1726.0     2     :     ON CONVERSION ONSOURCE=(10)'0';                                   :
      1727.0     2     :     NUMERIC = CHARITEM;                                               :
      1728.0     2     :     RETURN(NUMERIC);                                                  :
      1729.0     2     : END CONVERTED;/***************************************************/   :
      1730.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    29
 0    Line.File LV NT
 0    1731.0           :                                                                       :
      1732.0     1     : OPTIONS:   PROCEDURE   (PARM);                                        :
      1733.0     2     :     ON ERROR BEGIN; ON ERROR SYSTEM;                                  :
      1734.0     3     :        IF TEST & Q(112) THEN PUT SKIP DATA(PARM); END;                :
      1735.0     2     : DCL PARM CHAR(255) VAR;                                               :
      1736.0     2     : DCL COMMAND CHAR(255) VAR, (I,J,L) FIXED BIN;                         :
      1737.0     2     : DCL (LENGTH,INDEX,SUBSTR)          BUILTIN;                           :
      1738.0     2     : DCL COMMA CHAR INIT(','), WORD CHAR(24) VAR;                          :
      1739.0     2     : IF ^OPTN THEN RETURN;         /* 1/15/84  A ONE_TIME_SWITCH */        :
      1740.0     2     : WORD,COMMAND = '';                                                    :
      1741.0     2     : I = 1; L = LENGTH(PARM);                                              :
      1742.0     2     : DO WHILE(I < L);                                                      :
      1743.0     2  1  :    J = INDEX(SUBSTR(PARM,I),COMMA);                                   :
      1744.0     2  1  :    IF J = 0                                                           :
      1745.0     2  1  :       THEN DO;                                                        :
      1746.0     2  2  :            J = 1 + L;                                                 :
      1747.0     2  2  :            WORD = SUBSTR(PARM,I,J-I);                                 :
      1748.0     2  2  :            IF INDEX(WORD,'=') > 0                                     :
      1749.0     2  2  :               THEN COMMAND = COMMAND || WORD;                         :
      1750.0     2  2  :               ELSE IF SUBSTR(WORD,1,2) = 'NO'                         :
      1751.0     2  2  :                       THEN COMMAND = COMMAND || SUBSTR(WORD,3)        :
      1752.0           :                                              || '=0B';                :
      1753.0     2  2  :                       ELSE COMMAND = COMMAND || WORD || '=1B';        :
      1754.0     2  2  :            END;                                                       :
      1755.0     2  1  :       ELSE DO;                                                        :
      1756.0     2  2  :            J = J + I - 1;                                             :
      1757.0     2  2  :            WORD = SUBSTR(PARM,I,J-I);                                 :
      1758.0     2  2  :            IF INDEX(WORD,'=') > 0                                     :
      1759.0     2  2  :               THEN COMMAND = COMMAND || WORD || ',';                  :
      1760.0     2  2  :               ELSE IF SUBSTR(WORD,1,2) = 'NO'                         :
      1761.0     2  2  :                       THEN COMMAND = COMMAND || SUBSTR(WORD,3)        :
      1762.0           :                                              || '=0B,';               :
      1763.0     2  2  :                       ELSE COMMAND = COMMAND || WORD || '=1B,';       :
      1764.0     2  2  :            END;                                                       :
      1765.0     2  1  :     I = J + 1;                                                        :
      1766.0     2  1  : END;                                                                  :
      1767.0     2     : IF LENGTH(COMMAND) > 0                                                :
      1768.0     2     :    THEN DO;                                                           :
      1769.0     2  1  :         COMMAND = COMMAND || ';';                                     :
      1770.0     2  1  :         GET STRING(COMMAND) DATA;                                     :
      1771.0     2  1  :         END;                                                          :
      1772.0     2     : IF TEST & Q(118) THEN PUT SKIP DATA;                                  :
      1773.0     2     : END OPTIONS;/*****************************************************/   :
      1774.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    30
 0    Line.File LV NT
 0    1775.0           :                                                                       :
      1776.0     1     : CHANGE_OPTN:PROC;                                                     :
      1777.0     2     :     DCL  (I,J,K,L,M,N)               FIXED BIN;                       :
      1778.0     2     :     DCL  PARM                        CHAR(255)   VAR;                 :
      1779.0     2     :     DCL  GLBL                        BIT;                             :
      1780.0           :                                                                       :
      1781.0     2     :     GLBL = 0B;                                                        :
      1782.0     2     :     PARM = INSTRUCTION;                                               :
      1783.0     2     :     IF SUBSTR(PARM,2,6) = 'GLOBAL'                                    :
      1784.0     2     :        THEN DO;                            /* SKIP KEY_WORD */        :
      1785.0     2  1  :             PARM = SUBSTR(PARM,8);                                    :
      1786.0     2  1  :             GLBL = 1B;                                                :
      1787.0     2  1  :             END;                                                      :
      1788.0     2     :        ELSE PARM = SUBSTR(PARM,7);                                    :
      1789.0           :                                                                       :
      1790.0     2     :     DO I = 1 TO LENGTH(PARM)                                          :
      1791.0     2  1  :        WHILE(SUBSTR(PARM,I,1)=' '  | SUBSTR(PARM,I,1)='=');END;       :
      1792.0     2     :     IF LENGTH(PARM) = 0 THEN PARM = ' ';                              :
      1793.0     2     :        ELSE  PARM = SUBSTR(PARM,I);  /* SKIP INITIAL  ' ' & '=' */    :
      1794.0     2     :     DO I = LENGTH(PARM) TO 1 BY -1                                    :
      1795.0     2  1  :        WHILE(SUBSTR(PARM,I,1)=' ');END;                               :
      1796.0     2     :     PARM = SUBSTR(PARM,1,I);           /* SKIP TRAILING BLANKS */     :
      1797.0           :                                                                       :
      1798.0     2     :     IF ^GLBL & SUBSTR(PARM,1,1) = DOUBLE_QUOTE                        :
      1799.0     2     :        THEN PARM = SUBSTR(PARM,2,LENGTH(PARM)-2);                     :
      1800.0     2     :     IF LENGTH(PARM) = 0 THEN PARM = ' ';                              :
      1801.0     2     :     IF TEST & Q(126) THEN PUT SKIP DATA(PARM);                        :
      1802.0     2     :     IF GLBL THEN GLOBAL = PARM;                                       :
      1803.0     2     :             ELSE CALL OPTIONS(PARM);                                  :
      1804.0     2     : END CHANGE_OPTN;/*************************************************/   :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    31
 0    Line.File LV NT
 0    1805.0           :                                                                       :
      1806.0     1     : BIN_HEX:PROC(BINARY)       RETURNS(CHAR(8));                          :
      1807.0     2     :     DCL BINARY             BIT(*);                                    :
      1808.0     2     :     DCL (I,K,J,L,N)        FIXED BIN;                                 :
      1809.0     2     :     DCL HEXCHAR            CHAR(256) VAR INIT('');                    :
      1810.0     2     :     DCL HEX                CHAR;                                      :
      1811.0     2     :     N = LENGTH(BINARY)/4;                                             :
      1812.0     2     :     DO I = 1 TO N;                                                    :
      1813.0     2  1  :        SELECT(SUBSTR(BINARY,I*4-3,4));                                :
      1814.0     2  2  :           WHEN('0001')  HEX = '1';                                    :
      1815.0     2  2  :           WHEN('0010')  HEX = '2';                                    :
      1816.0     2  2  :           WHEN('0011')  HEX = '3';                                    :
      1817.0     2  2  :           WHEN('0100')  HEX = '4';                                    :
      1818.0     2  2  :           WHEN('0101')  HEX = '5';                                    :
      1819.0     2  2  :           WHEN('0110')  HEX = '6';                                    :
      1820.0     2  2  :           WHEN('0111')  HEX = '7';                                    :
      1821.0     2  2  :           WHEN('1000')  HEX = '8';                                    :
      1822.0     2  2  :           WHEN('1001')  HEX = '9';                                    :
      1823.0     2  2  :           WHEN('1010')  HEX = 'A';                                    :
      1824.0     2  2  :           WHEN('1011')  HEX = 'B';                                    :
      1825.0     2  2  :           WHEN('1100')  HEX = 'C';                                    :
      1826.0     2  2  :           WHEN('1101')  HEX = 'D';                                    :
      1827.0     2  2  :           WHEN('1110')  HEX = 'E';                                    :
      1828.0     2  2  :           WHEN('1111')  HEX = 'F';                                    :
      1829.0     2  2  :           OTHERWISE     HEX = '0';                                    :
      1830.0     2  2  :        END;                                                           :
      1831.0     2  1  :        HEXCHAR = HEXCHAR || HEX;                                      :
      1832.0     2  1  :     END;                                                              :
      1833.0     2     :     RETURN(HEXCHAR);                                                  :
      1834.0     2     : END BIN_HEX;/*****************************************************/   :
      1835.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    32
 0    Line.File LV NT
 0    1836.0     1     : OUTPUT_RTN:PROC(KNT);                                                 :
      1837.0     2     :     DCL (I,K,J,L,N,KNT)    FIXED BIN(31);                             :
      1838.0     2     :     DCL  NUMERIC_FIELD     CHAR(9);                                   :
      1839.0     2     :     DCL  DECIMAL           CHAR(3) DEF NUMERIC_FIELD POS(7);          :
      1840.0     2     :     IF Q(130) THEN PUT SKIP DATA(ALLOW_OUTPUT);                       :
      1841.0     2     :     IF ^ALLOW_OUTPUT & ^TEST  THEN RETURN;                            :
      1842.0     2     :     IF NAME THEN SUBSTR(INSTRUCTION,73) = MEMNAME;                    :
      1843.0     2     :     DO I = 255 TO 1 BY -1 WHILE(SUBSTR(INSTRUCTION,I,1)=' ');END;     :
      1844.0     2     :     IF LIST | LISTPDS  THEN                                           :
      1845.0     2     :        IF NUM                                                         :
      1846.0     2     :           THEN DO;                                                    :
      1847.0     2  1  :                IF WYLBUR                                              :
      1848.0     2  1  :                   THEN DO;                                            :
      1849.0     2  2  :                        PUT STRING(NUMERIC_FIELD)                      :
      1850.0           :                            EDIT(KNT)(P'ZZZZ9.999');                   :
      1851.0     2  2  :                        IF SUBSTR(DECIMAL,3)='0'                       :
      1852.0     2  2  :                           THEN SUBSTR(DECIMAL,3)=' ';                 :
      1853.0     2  2  :                        IF SUBSTR(DECIMAL,2)='0 '                      :
      1854.0     2  2  :                           THEN SUBSTR(DECIMAL,2)='  ';                :
      1855.0     2  2  :                        IF DECIMAL = '0  '                             :
      1856.0     2  2  :                           THEN DECIMAL = '   ';                       :
      1857.0     2  2  :                        END;                                           :
      1858.0     2  1  :                   ELSE DO;                                            :
      1859.0     2  2  :                        LINE_KNT = LINE_KNT + 1;                       :
      1860.0     2  2  :                        PUT STRING(NUMERIC_FIELD)                      :
      1861.0           :                            EDIT(KNT)(P'ZZZZZV.BBB');                  :
      1862.0     2  2  :                        END;                                           :
      1863.0     2  1  :                PUT SKIP FILE(FILE) EDIT                               :
      1864.0           :                    (NUMERIC_FIELD)          (COL(1),A)                :
      1865.0           :                    (SUBSTR(INSTRUCTION,1,I))(COL(11),A);              :
      1866.0     2  1  :                RETURN;                                                :
      1867.0     2  1  :                END;                                                   :
      1868.0     2     :           ELSE DO;                                                    :
      1869.0     2  1  :                PUT SKIP FILE(PDSLIST) EDIT                            :
      1870.0           :                    (SUBSTR(INSTRUCTION,1,I))  (COL(1),A);             :
      1871.0     2  1  :                RETURN;                                                :
      1872.0     2  1  :                END;                                                   :
      1873.0     2     :     IF PRINT                                                          :
      1874.0     2     :        THEN DO;                                                       :
      1875.0     2  1  :             PUT SKIP EDIT(SUBSTR(INSTRUCTION,1,I))(A);                :
      1876.0     2  1  :             RETURN;                                                   :
      1877.0     2  1  :             END;                                                      :
      1878.0     2     :     IF INTRDR                                                         :
      1879.0     2     :        THEN DO;                                                       :
      1880.0     2  1  :             PUT SKIP FILE(READER)EDIT(INSTRUCTION)(A(80));            :
      1881.0     2  1  :             RETURN;                                                   :
      1882.0     2  1  :             END;                                                      :
      1883.0     2     :     PUT SKIP FILE(SYSOUT)EDIT(SUBSTR(INSTRUCTION,1,I))(A);            :
      1884.0     2     : END OUTPUT_RTN;/**************************************************/   :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    33
 0    Line.File LV NT
 0    1885.0           :                                                                       :
      1886.0           :                                                                       :
      1887.0     1     : GET_MACRO_DSN:PROC;                                                   :
      1888.0     2     :     IF ^FIRST_TIME  THEN RETURN;                                      :
      1889.0     2     :     FIRST_TIME = FALSE;                                               :
      1890.0           :                                                                       :
      1891.0     2     :     CALL SVC99(WORK,'INFO',INFORMATION,'DD=MEMBERS  ;');              :
      1892.0     2     :     RTNCODE = PLIRETV;                                                :
      1893.0     2     :     IF DD_NAME ^= LOW(8) THEN SHORTLST, PROFILE = TRUE;               :
      1894.0     2     :     IF TEST & Q(134) THEN SIGNAL CONDITION(DYNALOC);                  :
      1895.0           :                                                                       :
      1896.0     2     :     CALL SVC99(WORK,'INFO',INFORMATION,'DD=MACROS   ;');              :
      1897.0     2     :     RTNCODE = PLIRETV;                                                :
      1898.0     2     :     DSNAME = DSN;                                                     :
      1899.0     2     :     IF TEST & Q(146) THEN SIGNAL CONDITION(DYNALOC);                  :
      1900.0     2     :     IF DD_NAME ^= LOW(8)                                              :
      1901.0     2     :        THEN DO;                                                       :
      1902.0     2  1  :             OPEN FILE(MACROS);                                        :
      1903.0     2  1  :             DD.DDN = 'MACROS';                                        :
      1904.0     2  1  :             CALL DDINFO(DD);                                          :
      1905.0     2  1  :             MRECFM = RECFM;                                           :
      1906.0     2  1  :             CLOSE FILE(MACROS);                                       :
      1907.0     2  1  :             CALL SVC99(WORK,'UNALLOC','DD=MACROS UNALLOC;');          :
      1908.0     2  1  :             END;                                                      :
      1909.0     2     :     RTNCODE = PLIRETV;                                                :
      1910.0     2     :     IF TEST & Q(142) THEN SIGNAL CONDITION(DYNALOC);                  :
      1911.0           :                                                                       :
      1912.0     2     :     CALL SVC99(WORK,'INFO',INFORMATION,'DD=PDSCOPY  ;');              :
      1913.0     2     :     IF TEST & Q(138) THEN SIGNAL CONDITION(DYNALOC);                  :
      1914.0     2     :     IF DD_NAME ^= LOW(8)                                              :
      1915.0     2     :        THEN DO;                                                       :
      1916.0     2  1  :             COPY = TRUE;                                              :
      1917.0     2  1  :             OPEN FILE(PDSCOPY);                                       :
      1918.0     2  1  :             DD.DDN = 'PDSCOPY';                                       :
      1919.0     2  1  :             CALL DDINFO(DD);                                          :
      1920.0     2  1  :             CLOSE FILE(PDSCOPY);                                      :
      1921.0     2  1  :             OUTFILE = DSN;                                            :
      1922.0     2  1  :             CALL SVC99(WORK,'UNALLOC','DD=PDSCOPY UNALLOC;');         :
      1923.0     2  1  :             RTNCODE = PLIRETV;                                        :
      1924.0     2  1  :             IF RECFM = 'U' & BLKSIZE = 6233  THEN WYLFMT =1B;         :
      1925.0     2  1  :             END;                                                      :
      1926.0     2     :        ELSE COPY = FALSE;                                             :
      1927.0     2     :     IF TEST & Q(150)                                                  :
      1928.0     2     :      | R_CODE > 4   THEN SIGNAL CONDITION(DYNALOC);                   :
      1929.0           :                                                                       :
      1930.0     2     :     IF ^COPY  THEN OUTFILE = DSNAME;                                  :
      1931.0     2     : END GET_MACRO_DSN;/***********************************************/   :
      1932.0           :                                                                       :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    34
 0    Line.File LV NT
 0    1933.0           : /* (CHECK): */                                                        :
      1934.0     1     : ALL_MEMBERS:PROC;                                                     :
      1935.0     2     :     IF SHORTLST                        /* DDNAME=MEMBERS EXISTS */    :
      1936.0     2     :        THEN DO;                                                       :
      1937.0     2  1  :             MORE = TRUE;                                              :
      1938.0     2  1  :             ALLOC MEMBER_NAME;                                        :
      1939.0     2  1  :             GET FILE(MEMBERS) EDIT(MEMBER_NAME)(A(8));                :
      1940.0     2  1  :             IF MEMBER_NAME = ' ' THEN FREE MEMBER_NAME;               :
      1941.0     2  1  :             DO WHILE(MORE);                                           :
      1942.0     2  2  :                ALLOC MEMBER_NAME;                                     :
      1943.0     2  2  :                GET FILE(MEMBERS) EDIT(MEMBER_NAME)(A(8));             :
      1944.0     2  2  :                IF MEMBER_NAME = ' ' THEN FREE MEMBER_NAME;            :
      1945.0     2  2  :             END;                                                      :
      1946.0     2  1  :             END;                                                      :
      1947.0     2     :        ELSE DO;                                                       :
      1948.0     2  1  :             ALLOC_DDN = 'BLOCKS';                                     :
      1949.0     2  1  :             ALLOC_DSNAME = DSNAME || ' OLD LRECL=256 DSORG=PS';       :
      1950.0     2  1  :             CALL SVC99(WORK, 'ALLOC',ALLOC_DATA);                     :
      1951.0     2  1  :             IF PLIRETV ^= 0  THEN SIGNAL ERROR;                       :
      1952.0     2  1  :             READ FILE(BLOCKS) INTO(BLOCK);                            :
      1953.0     2  1  :             PTR = ADDR(BLOCK);                                        :
      1954.0     2  1  :             OVFLO = BLOCKLENGTH;                                      :
      1955.0     2  1  :             DO WHILE(MORE);                                           :
      1956.0     2  2  :                I = 3;                                                 :
      1957.0     2  2  :                J = 1;                                                 :
      1958.0     2  2  :                DO WHILE(MORE & J+3 < OVFLO);                          :
      1959.0     2  3  :                   BLOCK = SUBSTR(BLOCK,I);                            :
      1960.0     2  3  :                   P = ADDR(BLOCK);                                    :
      1961.0     2  3  :                   IF MEMBR = HIGH(8)                                  :
      1962.0     2  3  :                      THEN MORE = 0B;                                  :
      1963.0     2  3  :                      ELSE IF VERIFY(MEMBR,VALID) = 0                  :
      1964.0     2  3  :                              THEN DO;                                 :
      1965.0     2  4  :                                   ALLOC MEMBER_NAME;                  :
      1966.0     2  4  :                                   MEMBER_NAME = MEMBR;                :
      1967.0     2  4  :                                   IF TEST & Q(164)                    :
      1968.0     2  4  :                                      THEN PUT SKIP DATA(MEMBER_NAME); :
      1969.0     2  4  :                                    END;                               :
      1970.0     2  3  :                   BIT8 = UNSPEC(JUNK);                                :
      1971.0     2  3  :                   FIELDLENGTH = SUBSTR(BIT8,4);                       :
      1972.0     2  3  :                   I = FIELDLENGTH*2 + 13;                             :
      1973.0     2  3  :                   J = J + I - 1;                                      :
      1974.0     2  3  :                END;                                                   :
      1975.0     2  2  :                READ FILE(BLOCKS) INTO(BLOCK);                         :
      1976.0     2  2  :                PTR = ADDR(BLOCK);                                     :
      1977.0     2  2  :                OVFLO = BLOCKLENGTH;                                   :
      1978.0     2  2  :             END;                                                      :
      1979.0     2  1  :             CLOSE FILE(BLOCKS);                                       :
      1980.0     2  1  :             END;                                                      :
      1981.0           :                                                                       :
      1982.0     2     :     EXTENT = ALLOCATION(MEMBER_NAME);                                 :
      1983.0     2     :     IF TEST & Q(168) THEN PUT SKIP DATA(EXTENT);                      :
      1984.0     2     :     IF EXTENT > 0                                                     :
      1985.0     2     :        THEN DO;                                                       :
      1986.0     2  1  :               ALLOC MATRIX;                                           :
      1987.0     2  1  :               ALLOC PAGE_NUMBER;                                      :
      1988.0     2  1  :               DO J = EXTENT TO 1 BY -1;                               :
      1989.0     2  2  :               MATRIX(J) = MEMBER_NAME;                                :
      1990.0     2  2  :               IF TEST & Q(172)                                        :
      1991.0     2  2  :                  THEN PUT SKIP DATA(J,MEMBER_NAME,MATRIX(J));         :
      1992.0     2  2  :               FREE MEMBER_NAME;                                       :
      1993.0     2  2  :               END;                                                    :
      1994.0     2  1  :             END;                                                      :
      1995.0     2     :     IF SHOMEM                                                         :
      1996.0     2     :        THEN DO I = 1 TO EXTENT;                                       :
      1997.0     2  1  :             PUT SKIP LIST( MATRIX(I) );                               :
      1998.0     2  1  :             END;                                                      :
      1999.0           :                                                                       :
      2000.0     2     :               DO WHILE(^END_OF_FILE);                                 :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    35
 0    Line.File LV NT
 0    2001.0     2  1  :                DO J = 80 TO 1 BY -1 WHILE(LINE(J)=' ');END;           :
      2002.0     2  1  :                IF LINE(J) = CONTINUATION                              :
      2003.0     2  1  :                   THEN DO;                                            :
      2004.0     2  2  :                          CONTINUED = 1B;                              :
      2005.0     2  2  :                          CONTINUE_AREA = SUBSTR(INSTRUCTION,1,J-1);   :
      2006.0     2  2  :                          DO WHILE(CONTINUED);                         :
      2007.0     2  3  :                            GET FILE(SYSIN)EDIT(INSTRUCTION)(A(80));   :
      2008.0     2  3  :                            DO J = 80 TO 1 BY -1                       :
      2009.0     2  4  :                               WHILE(LINE(J)=' ');END;                 :
      2010.0     2  3  :                            IF LINE(J) ^= CONTINUATION                 :
      2011.0     2  3  :                               THEN DO;                                :
      2012.0     2  4  :                                    CONTINUE_AREA = CONTINUE_AREA ||   :
      2013.0           :                                                    INSTRUCTION;       :
      2014.0     2  4  :                                    CONTINUED = 0B;                    :
      2015.0     2  4  :                                    END;                               :
      2016.0     2  3  :                               ELSE CONTINUE_AREA = CONTINUE_AREA ||   :
      2017.0           :                                          SUBSTR(INSTRUCTION,1,J-1);   :
      2018.0     2  3  :                          END;                                         :
      2019.0     2  2  :                          INSTRUCTION = CONTINUE_AREA;                 :
      2020.0     2  2  :                        END;                                           :
      2021.0     2  1  :                  ALLOC STACK;                                         :
      2022.0     2  1  :                  STACK = INSTRUCTION;                                 :
      2023.0     2  1  :                  GET FILE(SYSIN) EDIT(INSTRUCTION)(A(80));            :
      2024.0     2  1  :               END;                                                    :
      2025.0     2     :               OCCURS, EXTENT = ALLOCATION(STACK);                     :
      2026.0     2     :               IF EXTENT > 0                                           :
      2027.0     2     :                  THEN DO;                                             :
      2028.0     2  1  :                       ALLOC APPLICATION;                              :
      2029.0     2  1  :                         DO J = EXTENT TO 1 BY -1;                     :
      2030.0     2  2  :                            APPLICATION(J) = STACK;                    :
      2031.0     2  2  :                            FREE STACK;                                :
      2032.0     2  2  :                         END;                                          :
      2033.0     2  1  :                       END;                                            :
      2034.0     2     :                  ELSE DO;           /* IN CASE OF NO SYSIN INPUT */   :
      2035.0     2  1  :                       OCCURS,EXTENT = 1;                              :
      2036.0     2  1  :                       ALLOC APPLICATION;                              :
      2037.0     2  1  :                       INSTRUCTION, APPLICATION(1) = (255)' ';         :
      2038.0     2  1  :                       END;                                            :
      2039.0     2     : END ALL_MEMBERS;/*************************************************/   :
      2040.0     1     : END  PDSPROC;/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/   :
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    36
 -                    Attribute/Xref Table
 -     Line.File Identifier                      Attributes
 0     1010.0    _Begin_1010_Blk_22              CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        525.0    _Begin_525_Blk_13               CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        573.0    _Begin_573_Blk_14               CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        640.0    _Begin_640_Blk_15               CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        664.0    _Begin_664_Blk_16               CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        675.0    _Begin_675_Blk_17               CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        762.0    _Begin_762_Blk_20               CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        853.0    _Begin_853_Blk_21               CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
       1338.0    _ON_Begin_1338_Blk_29           CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
       1726.0    _ON_Begin_1726_Blk_37           CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
       1733.0    _ON_Begin_1733_Blk_39           CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        228.0    _ON_Begin_228_Blk_2             CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        232.0    _ON_Begin_232_Blk_3             CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        253.0    _ON_Begin_253_Blk_4             CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        258.0    _ON_Begin_258_Blk_5             CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        265.0    _ON_Begin_265_Blk_6             CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        271.0    _ON_Begin_271_Blk_7             CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        272.0    _ON_Begin_272_Blk_8             CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        273.0    _ON_Begin_273_Blk_9             CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        274.0    _ON_Begin_274_Blk_10            CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        275.0    _ON_Begin_275_Blk_11            CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        278.0    _ON_Begin_278_Blk_12            CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        713.0    _ON_Begin_713_Blk_19            CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        853.0    #CHANGES                        CONSTANT LABEL
        573.0    #OPTION1                        CONSTANT LABEL
        640.0    #OPTION2                        CONSTANT LABEL
        664.0    #OPTION3                        CONSTANT LABEL
        675.0    #OPTION4                        CONSTANT LABEL
       1010.0    #PUTITOUT                       CONSTANT LABEL
        762.0    #STACKIT                        CONSTANT LABEL
        377.0    ABS                             BUILTIN
        377.0    ADDR                            BUILTIN
                                                 Refs: 1953.0 1960.0 1976.0
        +++++++  ALL                             BUILTIN
                                                 Refs: 1314.0
       1934.0    ALL_MEMBERS                     CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 582.0 643.0
        479.0    ALLOC_DATA                      STRUCTURE AUTOMATIC
                                                 Refs: 1950.0
        480.0    ALLOC_DD                        MEMBER IN ALLOC_DATA CHARACTER(3) UNALIGNED INITIAL
                                                 Refs: 1950.0
        481.0    ALLOC_DDN                       MEMBER IN ALLOC_DATA CHARACTER(9) UNALIGNED
                                                 Refs: 1950.0
                                                 Sets: 1948.0
        482.0    ALLOC_DSN                       MEMBER IN ALLOC_DATA CHARACTER(4) UNALIGNED INITIAL
                                                 Refs: 1950.0
        483.0    ALLOC_DSNAME                    MEMBER IN ALLOC_DATA CHARACTER(80) UNALIGNED
                                                 Refs: 1950.0
                                                 Sets: 1949.0
        484.0    ALLOC_SGN                       MEMBER IN ALLOC_DATA CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 1950.0
        375.0    ALLOCATION                      BUILTIN
                                                 Refs: 1982.0 2025.0
        317.0    ALLOW_INPUT                     AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 761.0
                                                 Sets: 588.0 600.0 645.0 656.0
        318.0    ALLOW_OUTPUT                    AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1009.0 1128.0 1840.0 1841.0
                                                 Sets: 589.0 592.0 646.0 649.0
        319.0    AND                             AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 544.0 562.0 1314.0
       1308.0    ANSWER                          AUTOMATIC BIT(1) UNALIGNED
                                                 Refs: 1316.0
                                                 Sets: 1309.0 1314.0 1315.0
        +++++++  ANY                             BUILTIN
                                                 Refs: 1315.0
        320.0    ANYPDS                          AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 751.0
        382.0    APPLICATION                     CONTROLLED DIM(1:*) CHARACTER(255) UNALIGNED
                                                 Refs: 590.0 591.0 593.0 647.0 648.0 650.0 2028.0 2036.0
                                                 Sets: 2030.0 2037.0
        720.0    ARG                             DEFINED CHARACTER(255) UNALIGNED
                                                 Refs: 749.0 757.0 847.0 847.0 851.0 856.0 860.0 862.0 867.0 869.0 874.0 885.0
                                                       887.0 892.0 894.0 899.0 901.0 906.0 908.0
                                                 Sets: 746.0 759.0 768.0
        724.0    ARRAY                           STRUCTURE BASED ( CURRENT )
                                                 Refs: 775.0 817.0 1029.0 1040.0 1060.0 1079.0 1101.0 1120.0 1173.0 1231.0
        471.0    ATTRIBUTE                       MEMBER IN INFORMATION BIT(8) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
       1806.0    BIN_HEX                         CONSTANT
                                                 ENTRY( BYADDR BIT(*) UNALIGNED )
                                                 RETURNS( BYADDR CHARACTER(8) UNALIGNED )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1168.0
       1807.0    BINARY                          PARAMETER BYADDR BIT(*) UNALIGNED
                                                 Refs: 1811.0 1813.0
       1205.0    BIT1                            DEFINED BIT(4) UNALIGNED
                                                 Refs: 1215.0 1220.0
       1672.0    BIT13                           DEFINED BIT(4) UNALIGNED
                                                 Sets: 1700.0
        380.0    BIT16                           AUTOMATIC BIT(16) UNALIGNED
                                                 Refs: 801.0 802.0
                                                 Sets: 800.0 801.0
       1146.0    BIT16                           AUTOMATIC BIT(16) UNALIGNED
       1670.0    BIT16                           AUTOMATIC BIT(16) UNALIGNED
                                                 Refs: 1671.0 1672.0 1684.0 1701.0 1713.0
                                                 Sets: 1675.0 1692.0 1706.0 1712.0 1716.0
       1147.0    BIT24                           AUTOMATIC BIT(24) UNALIGNED
       1150.0    BIT28                           DEFINED BIT(28) UNALIGNED
                                                 Refs: 1161.0 1198.0
       1148.0    BIT32                           AUTOMATIC BIT(32) UNALIGNED
                                                 Refs: 1149.0 1150.0 1168.0
                                                 Sets: 1160.0 1197.0
       1616.0    BIT32                           AUTOMATIC BIT(32) UNALIGNED
       1673.0    BIT4                            AUTOMATIC BIT(4) UNALIGNED
                                                 Refs: 1692.0 1712.0
                                                 Sets: 1691.0 1711.0
       1206.0    BIT5                            DEFINED BIT(4) UNALIGNED
                                                 Refs: 1214.0 1222.0
        379.0    BIT8                            AUTOMATIC BIT(8) UNALIGNED
                                                 Refs: 1971.0
                                                 Sets: 1970.0
       1145.0    BIT8                            AUTOMATIC BIT(8) UNALIGNED
                                                 Refs: 1165.0
                                                 Sets: 1164.0
       1204.0    BIT8                            AUTOMATIC BIT(8) UNALIGNED
                                                 Refs: 1205.0 1206.0
                                                 Sets: 1213.0 1218.0
       1671.0    BIT9                            DEFINED BIT(4) UNALIGNED
                                                 Sets: 1683.0
        383.0    BLANK                           AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 814.0 1132.0 1228.0 1258.0
       1612.0    BLANK                           AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 1696.0
        321.0    BLANKLINE                       AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 814.0 1171.0 1229.0
        384.0    BLK_OVFLOW                      AUTOMATIC FIXED BIN(15,0) INITIAL
        505.0    BLKSIZE                         MEMBER IN INFO IN DD FIXED BIN(15,0)
                                                 Refs: 238.0 1904.0 1919.0 1924.0
        385.0    BLOCK                           AUTOMATIC CHARACTER(6233) VARYING UNALIGNED
                                                 Refs: 769.0 770.0 772.0 774.0 778.0 800.0 803.0 814.0 820.0 1160.0 1164.0 1166.0
                                                       1197.0 1953.0 1959.0 1960.0 1976.0
                                                 Sets: 667.0 773.0 784.0 797.0 828.0 1952.0 1959.0 1975.0
       1608.0    BLOCK                           STATIC CHARACTER(6233) VARYING UNALIGNED
                                                 Refs: 1653.0 1656.0 1659.0 1662.0 1664.0 1665.0
                                                 Sets: 1656.0 1662.0 1666.0
        454.0    BLOCK_DATA                      STRUCTURE MEMBER IN BLOCKDATA
        386.0    BLOCK_LENGTH                    AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 803.0 1163.0
                                                 Sets: 802.0
       1621.0    BLOCK_LENGTH                    AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1654.0 1661.0
                                                 Sets: 1653.0 1659.0
        452.0    BLOCKDATA                       STRUCTURE BASED ( P )
        387.0    BLOCKLENGTH                     BASED ( PTR ) FIXED BIN(15,0)
                                                 Refs: 1954.0 1977.0
        360.0    BLOCKS                          CONSTANT EXTERNAL FILE RECORD ENV ( U RECSIZE ( 256 ) )
                                                 Refs: 273.0 1952.0 1975.0 1979.0
        453.0    BLOCKSIZE                       MEMBER IN BLOCKDATA CHARACTER(2) UNALIGNED
       1157.0    BUFFER                          AUTOMATIC CHARACTER(256) VARYING UNALIGNED
                                                 Refs: 1168.0 1175.0 1185.0 1194.0 1213.0 1218.0 1224.0 1225.0
                                                 Sets: 1166.0
        322.0    BUMMER                          AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 843.0
                                                 Sets: 811.0 1134.0
        506.0    CATALOGED                       MEMBER IN INFO IN DD CHARACTER(1) UNALIGNED
                                                 Refs: 238.0 1904.0 1919.0
       1340.0    CHANGE_COMMAND                  AUTOMATIC CHARACTER(255) UNALIGNED INITIAL
                                                 Refs: 1364.0
                                                 Sets: 1363.0
       1776.0    CHANGE_OPTN                     CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 703.0
       1319.0    CHANGE_RTN                      CONSTANT
                                                 ENTRY( BYADDR CHARACTER(255) VARYING UNALIGNED )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 849.0
       1725.0    CHARITEM                        PARAMETER BYADDR CHARACTER(15) VARYING UNALIGNED
                                                 Refs: 1727.0
       1476.0    CMD                             DEFINED DIM(1:255) CHARACTER(1) UNALIGNED
                                                 Refs: 1494.0 1495.0 1503.0 1509.0 1510.0 1523.0 1529.0 1543.0 1568.0 1569.0
                                                       1569.0
       1584.0    CMD                             PARAMETER BYADDR NONCONNECTED DIM(*) CHARACTER(1) UNALIGNED
                                                 Refs: 1585.0 1585.0
       1593.0    CMD                             PARAMETER BYADDR NONCONNECTED DIM(*) CHARACTER(1) UNALIGNED
                                                 Refs: 1594.0 1596.0
        388.0    CN                              DEFINED CHARACTER(1) UNALIGNED
        716.0    CNTL                            PARAMETER BYADDR FIXED BIN(15,0)
                                                 Refs: 939.0 956.0 960.0 968.0 980.0 984.0 1024.0 1128.0
       1149.0    CNTL                            DEFINED BIT(4) UNALIGNED
                                                 Refs: 1169.0 1169.0 1188.0 1188.0
       1247.0    CNTL                            PARAMETER BYADDR FIXED BIN(15,0)
                                                 Refs: 1284.0
       1617.0    CNTL                            AUTOMATIC BIT(4) UNALIGNED
                                                 Refs: 1652.0
                                                 Sets: 1638.0 1640.0 1644.0
        389.0    COMMA                           AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 1258.0 1261.0 1288.0 1361.0
       1738.0    COMMA                           AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 1743.0
       1477.0    COMMAND                         PARAMETER BYADDR CHARACTER(255) UNALIGNED
                                                 Refs: 1476.0 1496.0 1499.0 1505.0 1506.0 1512.0 1513.0 1517.0 1518.0 1524.0
                                                       1531.0 1532.0 1538.0 1542.0 1545.0 1548.0 1549.0 1571.0
       1736.0    COMMAND                         AUTOMATIC CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 1749.0 1751.0 1753.0 1759.0 1761.0 1763.0 1767.0 1769.0 1770.0
                                                 Sets: 1740.0 1749.0 1751.0 1753.0 1759.0 1761.0 1763.0 1769.0
        468.0    COND_DISP                       MEMBER IN INFORMATION BIT(8) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
        390.0    CONTINUATION                    AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 388.0 681.0 689.0 2002.0 2010.0
        391.0    CONTINUE_AREA                   AUTOMATIC CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 691.0 695.0 698.0 2012.0 2016.0 2019.0
                                                 Sets: 684.0 691.0 695.0 2005.0 2012.0 2016.0
        323.0    CONTINUED                       AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 685.0 2006.0
                                                 Sets: 683.0 693.0 2004.0 2014.0
       1724.0    CONVERTED                       CONSTANT
                                                 ENTRY( BYADDR CHARACTER(15) VARYING UNALIGNED )
                                                 RETURNS( BYADDR FIXED BIN(15,0) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1267.0 1271.0 1272.0
        324.0    COPY                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 554.0 562.0 1018.0 1032.0 1048.0 1066.0 1930.0
                                                 Sets: 542.0 1916.0 1926.0
        507.0    CREATED                         MEMBER IN INFO IN DD PICTURE '99999' UNALIGNED
                                                 Refs: 238.0 1904.0 1919.0
        723.0    CURRENT                         AUTOMATIC POINTER
                                                 Refs: 724.0 777.0 778.0 780.0 781.0 782.0 783.0 819.0 820.0 822.0 823.0 824.0
                                                       825.0 1175.0 1177.0 1178.0 1180.0 1181.0 1182.0 1183.0 1233.0 1234.0
                                                       1236.0 1238.0 1239.0 1240.0 1241.0
                                                 Sets: 775.0 817.0 1173.0 1231.0
       1610.0    CURRENT_LINE                    AUTOMATIC CHARACTER(256) VARYING UNALIGNED
                                                 Refs: 1643.0 1647.0 1656.0
                                                 Sets: 1634.0 1645.0
       1341.0    CURRENT_POINTER                 AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1509.0 1523.0 1567.0 1568.0
                                                 Sets: 1492.0 1502.0 1522.0 1541.0 1550.0
       1584.0    CURRENT_POINTER                 PARAMETER BYADDR FIXED BIN(15,0)
                                                 Refs: 1585.0
       1593.0    CURRENT_POINTER                 PARAMETER BYADDR FIXED BIN(15,0)
                                                 Refs: 1594.0 1595.0 1596.0
                                                 Sets: 1595.0
        392.0    CUTOFF                          AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 786.0 830.0
        393.0    DASH                            AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 1265.0
        377.0    DATE                            BUILTIN
                                                 Refs: 526.0 526.0 526.0
        496.0    DD                              STRUCTURE AUTOMATIC
                                                 Refs: 238.0 1904.0 1919.0
        463.0    DD_NAME                         MEMBER IN INFORMATION CHARACTER(8) UNALIGNED
                                                 Refs: 237.0 1891.0 1893.0 1896.0 1900.0 1912.0 1914.0
        373.0    DDINFO                          CONSTANT EXTERNAL
                                                 ENTRY
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1904.0 1919.0
        498.0    DDN                             MEMBER IN DD CHARACTER(8) UNALIGNED INITIAL
                                                 Refs: 238.0 1904.0 1919.0
                                                 Sets: 1903.0 1918.0
        394.0    DDNAME                          AUTOMATIC CHARACTER(8) UNALIGNED INITIAL
                                                 Sets: 557.0
       1839.0    DECIMAL                         DEFINED CHARACTER(3) UNALIGNED
                                                 Refs: 1851.0 1853.0 1855.0
                                                 Sets: 1852.0 1854.0 1856.0
       1668.0    DELETE_BLANKS                   CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1642.0
        234.0    DIGITS                          AUTOMATIC CHARACTER(2000) UNALIGNED
                                                 Refs: 248.0
                                                 Sets: 244.0
        395.0    DIRECTORY                       AUTOMATIC CHARACTER(256) UNALIGNED
        396.0    DOUBLE_QUOTE                    AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 858.0 860.0 890.0 892.0 1798.0
       1474.0    DOUBLEQUOTE                     AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
        464.0    DSN                             MEMBER IN INFORMATION CHARACTER(44) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1898.0 1912.0 1921.0
        397.0    DSNAME                          AUTOMATIC CHARACTER(44) VARYING UNALIGNED
                                                 Refs: 236.0 290.0 307.0 791.0 1930.0 1949.0
                                                 Sets: 757.0 1898.0
        469.0    DSORG                           MEMBER IN INFORMATION BIT(16) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
        502.0    DSORG                           MEMBER IN INFO IN DD CHARACTER(2) UNALIGNED
                                                 Refs: 238.0 1904.0 1919.0
        325.0    DTS                             AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 536.0 562.0
        326.0    DUMP                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1167.0 1635.0
        398.0    DYNALOC                         CONDITION EXTERNAL
                                                 Refs: 231.0 794.0 1054.0 1072.0 1095.0 1113.0 1894.0 1899.0 1910.0 1913.0 1928.0
        329.0    E_O_F                           AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 668.0 774.0
                                                 Sets: 272.0
        363.0    EDIT                            CONSTANT EXTERNAL FILE STREAM ENV ( U BLKSIZE ( 6233 ) )
                                                 Refs: 548.0
        399.0    EIGHTY                          AUTOMATIC FIXED BIN(31,0) INITIAL
        327.0    END_OF_FILE                     AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 676.0 2000.0
                                                 Sets: 271.0
       1342.0    ENDCOL                          AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1400.0 1402.0 1411.0 1417.0 1440.0 1446.0
                                                 Sets: 1392.0 1393.0 1395.0 1417.0
        328.0    EOF                             AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1036.0 1043.0 1075.0 1082.0 1116.0 1123.0
                                                 Sets: 1042.0 1044.0 1081.0 1083.0 1122.0 1124.0
       1607.0    EOF                             PARAMETER BYADDR BIT(1) UNALIGNED
                                                 Refs: 1626.0
        400.0    ERR                             AUTOMATIC FIXED BIN(31,0)
        401.0    ERRCODE                         AUTOMATIC FIXED BIN(31,0)
        402.0    EXTENT                          AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 382.0 415.0 431.0 608.0 609.0 611.0 620.0 627.0 633.0 1983.0 1984.0 1988.0
                                                       1996.0 2026.0 2029.0
                                                 Sets: 607.0 1982.0 2025.0 2035.0
        717.0    EXTENT                          AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 722.0 776.0 818.0 834.0 837.0 966.0 979.0 990.0 1019.0 1034.0 1055.0
                                                       1073.0 1096.0 1114.0 1174.0 1185.0 1192.0 1232.0 1282.0 1313.0
                                                 Sets: 763.0 776.0 818.0 1174.0 1232.0
        330.0    FALSE                           AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 273.0 274.0 275.0 540.0 547.0 558.0 559.0 577.0 589.0 600.0 646.0 656.0
                                                       929.0 946.0 999.0 1134.0 1889.0 1926.0
       1143.0    FALSE                           AUTOMATIC BIT(1) UNALIGNED INITIAL
        403.0    FIELDLENGTH                     AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1972.0
                                                 Sets: 1971.0
        404.0    FILE                            AUTOMATIC FILE INITIAL
                                                 Refs: 1057.0 1062.0 1084.0 1098.0 1103.0 1125.0 1664.0 1665.0 1863.0
                                                 Sets: 548.0 556.0 576.0
        405.0    FILE2                           AUTOMATIC FILE INITIAL
                                                 Refs: 807.0
                                                 Sets: 576.0
        458.0    FILLER                          MEMBER IN BLOCK_DATA IN BLOCKDATA CHARACTER(5) UNALIGNED
       1343.0    FILLER                          CONTROLLED CHARACTER(*) UNALIGNED
                                                 Refs: 1428.0 1430.0 1432.0 1458.0 1460.0 1462.0
                                                 Sets: 1429.0 1459.0
        460.0    FILLER2                         MEMBER IN BLOCK_DATA IN BLOCKDATA CHARACTER(40) UNALIGNED
        519.0    FILL1                           MEMBER IN PROFILE_AREA CHARACTER(4) UNALIGNED INITIAL
        521.0    FILL2                           MEMBER IN PROFILE_AREA CHARACTER(8) UNALIGNED INITIAL
        522.0    FILL3                           MEMBER IN PROFILE_AREA CHARACTER(8) UNALIGNED INITIAL
        523.0    FILL4                           MEMBER IN PROFILE_AREA CHARACTER(6) UNALIGNED INITIAL
        331.0    FIRST_TIME                      AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1888.0
                                                 Sets: 1889.0
       1344.0    FIRSTCOLM                       AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1372.0 1398.0 1404.0 1423.0 1427.0 1438.0 1444.0 1450.0 1455.0 1457.0
                                                 Sets: 1359.0 1557.0 1561.0
       1345.0    FIRSTLINE                       AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1367.0 1372.0 1389.0
                                                 Sets: 1357.0 1367.0 1574.0 1576.0
       1615.0    FOURBYTE                        AUTOMATIC CHARACTER(4) UNALIGNED
                                                 Refs: 1652.0 1656.0
                                                 Sets: 1651.0 1652.0
       1887.0    GET_MACRO_DSN                   CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 553.0
       1779.0    GLBL                            AUTOMATIC BIT(1) UNALIGNED
                                                 Refs: 1798.0 1802.0
                                                 Sets: 1781.0 1786.0
        406.0    GLOBAL                          AUTOMATIC CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 738.0 741.0 742.0
                                                 Sets: 1802.0
        376.0    HBOUND                          BUILTIN
                                                 Refs: 583.0 590.0 591.0 607.0 644.0 647.0 648.0 1253.0
       1810.0    HEX                             AUTOMATIC CHARACTER(1) UNALIGNED
                                                 Refs: 1831.0
                                                 Sets: 1814.0 1815.0 1816.0 1817.0 1818.0 1819.0 1820.0 1821.0 1822.0 1823.0
                                                       1824.0 1825.0 1826.0 1827.0 1828.0 1829.0
       1151.0    HEX_C                           AUTOMATIC BIT(4) UNALIGNED INITIAL
                                                 Refs: 1169.0
       1152.0    HEX_0                           AUTOMATIC BIT(4) UNALIGNED INITIAL
                                                 Refs: 1188.0
       1153.0    HEX_4                           AUTOMATIC BIT(4) UNALIGNED INITIAL
                                                 Refs: 1188.0
       1809.0    HEXCHAR                         AUTOMATIC CHARACTER(256) VARYING UNALIGNED INITIAL
                                                 Refs: 1831.0 1833.0
                                                 Sets: 1831.0
        377.0    HIGH                            BUILTIN
                                                 Refs: 1961.0
        723.0    HOLD                            AUTOMATIC POINTER
                                                 Refs: 781.0 823.0 931.0 932.0 934.0 948.0 949.0 951.0 966.0 967.0 969.0 979.0
                                                       980.0 983.0 985.0 990.0 996.0 997.0 1000.0 1000.0 1000.0 1004.0 1019.0
                                                       1020.0 1021.0 1027.0 1028.0 1034.0 1036.0 1036.0 1038.0 1039.0 1043.0
                                                       1043.0 1055.0 1057.0 1058.0 1059.0 1073.0 1075.0 1075.0 1077.0 1078.0
                                                       1082.0 1082.0 1096.0 1098.0 1099.0 1100.0 1114.0 1116.0 1116.0 1118.0
                                                       1119.0 1123.0 1123.0 1181.0 1239.0 1282.0 1283.0 1283.0 1285.0 1310.0
                                                       1311.0 1386.0 1388.0 1388.0 1389.0 1389.0 1393.0 1395.0 1404.0 1407.0
                                                       1412.0 1412.0 1412.0 1423.0 1424.0 1424.0 1424.0 1427.0 1430.0 1430.0
                                                       1438.0 1440.0 1440.0 1440.0 1444.0 1446.0 1446.0 1446.0 1450.0 1450.0
                                                       1452.0 1452.0 1455.0 1457.0 1460.0 1460.0 1466.0
                                                 Sets: 782.0 824.0 921.0 930.0 934.0 947.0 951.0 963.0 969.0 974.0 985.0 1004.0
                                                       1017.0 1028.0 1039.0 1047.0 1059.0 1078.0 1088.0 1100.0 1119.0 1182.0
                                                       1240.0 1252.0 1279.0 1285.0 1382.0 1466.0
        *******  I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 246.0 247.0 248.0 584.0 587.0 593.0 594.0 595.0 598.0 650.0 651.0 652.0
                                                       654.0 1959.0 1973.0 1997.0
                                                 Sets: 245.0 583.0 644.0 1956.0 1972.0 1996.0
        716.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 737.0 741.0 742.0 743.0 746.0 754.0 755.0 757.0 757.0 772.0 936.0 938.0
                                                       953.0 955.0 968.0 980.0 984.0
                                                 Sets: 737.0 743.0 754.0 770.0 931.0 936.0 948.0 953.0 966.0 979.0 990.0
       1156.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1163.0 1164.0 1166.0 1196.0 1197.0 1199.0
                                                 Sets: 1162.0 1196.0 1199.0
       1207.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1211.0 1213.0 1217.0 1218.0 1224.0 1225.0 1226.0
                                                 Sets: 1209.0 1217.0 1226.0
       1247.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1264.0 1264.0 1288.0
                                                 Sets: 1262.0 1287.0
       1295.0    I                               PARAMETER BYADDR FIXED BIN(15,0)
                                                 Refs: 1298.0 1299.0
       1339.0    I                               AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1494.0 1495.0 1496.0 1496.0 1503.0 1505.0 1505.0 1506.0 1506.0 1510.0
                                                       1512.0 1512.0 1513.0 1513.0 1517.0 1517.0 1518.0 1518.0 1524.0 1526.0
                                                       1529.0 1531.0 1531.0 1532.0 1532.0 1541.0 1542.0 1542.0 1543.0 1548.0
                                                       1548.0 1549.0 1549.0 1569.0 1569.0 1570.0 1571.0 1571.0
                                                 Sets: 1494.0 1502.0 1509.0 1523.0 1526.0 1534.0 1542.0 1550.0 1568.0 1570.0
       1623.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1632.0 1634.0
                                                 Sets: 1632.0
       1669.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1682.0 1687.0 1689.0 1699.0 1705.0 1709.0 1715.0 1717.0
                                                 Sets: 1681.0 1687.0 1697.0 1698.0 1705.0
       1736.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1742.0 1743.0 1747.0 1747.0 1756.0 1757.0 1757.0
                                                 Sets: 1741.0 1765.0
       1777.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1790.0 1790.0 1793.0 1794.0 1796.0
                                                 Sets: 1790.0 1794.0
       1808.0    I                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1813.0
                                                 Sets: 1812.0
       1837.0    I                               AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1843.0 1863.0 1869.0 1875.0 1883.0
                                                 Sets: 1843.0
       1246.0    INC_EXC_RANGE                   CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(15,0) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 960.0
        375.0    INDEX                           BUILTIN
                                                 Refs: 740.0 770.0 851.0 856.0 860.0 867.0 885.0 892.0 899.0 906.0 932.0 949.0
                                                       967.0 983.0 997.0 1265.0 1265.0 1407.0 1505.0 1512.0 1517.0 1531.0 1542.0
                                                       1548.0 1554.0 1572.0
       1624.0    INDEX                           BUILTIN
                                                 Refs: 1637.0 1696.0
       1737.0    INDEX                           BUILTIN
                                                 Refs: 1743.0 1748.0 1758.0
        499.0    INFO                            STRUCTURE MEMBER IN DD
                                                 Refs: 238.0 1904.0 1919.0
        462.0    INFORMATION                     STRUCTURE AUTOMATIC
                                                 Refs: 237.0 1891.0 1896.0 1912.0
        525.0    INITIALIZE                      CONSTANT LABEL
        366.0    INPUT                           CONSTANT EXTERNAL FILE RECORD
                                                 Refs: 272.0 667.0 773.0 784.0
       1203.0    INSERT_BLANKS                   CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(15,0) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1190.0
        407.0    INSTRUCTION                     AUTOMATIC CHARACTER(265) VARYING UNALIGNED
                                                 Refs: 684.0 691.0 695.0 700.0 700.0 729.0 736.0 1023.0 1782.0 1843.0 1863.0
                                                       1869.0 1875.0 1880.0 1883.0 2005.0 2012.0 2016.0 2022.0
                                                 Sets: 569.0 593.0 650.0 686.0 698.0 708.0 1013.0 1021.0 1842.0 2007.0 2019.0
                                                       2023.0 2037.0
        332.0    INTRDR                          AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 550.0 562.0 1878.0
                                                 Sets: 559.0
        *******  J                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 591.0 593.0 599.0 608.0 609.0 610.0 610.0 610.0 612.0 612.0 621.0 621.0
                                                       627.0 628.0 628.0 632.0 633.0 648.0 650.0 655.0 680.0 681.0 684.0 687.0
                                                       689.0 695.0 1958.0 1973.0 1989.0 1991.0 1991.0 2001.0 2002.0 2005.0 2008.0
                                                       2010.0 2016.0 2030.0
                                                 Sets: 590.0 606.0 610.0 632.0 647.0 680.0 687.0 1957.0 1973.0 1988.0 2001.0
                                                       2008.0 2029.0
        716.0    J                               AUTOMATIC FIXED BIN(15,0)
       1156.0    J                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1166.0 1168.0 1190.0 1196.0
                                                 Sets: 1165.0
       1207.0    J                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1224.0 1225.0 1226.0
                                                 Sets: 1222.0
       1247.0    J                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1261.0 1263.0 1264.0 1287.0 1288.0
                                                 Sets: 1261.0 1288.0
       1295.0    J                               PARAMETER BYADDR FIXED BIN(15,0)
                                                 Refs: 1298.0 1299.0
       1339.0    J                               AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1496.0 1502.0 1506.0 1513.0 1518.0 1522.0 1532.0 1534.0 1549.0 1550.0
                                                 Sets: 1495.0 1505.0 1512.0 1517.0 1531.0 1548.0
       1623.0    J                               AUTOMATIC FIXED BIN(15,0)
       1669.0    J                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1680.0 1681.0 1693.0 1697.0 1698.0
                                                 Sets: 1680.0 1696.0
       1736.0    J                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1744.0 1747.0 1756.0 1757.0 1765.0
                                                 Sets: 1743.0 1746.0 1756.0
       1777.0    J                               AUTOMATIC FIXED BIN(15,0)
       1808.0    J                               AUTOMATIC FIXED BIN(15,0)
       1837.0    J                               AUTOMATIC FIXED BIN(31,0)
        520.0    JOBNAME                         MEMBER IN PROFILE_AREA CHARACTER(8) UNALIGNED INITIAL
        459.0    JULIAN_DATE                     MEMBER IN BLOCK_DATA IN BLOCKDATA CHARACTER(3) UNALIGNED
        457.0    JUNK                            MEMBER IN BLOCK_DATA IN BLOCKDATA CHARACTER(1) UNALIGNED
                                                 Refs: 1970.0
        *******  J100                            AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 611.0 612.0 612.0
                                                 Sets: 610.0
        *******  J50                             AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 612.0 612.0 620.0 621.0 621.0
                                                 Sets: 610.0
        *******  K                               AUTOMATIC FIXED BIN(15,0)
                                                 Sets: 609.0
        716.0    K                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 939.0 956.0 1000.0 1000.0 1002.0 1022.0 1035.0 1056.0 1074.0 1097.0 1115.0
                                                 Sets: 938.0 955.0 993.0 998.0 1019.0 1034.0 1055.0 1073.0 1096.0 1114.0
       1156.0    K                               AUTOMATIC FIXED BIN(15,0)
       1207.0    K                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1216.0 1221.0 1223.0 1225.0
                                                 Sets: 1212.0 1216.0 1221.0
       1247.0    K                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1266.0 1269.0 1270.0 1284.0
                                                 Sets: 1265.0 1282.0
       1295.0    K                               AUTOMATIC FIXED BIN(15,0)
       1339.0    K                               AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1400.0 1402.0 1411.0 1412.0 1412.0 1416.0
                                                 Sets: 1396.0 1408.0
       1623.0    K                               AUTOMATIC FIXED BIN(15,0)
       1669.0    K                               AUTOMATIC FIXED BIN(15,0)
       1777.0    K                               AUTOMATIC FIXED BIN(15,0)
       1808.0    K                               AUTOMATIC FIXED BIN(15,0)
       1837.0    K                               AUTOMATIC FIXED BIN(31,0)
        *******  KK                              AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 998.0 999.0
                                                 Sets: 997.0
       1339.0    KK                              AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1402.0 1408.0 1409.0
                                                 Sets: 1407.0
        717.0    KNT                             AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 777.0 785.0 786.0 819.0 829.0 830.0
                                                 Sets: 765.0 785.0 829.0
       1837.0    KNT                             PARAMETER BYADDR FIXED BIN(31,0)
                                                 Refs: 1849.0 1860.0
        716.0    L                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 754.0 755.0
                                                 Sets: 753.0
       1156.0    L                               AUTOMATIC FIXED BIN(15,0)
       1207.0    L                               PARAMETER BYADDR FIXED BIN(15,0)
                                                 Refs: 1211.0
       1247.0    L                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1261.0 1263.0 1288.0
                                                 Sets: 1260.0
       1295.0    L                               AUTOMATIC FIXED BIN(15,0)
       1339.0    L                               AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1555.0 1561.0 1562.0 1573.0 1576.0 1577.0
                                                 Sets: 1554.0 1572.0
       1623.0    L                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1632.0 1655.0 1660.0 1665.0
                                                 Sets: 1631.0 1654.0 1659.0
       1669.0    L                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1680.0 1697.0
                                                 Sets: 1677.0
       1736.0    L                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1742.0 1746.0
                                                 Sets: 1741.0
       1777.0    L                               AUTOMATIC FIXED BIN(15,0)
       1808.0    L                               AUTOMATIC FIXED BIN(15,0)
       1837.0    L                               AUTOMATIC FIXED BIN(31,0)
        472.0    LAST_ENTRY                      MEMBER IN INFORMATION BIT(8) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
       1346.0    LASTCOLM                        AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1372.0 1392.0 1394.0 1438.0 1438.0 1444.0 1444.0 1450.0
                                                 Sets: 1360.0 1557.0 1562.0
       1347.0    LASTLINE                        AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1368.0 1372.0 1389.0
                                                 Sets: 1358.0 1368.0 1574.0 1577.0
        *******  LC                              AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1002.0
                                                 Sets: 992.0
        409.0    LDSN                            AUTOMATIC FIXED BIN(15,0)
                                                 Sets: 756.0
        410.0    LEFT_PAREN                      AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 883.0 922.0
        376.0    LENGTH                          BUILTIN
                                                 Refs: 530.0 738.0 747.0 748.0 753.0 803.0 855.0 875.0 876.0 922.0 927.0 944.0
                                                       964.0 977.0 991.0 992.0 1258.0 1260.0 1361.0 1362.0 1383.0 1384.0 1393.0
                                                       1395.0 1404.0 1423.0 1427.0 1438.0 1444.0 1450.0 1450.0 1455.0 1457.0
                                                       1493.0 1790.0 1792.0 1794.0 1799.0 1800.0 1811.0
       1624.0    LENGTH                          BUILTIN
                                                 Refs: 1631.0 1643.0 1643.0 1647.0 1653.0 1659.0 1676.0 1677.0
       1737.0    LENGTH                          BUILTIN
                                                 Refs: 1741.0 1767.0
        411.0    LENTH                           AUTOMATIC FIXED BIN(31,0) INITIAL
        470.0    LIMIT                           MEMBER IN INFORMATION FIXED BIN(15,0) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
        412.0    LINE                            STATIC DIM(1:255) CHARACTER(1) UNALIGNED
                                                 Refs: 677.0 680.0 681.0 687.0 689.0 2001.0 2002.0 2008.0 2010.0
        719.0    LINE                            AUTOMATIC DIM(1:255) CHARACTER(1) UNALIGNED
                                                 Refs: 720.0 748.0 754.0 755.0 846.0 854.0 857.0 863.0 870.0 881.0 882.0 888.0
                                                       895.0 902.0 909.0 912.0 915.0
       1157.0    LINE                            AUTOMATIC CHARACTER(256) VARYING UNALIGNED
                                                 Refs: 1192.0 1224.0 1225.0 1228.0 1233.0
                                                 Sets: 1210.0 1224.0 1225.0 1228.0
       1609.0    LINE                            AUTOMATIC CHARACTER(256) VARYING UNALIGNED
                                                 Refs: 1636.0 1637.0 1676.0 1677.0 1678.0 1680.0 1693.0 1696.0 1704.0 1707.0
                                                       1715.0 1717.0
                                                 Sets: 1634.0 1693.0 1707.0 1717.0
        413.0    LINE_KNT                        AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 706.0 1025.0 1026.0 1859.0
                                                 Sets: 586.0 1020.0 1859.0
        725.0    LINE_NUMBER                     MEMBER IN ARRAY FIXED BIN(31,0)
                                                 Refs: 1020.0 1029.0 1036.0 1040.0 1043.0 1060.0 1075.0 1079.0 1082.0 1101.0
                                                       1116.0 1120.0 1123.0 1283.0 1283.0 1310.0 1388.0 1389.0 1389.0
                                                 Sets: 777.0 819.0 1177.0 1178.0 1234.0 1236.0
       1618.0    LINE_NUMBER                     AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1651.0
                                                 Sets: 1650.0
       1348.0    LINE_OVFLO                      AUTOMATIC FIXED BIN(15,0) INITIAL
       1306.0    LINENUMBER                      AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1313.0
                                                 Sets: 1310.0
        333.0    LIST                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 574.0 1844.0
        334.0    LISTPDS                         AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 574.0 1844.0
       1339.0    LL                              AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1494.0 1567.0 1571.0 1585.0 1596.0
                                                 Sets: 1493.0
        716.0    LM                              AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 931.0 948.0 955.0
                                                 Sets: 834.0
       1247.0    LM                              AUTOMATIC FIXED BIN(15,0)
                                                 Sets: 1253.0
       1295.0    LM                              AUTOMATIC FIXED BIN(15,0)
        335.0    LOAD                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 542.0 665.0 766.0 836.0
       1304.0    LOGICAL_MASK                    CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(15,0) )
                                                 RETURNS( BYADDR BIT(1) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1022.0 1035.0 1056.0 1074.0 1097.0 1115.0
        336.0    LONG                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0
                                                 Sets: 543.0
        377.0    LOW                             BUILTIN
                                                 Refs: 1893.0 1900.0 1914.0
       1339.0    LR                              AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1416.0 1417.0
                                                 Sets: 1384.0
        504.0    LRECL                           MEMBER IN INFO IN DD FIXED BIN(15,0)
                                                 Refs: 238.0 1057.0 1904.0 1919.0
        *******  LT                              AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1000.0
                                                 Sets: 991.0
       1339.0    LT                              AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1393.0 1394.0 1400.0 1412.0 1417.0 1421.0 1436.0
                                                 Sets: 1383.0
        716.0    M                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 748.0 748.0 749.0 754.0 755.0 756.0 757.0 846.0 854.0 861.0 861.0 861.0
                                                       862.0 863.0 863.0 868.0 868.0 868.0 869.0 870.0 870.0 874.0 880.0 881.0
                                                       882.0 885.0 887.0 888.0 888.0 892.0 894.0 895.0 895.0 899.0 901.0 902.0
                                                       902.0 906.0 908.0 909.0 909.0 912.0 914.0 915.0 917.0
                                                 Sets: 748.0 755.0 856.0 860.0 861.0 863.0 867.0 868.0 870.0 881.0 888.0 895.0
                                                       902.0 909.0 915.0
       1247.0    M                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1277.0 1281.0 1283.0
                                                 Sets: 1267.0 1272.0 1277.0
       1295.0    M                               AUTOMATIC FIXED BIN(15,0)
       1339.0    M                               AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1424.0 1424.0 1440.0 1446.0 1452.0
                                                 Sets: 1398.0
       1623.0    M                               AUTOMATIC FIXED BIN(15,0)
       1669.0    M                               AUTOMATIC FIXED BIN(15,0)
       1777.0    M                               AUTOMATIC FIXED BIN(15,0)
        712.0    MACPROC                         CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(15,0) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 599.0 655.0 669.0 704.0 1024.0
        361.0    MACROS                          CONSTANT EXTERNAL FILE RECORD
                                                 Refs: 274.0 404.0 602.0 797.0 828.0 835.0 1902.0 1906.0
        414.0    MARKER                          AUTOMATIC CHARACTER(2) UNALIGNED INITIAL
                                                 Refs: 769.0 774.0 1013.0
        722.0    MASK                            CONTROLLED DIM(1:*,1:*) BIT(1) UNALIGNED
                                                 Refs: 839.0 980.0 1128.0 1129.0 1253.0 1314.0 1315.0
                                                 Sets: 840.0 968.0 975.0 984.0 1256.0 1298.0 1299.0 1468.0
        338.0    MASK_SWITCH                     AUTOMATIC BIT(1) UNALIGNED
                                                 Refs: 975.0 1254.0
                                                 Sets: 841.0 976.0 1257.0
        337.0    MATCH                           AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 931.0 948.0
                                                 Sets: 929.0 933.0 946.0 950.0
        415.0    MATRIX                          CONTROLLED DIM(1:*) CHARACTER(8) UNALIGNED
                                                 Refs: 583.0 584.0 593.0 594.0 595.0 598.0 607.0 612.0 612.0 612.0 621.0 621.0
                                                       628.0 644.0 650.0 651.0 652.0 654.0 1986.0 1991.0 1997.0
                                                 Sets: 1989.0
        416.0    MEM_NAME_HDR                    AUTOMATIC CHARACTER(13) UNALIGNED INITIAL
                                                 Refs: 281.0 298.0
                                                 Sets: 604.0
        465.0    MEMBER                          MEMBER IN INFORMATION CHARACTER(8) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
        501.0    MEMBER                          MEMBER IN INFO IN DD CHARACTER(8) UNALIGNED
                                                 Refs: 238.0 1904.0 1919.0
        486.0    MEMBER_DATA                     STRUCTURE AUTOMATIC
                                                 Refs: 793.0 1053.0 1071.0 1094.0 1112.0
        487.0    MEMBER_DD                       MEMBER IN MEMBER_DATA CHARACTER(3) UNALIGNED INITIAL
                                                 Refs: 793.0 1053.0 1071.0 1094.0 1112.0
        488.0    MEMBER_DDN                      MEMBER IN MEMBER_DATA CHARACTER(9) UNALIGNED
                                                 Refs: 793.0 1053.0 1071.0 1094.0 1112.0
                                                 Sets: 790.0 1050.0 1068.0 1091.0 1109.0
        489.0    MEMBER_DSN                      MEMBER IN MEMBER_DATA CHARACTER(4) UNALIGNED INITIAL
                                                 Refs: 793.0 1053.0 1071.0 1094.0 1112.0
        490.0    MEMBER_DSNAME                   MEMBER IN MEMBER_DATA CHARACTER(80) UNALIGNED
                                                 Refs: 793.0 1053.0 1071.0 1094.0 1112.0
                                                 Sets: 791.0 1051.0 1069.0 1092.0 1110.0
        491.0    MEMBER_MEMBR                    MEMBER IN MEMBER_DATA CHARACTER(7) UNALIGNED INITIAL
                                                 Refs: 793.0 1053.0 1071.0 1094.0 1112.0
        492.0    MEMBER_NAM                      MEMBER IN MEMBER_DATA CHARACTER(8) UNALIGNED
                                                 Refs: 793.0 1053.0 1071.0 1094.0 1112.0
                                                 Sets: 792.0 1052.0 1070.0 1093.0 1111.0
        417.0    MEMBER_NAME                     CONTROLLED CHARACTER(8) VARYING UNALIGNED
                                                 Refs: 1938.0 1940.0 1940.0 1942.0 1944.0 1944.0 1965.0 1968.0 1982.0 1989.0
                                                       1991.0 1992.0
                                                 Sets: 1939.0 1943.0 1966.0
        493.0    MEMBER_SGN                      MEMBER IN MEMBER_DATA CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 793.0 1053.0 1071.0 1094.0 1112.0
        364.0    MEMBERS                         CONSTANT EXTERNAL FILE STREAM
                                                 Refs: 275.0 1939.0 1943.0
        455.0    MEMBR                           MEMBER IN BLOCK_DATA IN BLOCKDATA CHARACTER(8) UNALIGNED
                                                 Refs: 1961.0 1963.0 1966.0
        418.0    MEMNAME                         AUTOMATIC CHARACTER(8) UNALIGNED INITIAL
                                                 Refs: 281.0 290.0 298.0 307.0 750.0 792.0 807.0 1013.0 1052.0 1070.0 1093.0
                                                       1111.0 1842.0
                                                 Sets: 584.0 749.0 772.0 1132.0
       1248.0    MIN                             BUILTIN
        420.0    MINUS3                          AUTOMATIC FIXED BIN(15,0) INITIAL
        *******  MM                              AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 997.0 998.0
                                                 Sets: 995.0 1002.0
        339.0    MORE                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 799.0 996.0 1941.0 1955.0 1958.0
                                                 Sets: 273.0 274.0 275.0 786.0 796.0 810.0 830.0 994.0 999.0 1937.0 1962.0
       1144.0    MORE                            AUTOMATIC BIT(1) UNALIGNED INITIAL
       1349.0    MORE                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1400.0 1411.0 1421.0 1436.0
                                                 Sets: 1397.0 1405.0 1410.0 1422.0 1437.0
        419.0    MRECFM                          AUTOMATIC CHARACTER(4) UNALIGNED
                                                 Refs: 805.0
                                                 Sets: 1905.0
        716.0    N                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 846.0 847.0 847.0 849.0 854.0 855.0 856.0 856.0 857.0 860.0 862.0 863.0
                                                       867.0 869.0 870.0 874.0 874.0 881.0 886.0 886.0 886.0 887.0 888.0 893.0
                                                       893.0 893.0 894.0 895.0 900.0 900.0 900.0 901.0 902.0 907.0 907.0 907.0
                                                       908.0 909.0 915.0
                                                 Sets: 846.0 854.0 880.0 885.0 886.0 892.0 893.0 899.0 900.0 906.0 907.0 914.0
                                                       917.0
       1207.0    N                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1216.0 1221.0
                                                 Sets: 1215.0 1220.0
       1247.0    N                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1276.0 1281.0 1283.0
                                                 Sets: 1267.0 1271.0 1276.0
       1295.0    N                               AUTOMATIC FIXED BIN(15,0)
       1339.0    N                               AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1428.0 1458.0 1585.0 1585.0 1588.0 1596.0 1597.0
                                                 Sets: 1427.0 1457.0 1585.0 1596.0
       1669.0    N                               AUTOMATIC FIXED BIN(15,0)
       1777.0    N                               AUTOMATIC FIXED BIN(15,0)
       1808.0    N                               AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1812.0
                                                 Sets: 1811.0
       1837.0    N                               AUTOMATIC FIXED BIN(31,0)
        340.0    NAME                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 1842.0
        341.0    NEST                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 1024.0
                                                 Sets: 540.0 577.0
        421.0    NESTLVL                         AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 730.0 731.0 1133.0
                                                 Sets: 730.0 1133.0
        422.0    NESTOVFLO                       AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 731.0
        727.0    NEXT                            MEMBER IN ARRAY POINTER
                                                 Refs: 934.0 951.0 969.0 985.0 1004.0 1028.0 1029.0 1039.0 1040.0 1059.0 1060.0
                                                       1078.0 1079.0 1100.0 1101.0 1119.0 1120.0 1285.0 1466.0
                                                 Sets: 781.0 783.0 823.0 825.0 1181.0 1183.0 1239.0 1241.0
       1591.0    NEXT_CHAR                       CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(15,0),
                                                        BYADDR NONCONNECTED DIM(*) CHARACTER(1) UNALIGNED )
                                                 RETURNS( BYADDR FIXED BIN(15,0) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1509.0 1523.0 1568.0
       1582.0    NEXT_DELIMITER                  CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(15,0),
                                                        BYADDR NONCONNECTED DIM(*) CHARACTER(1) UNALIGNED )
                                                 RETURNS( BYADDR FIXED BIN(15,0) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1495.0
        467.0    NORM_DISP                       MEMBER IN INFORMATION BIT(8) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
        423.0    NOW                             AUTOMATIC CHARACTER(8) UNALIGNED
                                                 Refs: 281.0 298.0
                                                 Sets: 528.0
        377.0    NULL                            BUILTIN
                                                 Refs: 764.0 779.0 783.0 821.0 825.0 931.0 948.0 966.0 979.0 990.0 996.0 1019.0
                                                       1034.0 1055.0 1073.0 1096.0 1114.0 1179.0 1183.0 1237.0 1241.0 1282.0
                                                       1386.0
        342.0    NUM                             AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 1845.0
       1605.0    NUMBER                          PARAMETER BYADDR FIXED BIN(31,0)
                                                 Refs: 1636.0 1650.0
       1725.0    NUMERIC                         AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1728.0
                                                 Sets: 1727.0
       1838.0    NUMERIC_FIELD                   AUTOMATIC CHARACTER(9) UNALIGNED
                                                 Refs: 1839.0 1849.0 1860.0 1863.0
        343.0    OBS                             AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 803.0
        424.0    OCCURS                          AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 722.0
                                                 Sets: 2025.0 2035.0
        375.0    ONCHAR                          BUILTIN
        375.0    ONCODE                          BUILTIN
                                                 Refs: 254.0 260.0 267.0
        425.0    ONE                             AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 669.0 704.0
       1613.0    ONEBYTE                         AUTOMATIC CHARACTER(1) UNALIGNED
                                                 Refs: 1656.0 1686.0 1691.0 1703.0 1711.0 1714.0
                                                 Sets: 1649.0 1685.0 1690.0 1702.0 1710.0 1713.0
        375.0    ONLOC                           BUILTIN
                                                 Refs: 254.0 260.0 267.0
        375.0    ONSOURCE                        BUILTIN
                                                 Refs: 254.0 260.0 267.0
                                                 Sets: 1726.0
       1732.0    OPTIONS                         CONSTANT
                                                 ENTRY( BYADDR CHARACTER(255) VARYING UNALIGNED )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 530.0 1803.0
        344.0    OPTN                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 700.0 1739.0
        345.0    OR                              AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 1315.0
                                                 Sets: 544.0
        500.0    OSNAME                          MEMBER IN INFO IN DD CHARACTER(44) UNALIGNED
                                                 Refs: 238.0 1904.0 1919.0
        427.0    OUTFILE                         AUTOMATIC CHARACTER(44) VARYING UNALIGNED
                                                 Refs: 236.0 1051.0 1069.0 1092.0 1110.0
                                                 Sets: 1921.0 1930.0
        428.0    OUTLENGTH                       AUTOMATIC FIXED BIN(15,0)
       1658.0    OUTPUT_RTN                      CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1628.0 1655.0
       1836.0    OUTPUT_RTN                      CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(31,0) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 706.0 1014.0 1025.0 1026.0
        426.0    OVFLO                           AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1958.0
                                                 Sets: 1954.0 1977.0
       1622.0    OVFLOW                          AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 1655.0
        429.0    P                               AUTOMATIC POINTER
                                                 Refs: 452.0 1961.0 1963.0 1966.0 1970.0
                                                 Sets: 1960.0
        430.0    PAGE_KNT                        AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 281.0 298.0 314.0 587.0
                                                 Sets: 314.0
        431.0    PAGE_NUMBER                     CONTROLLED DIM(1:*) FIXED BIN(15,0)
                                                 Refs: 612.0 612.0 612.0 621.0 621.0 628.0 1987.0
                                                 Sets: 587.0
        432.0    PARM                            PARAMETER BYADDR CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 530.0 530.0
        721.0    PARM                            AUTOMATIC CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 737.0 740.0 741.0 742.0 743.0 744.0 746.0 747.0 747.0 747.0 748.0 753.0
                                                       759.0 849.0 855.0
                                                 Sets: 736.0 741.0 742.0 746.0 747.0
       1350.0    PARM                            PARAMETER BYADDR CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 1361.0 1361.0 1362.0 1362.0 1363.0 1493.0
                                                 Sets: 1362.0
       1735.0    PARM                            PARAMETER BYADDR CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 1734.0 1741.0 1743.0 1747.0 1757.0
       1778.0    PARM                            AUTOMATIC CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 1783.0 1785.0 1788.0 1790.0 1790.0 1790.0 1792.0 1793.0 1794.0 1794.0
                                                       1796.0 1798.0 1799.0 1799.0 1800.0 1801.0 1802.0 1803.0
                                                 Sets: 1782.0 1785.0 1788.0 1792.0 1793.0 1796.0 1799.0 1800.0
       1473.0    PARSE_COMMAND                   CONSTANT
                                                 ENTRY( BYADDR CHARACTER(255) UNALIGNED )
                                                 RETURNS( BYADDR BIT(1) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1364.0
        365.0    PDSCOPY                         CONSTANT EXTERNAL FILE STREAM
                                                 Refs: 556.0 1917.0 1920.0
        367.0    PDSLIST                         CONSTANT EXTERNAL FILE STREAM OUTPUT PRINT
                                                 Refs: 277.0 281.0 290.0 298.0 307.0 576.0 578.0 580.0 585.0 595.0 605.0 612.0
                                                       621.0 628.0 633.0 1869.0
          6.0    PDSPROC                         CONSTANT EXTERNAL
                                                 ENTRY( BYADDR CHARACTER(255) VARYING UNALIGNED )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
        434.0    PGSIZE                          AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Refs: 578.0 580.0
        433.0    PHRASE                          AUTOMATIC CHARACTER(255) UNALIGNED
       1249.0    PHRASE                          AUTOMATIC CHARACTER(15) VARYING UNALIGNED
                                                 Refs: 1265.0 1265.0 1267.0 1269.0 1270.0
                                                 Sets: 1264.0
        377.0    PLIRETV                         BUILTIN
                                                 Refs: 794.0 1054.0 1072.0 1095.0 1113.0 1892.0 1897.0 1909.0 1923.0 1951.0
       1604.0    PRESS                           CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(31,0),
                                                        BYADDR CHARACTER(255) VARYING UNALIGNED,
                                                        BYADDR BIT(1) UNALIGNED )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 1036.0 1043.0 1075.0 1082.0 1116.0 1123.0
        346.0    PRINT                           AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 795.0 1873.0
        727.0    PRIOR                           MEMBER IN ARRAY POINTER
                                                 Refs: 1029.0 1040.0 1060.0 1079.0 1101.0 1120.0
        347.0    PROFILE                         AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 641.0
                                                 Sets: 541.0 1893.0
        518.0    PROFILE_AREA                    STRUCTURE AUTOMATIC
        435.0    PTR                             AUTOMATIC POINTER
                                                 Refs: 387.0 1029.0 1040.0 1060.0 1079.0 1101.0 1120.0 1954.0 1977.0
                                                 Sets: 1027.0 1038.0 1058.0 1077.0 1099.0 1118.0 1953.0 1976.0
        358.0    Q                               AUTOMATIC DIM(1:200) BIT(1) UNALIGNED
                                                 Refs: 535.0 535.0 562.0 566.0 729.0 744.0 918.0 980.0 1128.0 1136.0 1184.0
                                                       1191.0 1280.0 1312.0 1370.0 1387.0 1401.0 1469.0 1734.0 1772.0 1801.0
                                                       1840.0 1894.0 1899.0 1910.0 1913.0 1927.0 1967.0 1983.0 1990.0
        436.0    QUOTE                           AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 747.0 865.0 867.0 897.0 899.0 1585.0
       1475.0    QUOTE                           AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 1503.0 1505.0 1510.0 1512.0 1542.0 1543.0 1548.0
        497.0    R_CODE                          MEMBER IN DD FIXED BIN(31,0) INITIAL
                                                 Refs: 238.0 1904.0 1919.0 1927.0
        437.0    RBERR                           AUTOMATIC CHARACTER(2) UNALIGNED
        438.0    RC                              DEFINED CHARACTER(1) UNALIGNED
                                                 Refs: 593.0 650.0 678.0
        362.0    READER                          CONSTANT EXTERNAL FILE ENV ( FB RECSIZE ( 80 ) )
                                                 Refs: 1880.0
        503.0    RECFM                           MEMBER IN INFO IN DD CHARACTER(4) UNALIGNED
                                                 Refs: 238.0 1904.0 1905.0 1919.0 1924.0
        439.0    REFERENCE_CHAR                  AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 438.0 1023.0
        348.0    RENUM                           AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 1178.0 1236.0
        376.0    REPEAT                          BUILTIN
                                                 Refs: 1225.0
        440.0    REPLACEMENT                     AUTOMATIC CHARACTER(255) VARYING UNALIGNED INITIAL
                                                 Refs: 918.0 922.0 922.0 922.0 927.0 927.0 932.0 944.0 944.0 949.0 964.0 964.0
                                                       967.0 977.0 977.0 980.0 983.0 992.0 1000.0 1258.0 1258.0 1260.0 1261.0
                                                       1264.0 1281.0 1288.0
                                                 Sets: 887.0 894.0 901.0 908.0 927.0 944.0 964.0 977.0 1258.0
       1351.0    REPLACEMENT                     AUTOMATIC CHARACTER(80) VARYING UNALIGNED
                                                 Refs: 1380.0 1384.0 1412.0 1424.0 1430.0 1440.0 1446.0 1452.0 1460.0
                                                 Sets: 1566.0
        349.0    REWRITE                         AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 540.0 562.0 1029.0 1089.0 1107.0 1663.0
                                                 Sets: 547.0 558.0
        441.0    RIGHT_PAREN                     AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 885.0 922.0
       1305.0    ROW                             PARAMETER BYADDR FIXED BIN(15,0)
                                                 Refs: 1313.0 1314.0 1315.0
        442.0    RTNCODE                         AUTOMATIC FIXED BIN(15,0) INITIAL
                                                 Sets: 1892.0 1897.0 1909.0 1923.0
       1352.0    SCREWEDUP                       AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1386.0 1468.0
                                                 Sets: 1364.0
       1294.0    SET_BIT                         CONSTANT
                                                 ENTRY( BYADDR FIXED BIN(15,0),
                                                        BYADDR FIXED BIN(15,0) )
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 939.0 956.0 1284.0
        350.0    SHOMEM                          AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 750.0 1995.0
        351.0    SHORT                           AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 279.0 543.0 578.0
        352.0    SHORTLST                        AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 562.0 1935.0
                                                 Sets: 1893.0
       1353.0    SINGLE                          AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1393.0 1421.0 1436.0
                                                 Sets: 1551.0 1558.0
        443.0    SLASH                           AUTOMATIC CHARACTER(1) UNALIGNED INITIAL
                                                 Refs: 1265.0
        444.0    STACK                           CONTROLLED CHARACTER(255) UNALIGNED
                                                 Refs: 2021.0 2025.0 2030.0 2031.0
                                                 Sets: 2022.0
        723.0    START                           AUTOMATIC POINTER
                                                 Refs: 779.0 821.0 921.0 930.0 947.0 963.0 974.0 1017.0 1047.0 1088.0 1179.0
                                                       1237.0 1252.0 1279.0 1382.0
                                                 Sets: 764.0 780.0 822.0 1180.0 1238.0
        466.0    STATUS                          MEMBER IN INFORMATION BIT(8) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
       1620.0    STR_LENGTH                      AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1648.0 1654.0
                                                 Sets: 1647.0
       1155.0    STRING_LENGTH                   AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1171.0 1229.0
                                                 Sets: 1165.0
       1354.0    STRT                            AUTOMATIC FIXED BIN(15,0)
                                                 Refs: 1402.0 1407.0 1408.0
                                                 Sets: 1398.0 1416.0
        376.0    SUBSTR                          BUILTIN
                                                 Refs: 246.0 247.0 248.0 526.0 526.0 526.0 528.0 528.0 528.0 684.0 695.0 700.0
                                                       700.0 737.0 741.0 742.0 743.0 746.0 747.0 749.0 757.0 769.0 772.0 774.0
                                                       800.0 847.0 847.0 849.0 856.0 860.0 862.0 867.0 869.0 874.0 875.0 876.0
                                                       885.0 887.0 892.0 894.0 899.0 901.0 906.0 908.0 922.0 922.0 927.0 944.0
                                                       964.0 977.0 997.0 1000.0 1000.0 1023.0 1160.0 1164.0 1166.0 1197.0 1213.0
                                                       1218.0 1224.0 1225.0 1258.0 1261.0 1264.0 1269.0 1270.0 1288.0 1361.0
                                                       1362.0 1407.0 1412.0 1412.0 1424.0 1424.0 1440.0 1440.0 1446.0 1446.0
                                                       1452.0 1496.0 1505.0 1506.0 1512.0 1513.0 1517.0 1518.0 1524.0 1531.0
                                                       1532.0 1542.0 1548.0 1549.0 1561.0 1562.0 1571.0 1576.0 1577.0 1783.0
                                                       1785.0 1788.0 1790.0 1790.0 1793.0 1794.0 1796.0 1798.0 1799.0 1813.0
                                                       1842.0 1843.0 1851.0 1852.0 1853.0 1854.0 1863.0 1869.0 1875.0 1883.0
                                                       1959.0 1971.0 2005.0 2016.0
       1624.0    SUBSTR                          BUILTIN
                                                 Refs: 1632.0 1634.0 1649.0 1678.0 1680.0 1685.0 1690.0 1691.0 1692.0 1693.0
                                                       1702.0 1704.0 1707.0 1710.0 1711.0 1712.0 1713.0 1715.0 1717.0
       1737.0    SUBSTR                          BUILTIN
                                                 Refs: 1743.0 1747.0 1750.0 1751.0 1757.0 1760.0 1761.0
        445.0    SVCWRK                          AUTOMATIC FIXED BIN(31,0) INITIAL
        372.0    SVC99                           CONSTANT EXTERNAL
                                                 ENTRY
                                                 OPTIONS( ASSEMBLER NODESCRIPTOR RETCODE LINKAGE ( SYSTEM ) )
                                                 Refs: 551.0 793.0 836.0 1053.0 1063.0 1071.0 1085.0 1094.0 1104.0 1112.0 1126.0
                                                       1891.0 1896.0 1907.0 1912.0 1922.0 1950.0
       1611.0    SW_LINE                         AUTOMATIC CHARACTER(256) VARYING UNALIGNED
                                                 Refs: 1643.0 1645.0 1686.0 1703.0 1704.0 1714.0 1715.0
                                                 Sets: 1641.0 1686.0 1703.0 1704.0 1714.0 1715.0
       1154.0    SW_LINE_NUMBER                  AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1177.0 1234.0
                                                 Sets: 1161.0 1198.0
       1619.0    SW_LINE_NUMBER                  AUTOMATIC FIXED BIN(31,0)
        369.0    SYSIN                           CONSTANT EXTERNAL FILE STREAM
                                                 Refs: 271.0 569.0 686.0 708.0 2007.0 2023.0
        368.0    SYSOUT                          CONSTANT EXTERNAL FILE STREAM
                                                 Refs: 1883.0
        370.0    SYSPRINT                        CONSTANT EXTERNAL FILE STREAM
                                                 Refs: 229.0 235.0 236.0 237.0 238.0 246.0 247.0 248.0 254.0 260.0 262.0 267.0
                                                       269.0 405.0 535.0 536.0 562.0 566.0 652.0 714.0 729.0 733.0 744.0 750.0
                                                       795.0 918.0 980.0 1128.0 1136.0 1168.0 1185.0 1192.0 1194.0 1281.0 1313.0
                                                       1372.0 1380.0 1388.0 1402.0 1469.0 1499.0 1538.0 1545.0 1636.0 1734.0
                                                       1772.0 1801.0 1840.0 1875.0 1968.0 1983.0 1991.0 1997.0
        446.0    TARGET                          AUTOMATIC CHARACTER(255) VARYING UNALIGNED INITIAL
                                                 Refs: 875.0 875.0 876.0 876.0 918.0 924.0 991.0 997.0 1254.0 1254.0 1296.0
                                                       1296.0 1296.0 1296.0
                                                 Sets: 862.0 869.0 874.0 876.0 937.0 954.0
       1355.0    TARGET                          AUTOMATIC CHARACTER(80) VARYING UNALIGNED
                                                 Refs: 1380.0 1383.0 1407.0
                                                 Sets: 1565.0
        353.0    TEST                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 229.0 259.0 266.0 535.0 562.0 562.0 566.0 714.0 729.0 744.0 1136.0 1184.0
                                                       1191.0 1280.0 1312.0 1370.0 1387.0 1401.0 1469.0 1734.0 1772.0 1801.0
                                                       1841.0 1894.0 1899.0 1910.0 1913.0 1927.0 1967.0 1983.0 1990.0
        726.0    TEXT                            MEMBER IN ARRAY CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 932.0 949.0 967.0 980.0 983.0 997.0 1000.0 1000.0 1021.0 1029.0 1036.0
                                                       1040.0 1043.0 1057.0 1060.0 1075.0 1079.0 1082.0 1098.0 1101.0 1116.0
                                                       1120.0 1123.0 1311.0 1388.0 1393.0 1395.0 1404.0 1407.0 1412.0 1412.0
                                                       1423.0 1424.0 1424.0 1427.0 1430.0 1438.0 1440.0 1440.0 1444.0 1446.0
                                                       1446.0 1450.0 1450.0 1452.0 1455.0 1457.0 1460.0
                                                 Sets: 778.0 820.0 1000.0 1175.0 1233.0 1412.0 1424.0 1430.0 1440.0 1446.0 1452.0
                                                       1460.0
        376.0    TIME                            BUILTIN
                                                 Refs: 528.0 528.0 528.0
        447.0    TODAY                           AUTOMATIC CHARACTER(12) UNALIGNED
                                                 Refs: 281.0 298.0
                                                 Sets: 526.0
        377.0    TRANSLATE                       BUILTIN
                                                 Refs: 239.0 244.0
        354.0    TRUE                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 271.0 272.0 541.0 542.0 588.0 592.0 645.0 649.0 811.0 933.0 950.0 1893.0
                                                       1916.0 1937.0
       1142.0    TRUE                            AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1159.0
        456.0    TTR                             MEMBER IN BLOCK_DATA IN BLOCKDATA CHARACTER(3) UNALIGNED
       1614.0    TWOBYTE                         AUTOMATIC CHARACTER(2) UNALIGNED
                                                 Refs: 1649.0 1662.0 1685.0 1690.0 1702.0 1710.0
                                                 Sets: 1648.0 1661.0 1684.0 1689.0 1701.0 1709.0
       1307.0    TXT                             AUTOMATIC CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 1313.0
                                                 Sets: 1311.0
        473.0    TYPE                            MEMBER IN INFORMATION BIT(8) UNALIGNED
                                                 Refs: 237.0 1891.0 1896.0 1912.0
        355.0    UNLOAD                          AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 541.0 1011.0
       1141.0    UNPRESS                         CONSTANT
                                                 ENTRY()
                                                 OPTIONS( LINKAGE ( OPTLINK ) )
                                                 Refs: 804.0
        376.0    UNSPEC                          BUILTIN
                                                 Refs: 800.0 801.0 801.0 1160.0 1164.0 1168.0 1197.0 1213.0 1218.0 1970.0
       1624.0    UNSPEC                          BUILTIN
                                                 Refs: 1648.0 1648.0 1651.0 1651.0 1652.0 1652.0 1661.0 1661.0 1684.0 1689.0
                                                       1689.0 1691.0 1691.0 1701.0 1709.0 1709.0 1711.0 1711.0 1713.0 1713.0
        718.0    UPZKNT                          AUTOMATIC FIXED BIN(31,0)
                                                 Refs: 1176.0 1178.0 1235.0 1236.0
                                                 Sets: 798.0 1176.0 1235.0
        448.0    VALID                           AUTOMATIC CHARACTER(40) UNALIGNED INITIAL
                                                 Refs: 594.0 651.0 1963.0
        450.0    VECTOR                          CONTROLLED FIXED BIN(31,0)
        376.0    VERIFY                          BUILTIN
                                                 Refs: 594.0 651.0 814.0 1529.0 1963.0
        378.0    WHAT_HEX                        AUTOMATIC BIT(16) UNALIGNED
       1478.0    WORD                            AUTOMATIC DIM(1:7) CHARACTER(80) VARYING UNALIGNED
                                                 Refs: 1497.0 1497.0 1536.0 1552.0 1554.0 1557.0 1561.0 1562.0 1565.0 1566.0
                                                       1572.0 1574.0 1576.0 1577.0
                                                 Sets: 1491.0 1496.0 1506.0 1513.0 1516.0 1518.0 1519.0 1527.0 1532.0 1533.0
                                                       1549.0 1569.0 1571.0
       1738.0    WORD                            AUTOMATIC CHARACTER(24) VARYING UNALIGNED
                                                 Refs: 1748.0 1749.0 1750.0 1751.0 1753.0 1758.0 1759.0 1760.0 1761.0 1763.0
                                                 Sets: 1740.0 1747.0 1757.0
       1250.0    WORD1                           AUTOMATIC CHARACTER(15) VARYING UNALIGNED
                                                 Refs: 1271.0
                                                 Sets: 1269.0
       1250.0    WORD2                           AUTOMATIC CHARACTER(15) VARYING UNALIGNED
                                                 Refs: 1272.0
                                                 Sets: 1270.0
        475.0    WORK                            STRUCTURE AUTOMATIC
                                                 Refs: 551.0 793.0 836.0 1053.0 1063.0 1071.0 1085.0 1094.0 1104.0 1112.0 1126.0
                                                       1891.0 1896.0 1907.0 1912.0 1922.0 1950.0
       1606.0    WORK                            PARAMETER BYADDR CHARACTER(255) VARYING UNALIGNED
                                                 Refs: 1631.0 1632.0 1634.0
        477.0    WRKAREA                         MEMBER IN WORK CHARACTER(2000) UNALIGNED
                                                 Refs: 239.0 244.0 246.0 551.0 793.0 836.0 1053.0 1063.0 1071.0 1085.0 1094.0
                                                       1104.0 1112.0 1126.0 1891.0 1896.0 1907.0 1912.0 1922.0 1950.0
        476.0    WRKLENGTH                       MEMBER IN WORK FIXED BIN(31,0) INITIAL
                                                 Refs: 551.0 793.0 836.0 1053.0 1063.0 1071.0 1085.0 1094.0 1104.0 1112.0 1126.0
                                                       1891.0 1896.0 1907.0 1912.0 1922.0 1950.0
        356.0    WYLBUR                          AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 1089.0 1107.0 1274.0 1365.0 1847.0
                                                 Sets: 1159.0
        357.0    WYLFMT                          AUTOMATIC BIT(1) UNALIGNED INITIAL
                                                 Refs: 545.0 562.0 1018.0 1032.0 1048.0 1066.0
                                                 Sets: 1924.0
        233.0    ZONES                           AUTOMATIC CHARACTER(2000) UNALIGNED
                                                 Refs: 247.0
                                                 Sets: 239.0
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    37
 -                   Unreferenced Identifiers
 0     Line.File Identifier
 0     1146.0    BIT16
       1147.0    BIT24
       1616.0    BIT32
        384.0    BLK_OVFLOW
        388.0    CN
        395.0    DIRECTORY
       1474.0    DOUBLEQUOTE
        399.0    EIGHTY
        400.0    ERR
        401.0    ERRCODE
       1143.0    FALSE
        716.0    J
       1623.0    J
       1777.0    J
       1808.0    J
       1837.0    J
       1156.0    K
       1295.0    K
       1623.0    K
       1669.0    K
       1777.0    K
       1808.0    K
       1837.0    K
       1156.0    L
       1295.0    L
       1777.0    L
       1808.0    L
       1837.0    L
        411.0    LENTH
       1348.0    LINE_OVFLO
       1295.0    LM
       1295.0    M
       1623.0    M
       1669.0    M
       1777.0    M
        420.0    MINUS3
       1144.0    MORE
       1295.0    N
       1669.0    N
       1777.0    N
       1837.0    N
        428.0    OUTLENGTH
        433.0    PHRASE
        518.0    PROFILE_AREA
        437.0    RBERR
        445.0    SVCWRK
       1619.0    SW_LINE_NUMBER
        450.0    VECTOR
        378.0    WHAT_HEX
 15655-PL6  IBM(R) Enterprise PL/I for z/OS                                                      2024.05.11 01:45:04   Page    38
 -                    Aggregate Length Table
 0     Line.File Dims     Offset   Total Size    Base Size  Identifier
 -      358.0     1            0           25         0(1)  Q
 0      412.0     1            0          255            1  LINE
 0      452.0                  0           62           62  BLOCKDATA
                               0                         2   BLOCKSIZE
                               2           60           60   BLOCK_DATA
                               2                         8    MEMBR
                              10                         3    TTR
                              13                         1    JUNK
                              14                         5    FILLER
                              19                         3    JULIAN_DATE
                              22                        40    FILLER2
 0      462.0                  0           70           70  INFORMATION
                               0                         8   DD_NAME
                               8                        44   DSN
                              52                         8   MEMBER
                              60                         1   STATUS
                              61                         1   NORM_DISP
                              62                         1   COND_DISP
                              63                         2   DSORG
                              65                         2   LIMIT
                              67                         1   ATTRIBUTE
                              68                         1   LAST_ENTRY
                              69                         1   TYPE
 0      475.0                  0         2004         2004  WORK
                               0                         4   WRKLENGTH
                               4                      2000   WRKAREA
 0      479.0                  0           97           97  ALLOC_DATA
                               0                         3   ALLOC_DD
                               3                         9   ALLOC_DDN
                              12                         4   ALLOC_DSN
                              16                        80   ALLOC_DSNAME
                              96                         1   ALLOC_SGN
 0      486.0                  0          112          112  MEMBER_DATA
                               0                         3   MEMBER_DD
                               3                         9   MEMBER_DDN
                              12                         4   MEMBER_DSN
                              16                        80   MEMBER_DSNAME
                              96                         7   MEMBER_MEMBR
                             103                         8   MEMBER_NAM
                             111                         1   MEMBER_SGN
 0      496.0                  0           80           80  DD
                               0                         4   R_CODE
                               4                         8   DDN
                              12           68           68   INFO
                              12                        44    OSNAME
                              56                         8    MEMBER
                              64                         2    DSORG
                              66                         4    RECFM
                              70                         2    LRECL
                              72                         2    BLKSIZE
                              74                         1    CATALOGED
                              75                         5    CREATED
 0      518.0                  0           34           34  PROFILE_AREA
                               0                         4   FILL1
                               4                         8   JOBNAME
                              12                         8   FILL2
                              20                         8   FILL3
                              28                         6   FILL4
 0      719.0     1            0          255            1  LINE
 0      724.0                  0          272          272  ARRAY
                               0                         4   LINE_NUMBER
                               4                       257   TEXT
                             261                         3   /* padding */
                             264                         4   NEXT
                             268                         4   PRIOR
 0     1476.0     1            0          255            1  CMD
 0     1478.0     1            0          574           82  WORD
 15655-PL6  IBM(R) Enterprise PL/I for z/OS  6.1      (Built:20230320)                           2024.05.11 01:45:04   Page     1
 - Compiler Messages
 0 Message       Line.File Message Description
 0 IBM2670I W       6.0    The parameter to MAIN should be declared as CHAR(*) VARYING.
   IBM2659I W     518.0    Generated code would be better if all the INITIAL attributes in the declare for PROFILE_AREA
                           were changed to VALUE.
   IBM1200I W     526.0    Use of DATE built-in function may cause problems.
   IBM1200I W     526.0    Use of DATE built-in function may cause problems.
   IBM1200I W     526.0    Use of DATE built-in function may cause problems.
   IBM1085I W    1192.0    LINE may be unset when used.
   IBM1085I W    1380.0    TARGET may be unset when used.
   IBM1085I W    1380.0    REPLACEMENT may be unset when used.
   IBM1206I W    1661.0    BIT operators should be applied only to BIT operands.
 - File Reference Table
 0   File    Included From  Name
 0      0                   AVL.IBAGROUP.PLI(MACROS)
 - Component    Return Code    Messages (Total/Suppressed)    Time
 0 Compiler         4               53  /  44                 13 secs
 0 End of compilation of PDSPROC
 