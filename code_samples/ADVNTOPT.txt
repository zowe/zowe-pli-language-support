15655-PL6  IBM(R) Enterprise PL/I for z/OS  6.1      (Built:20230320)                           2024.05.15 10:50:07   Page     1
-                     Options Specified
0  Install:
0  Command: SOURCE
0  Install:
15655-PL6  IBM(R) Enterprise PL/I for z/OS   /* ADVENTURES                                      2024.05.15 10:50:07   Page     2
0 Compiler Source
0    Line.File
0       1.0       /* ADVENTURES                                                          00010000
        2.0                                                                              00020000
        3.0         CURRENT LIMITS:                                                      00030000
        4.0             9650 WORDS OF MESSAGE TEXT (LINES, LINSIZ).                      00040000
        5.0              750 TRAVEL OPTIONS (TRAVEL, TRVSIZ).                            00050000
        6.0              300 VOCABULARY WORDS (KTAB, ATAB, TABSIZ).                      00060000
        7.0              150 LOCATIONS (LTEXT, STEXT, KEY, COND, ABB, ATLOC, LOCSIZ).    00070000
        8.0              100 OBJECTS (PLAC, PLACE, FIXD, FIXED, LINK (TWICE), PTEXT,     00080000
        9.0                          PROP).                                              00090000
       10.0               35 "ACTION" VERBS (ACTSPK, VRBSIZ).                            00100000
       11.0              205 RANDOM MESSAGES (RTEXT, RTXSIZ).                            00110000
       12.0               12 DIFFERENT PLAYER CLASSIFICATIONS (CTEXT, CVAL, CLSMAX).     00120000
       13.0               20 HINTS, LESS 3 (HINTLC, HINTED, HINTS, HNTSIZ).              00130000
       14.0               35 MAGIC MESSAGES (MTEXT, MAGSIZ).                             00140000
       15.0                                                                              00150000
       16.0         THERE ARE ALSO LIMITS WHICH CANNOT BE EXCEEDED DUE TO THE            00160000
       17.0         STRUCTURE OF THE DATABASE.  (E.G., THE VOCABULARY USES               00170000
       18.0         N/1000 TO DETERMINE WORD TYPE, SO THERE CAN'T BE MORE                00180000
       19.0         THAN 1000 WORDS.) THESE UPPER LIMITS ARE:                            00190000
       20.0                                                                              00200000
       21.0              1000 NON-SYNONYMOUS VOCABULARY WORDS                            00210000
       22.0              300 LOCATIONS                                                   00220000
       23.0              100 OBJECTS                                                     00230000
       24.0       */                                                                     00240000
       25.0                                                                              00250000
       26.0    1                                                                         00260000
       27.0      /* (SUBSCRIPTRANGE,STRINGRANGE):  */                                    00270000
       28.0      ADVENT: PROC OPTIONS (MAIN);                                            00280000
       29.0                                                                              00290000
       30.0            DCL  CAVES        FILE INPUT;                                     00300000
       31.0                                                                              00310000
       32.0            DCL TREAD ENTRY (CHAR(133),FIXED BIN(31),CHAR(133),               00320000
       33.0                    FIXED BIN(31),FIXED BIN(31)) OPTIONS (ASM INTER);         00330000
       34.0                                                                              00340000
       35.0            DCL TWRITE ENTRY (CHAR(133),FIXED BIN(31),FIXED BIN(31))          00350000
       36.0                    OPTIONS (ASM INTER);                                      00360000
       37.0                                                                              00370000
       38.0            DCL RANDU ENTRY (FIXED BIN(31),FIXED BIN(31),FLOAT BIN(31))       00380000
       39.0                    OPTIONS (ASM INTER);                                      00390000
       40.0                                                                              00400000
       41.0            DCL ITIME ENTRY (FIXED BIN(31)) OPTIONS (ASM INTER);              00410000
       42.0                                                                              00420000
       43.0              DCL 1 TXTCOM STATIC,                                            00430000
       44.0                    2 RTEXT(205) FIXED BIN(31),                               00440000
       45.0                    2 LINES(9650) CHAR(5);                                    00450000
       46.0                                                                              00460000
       47.0              DCL 1 BLKCOM STATIC,                                            00470000
       48.0                    2 BLKLIN BIT(1) INIT ('1'B);                              00480000
       49.0                                                                              00490000
       50.0              DCL 1 PTXCOM STATIC,                                            00500000
       51.0                    2 PTEXT(100) FIXED BIN(31);                               00510000
       52.0                                                                              00520000
       53.0              DCL 1 VOCCOM STATIC,                                            00530000
       54.0                    2 KTAB(300) FIXED BIN(31),                                00540000
       55.0                    2 ATAB(300) CHAR(5),                                      00550000
       56.0                    2 TABSIZ FIXED BIN(31) INIT(300);                         00560000
       57.0                                                                              00570000
       58.0              DCL 1 PLACOM STATIC,                                            00580000
       59.0                    2 ATLOC(150) FIXED BIN(31),                               00590000
       60.0                    2 LINK(200) FIXED BIN(31),                                00600000
       61.0                    2 PLACE(100) FIXED BIN(31),                               00610000
       62.0                    2 FIXED(100) FIXED BIN(31),                               00620000
       63.0                    2 HOLDNG FIXED BIN(31);                                   00630000
       64.0                                                                              00640000
       65.0              DCL 1 ABBCOM STATIC,                                            00650000
       66.0                    2 ABB(150) FIXED BIN(31);                                 00660000
       67.0                                                                              00670000
       68.0                                                                              00680000
       69.0               DCL PICWORD PICTURE 'S9999' STATIC;                            00690000
       70.0                                                                              00700000
       71.0    1   DCL 1  ADVARS STATIC,                                                 00710000
       72.0            2  ABBNUM       FIXED BIN(31)  INIT(0),                           00720000
       73.0            2  IX           FIXED BIN(31)  INIT (65549),                      00730000
       74.0            2  IY           FIXED BIN(31)  INIT(0),                           00740000
       75.0            2  Y            FLOAT BIN(31) ,                                   00750000
       76.0            2  AXE          FIXED BIN(31)  INIT(0),                           00760000
       77.0            2  BACK         FIXED BIN(31)  INIT(0),                           00770000
       78.0            2  BATTER       FIXED BIN(31)  INIT(0),                           00780000
       79.0            2  BEAR         FIXED BIN(31)  INIT(0),                           00790000
       80.0            2  BIRD         FIXED BIN(31)  INIT(0),                           00800000
       81.0            2  BONUS        FIXED BIN(31)  INIT(0),                           00810000
       82.0            2  BOTTLE       FIXED BIN(31)  INIT(0),                           00820000
       83.0            2  CAGE         FIXED BIN(31)  INIT(0),                           00830000
       84.0            2  CAVE         FIXED BIN(31)  INIT(0),                           00840000
       85.0            2  CCODE        FIXED BIN(31)  INIT(0),                           00850000
       86.0                                                                              00860000
       87.0            2  CHAIN        FIXED BIN(31)  INIT(0),                           00870000
       88.0            2  CHASM        FIXED BIN(31)  INIT(0),                           00880000
       89.0            2  CHEST        FIXED BIN(31)  INIT(0),                           00890000
       90.0            2  CHLOC        FIXED BIN(31)  INIT(0),                           00900000
       91.0            2  CHLOC2       FIXED BIN(31)  INIT(0),                           00910000
       92.0            2  CLAM         FIXED BIN(31)  INIT(0),                           00920000
       93.0            2  CLOCK1       FIXED BIN(31)  INIT(0),                           00930000
       94.0            2  CLOCK2       FIXED BIN(31)  INIT(0),                           00940000
       95.0            2  CLSSES       FIXED BIN(31)  INIT(0),                           00950000
       96.0            2  CLSSIZ       FIXED BIN(31)  INIT(12),                          00960000
       97.0            2  COINS        FIXED BIN(31)  INIT(0),                           00970000
       98.0            2  DALTLC       FIXED BIN(31)  INIT(0),                           00980000
       99.0            2  DETAIL       FIXED BIN(31)  INIT(0),                           00990000
      100.0            2  DFLAG        FIXED BIN(31)  INIT(0),                           01000000
      101.0            2  DKILL        FIXED BIN(31)  INIT(0),                           01010000
      102.0            2  DOOR         FIXED BIN(31)  INIT(0),                           01020000
      103.0            2  DPRSSN       FIXED BIN(31)  INIT(0),                           01030000
      104.0            2  DRAGON       FIXED BIN(31)  INIT(0),                           01040000
      105.0            2  DTOTAL       FIXED BIN(31)  INIT(0),                           01050000
      106.0            2  DWARF        FIXED BIN(31)  INIT(0),                           01060000
      107.0            2  EGGS         FIXED BIN(31)  INIT(0),                           01070000
      108.0            2  EMRALD       FIXED BIN(31)  INIT(0),                           01080000
      109.0            2  ENTRNC       FIXED BIN(31)  INIT(0),                           01090000
      110.0            2  FIND         FIXED BIN(31)  INIT(0),                           01100000
      111.0            2  FISSUR       FIXED BIN(31)  INIT(0),                           01110000
      112.0            2  FOO          FIXED BIN(31)  INIT(0),                           01120000
      113.0            2  FOOBAR       FIXED BIN(31)  INIT(0),                           01130000
      114.0            2  FOOD         FIXED BIN(31)  INIT(0),                           01140000
      115.0            2  FROM         FIXED BIN(31)  INIT(0),                           01150000
      116.0            2  GRATE        FIXED BIN(31)  INIT(0),                           01160000
      117.0                                                                              01170000
      118.0            2  HINTLC(20)   FIXED BIN(31)  INIT((20)0),                       01180000
      119.0            2  HNTMAX       FIXED BIN(31)  INIT(0),                           01190000
      120.0                                                                              01200000
      121.0            2  INLEN        FIXED BIN(31)  INIT(0),                           01210000
      122.0            2  INSTR        CHAR(133) ,                                       01220000
      123.0            2  INVENT       FIXED BIN(31)  INIT(0),                           01230000
      124.0            2  IWEST        FIXED BIN(31)  INIT(0),                           01240000
      125.0                                                                              01250000
      126.0            2  JUNK1        CHAR(5) ,                                         01260000
      127.0            2  JUNK2        CHAR(5) ,                                         01270000
      128.0            2  JUNK3        CHAR(5) ,                                         01280000
      129.0                                                                              01290000
      130.0            2  KEYS         FIXED BIN(31)  INIT(0),                           01300000
      131.0            2  KK           FIXED BIN(31)  INIT(0),                           01310000
      132.0            2  KKWORD       CHAR(2) ,                                         01320000
      133.0            2  KNFLOC       FIXED BIN(31)  INIT(0),                           01330000
      134.0            2  KNIFE        FIXED BIN(31)  INIT(0),                           01340000
      135.0            2  KQ           FIXED BIN(31)  INIT(0),                           01350000
      136.0            2  K2           FIXED BIN(31)  INIT(0),                           01360000
      137.0                                                                              01370000
      138.0            2  LAMP         FIXED BIN(31)  INIT(0),                           01380000
      139.0            2  LIMIT        FIXED BIN(31)  INIT(0),                           01390000
      140.0            2  LINUSE       FIXED BIN(31)  INIT(0),                           01400000
      141.0            2  LL           FIXED BIN(31)  INIT(0),                           01410000
      142.0            2  LOC          FIXED BIN(31)  INIT(0),                           01420000
      143.0            2  LOCK         FIXED BIN(31)  INIT(0),                           01430000
      144.0            2  LOOK         FIXED BIN(31)  INIT(0),                           01440000
      145.0            2  M            FIXED BIN(31)  INIT(0),                           01450000
      146.0            2  MAGZIN       FIXED BIN(31)  INIT(0),                           01460000
      147.0            2  MAXDIE       FIXED BIN(31)  INIT(0),                           01470000
      148.0            2  MAXTRS       FIXED BIN(31)  INIT(0),                           01480000
      149.0            2  MESSAG       FIXED BIN(31)  INIT(0),                           01490000
      150.0            2  MIRROR       FIXED BIN(31)  INIT(0),                           01500000
      151.0            2  MXSCOR       FIXED BIN(31)  INIT(0),                           01510000
      152.0            2  NEWLOC       FIXED BIN(31)  INIT(0),                           01520000
      153.0            2  NUGGET       FIXED BIN(31)  INIT(0),                           01530000
      154.0            2  NULLX        FIXED BIN(31)  INIT(0),                           01540000
      155.0            2  NUMDIE       FIXED BIN(31)  INIT(0),                           01550000
      156.0                                                                              01560000
      157.0            2  OIL          FIXED BIN(31)  INIT(0),                           01570000
      158.0            2  OLDLC2       FIXED BIN(31)  INIT(0),                           01580000
      159.0            2  OLDLOC       FIXED BIN(31)  INIT(0),                           01590000
      160.0            2  OUTSTR       CHAR(133) VAR ,                                   01600000
      161.0            2  OYSTER       FIXED BIN(31)  INIT(0),                           01610000
      162.0            2  PEARL        FIXED BIN(31)  INIT(0),                           01620000
      163.0            2  PILLOW       FIXED BIN(31)  INIT(0),                           01630000
      164.0            2  PLANT        FIXED BIN(31)  INIT(0),                           01640000
      165.0            2  PLANT2       FIXED BIN(31)  INIT(0),                           01650000
      166.0            2  POSN         FIXED BIN(31)  INIT(0),                           01660000
      167.0            2  PYRAM        FIXED BIN(31)  INIT(0),                           01670000
      168.0            2  REPLY        CHAR(5) ,                                         01680000
      169.0            2  ROD          FIXED BIN(31)  INIT(0),                           01690000
      170.0            2  ROD2         FIXED BIN(31)  INIT(0),                           01700000
      171.0            2  RUG          FIXED BIN(31)  INIT(0),                           01710000
      172.0            2  SAY          FIXED BIN(31)  INIT(0),                           01720000
      173.0            2  SCORE        FIXED BIN(31)  INIT(0),                           01730000
      174.0            2  SECT         FIXED BIN(31)  INIT(0),                           01740000
      175.0            2  SNAKE        FIXED BIN(31)  INIT(0),                           01750000
      176.0            2  SPICES       FIXED BIN(31)  INIT(0),                           01760000
      177.0            2  SPK          FIXED BIN(31)  INIT(0),                           01770000
      178.0            2  STEPS        FIXED BIN(31)  INIT(0),                           01780000
      179.0            2  STICK        FIXED BIN(31)  INIT(0),                           01790000
      180.0            2  TABLET       FIXED BIN(31)  INIT(0),                           01800000
      181.0                                                                              01810000
      182.0            2  TALLY        FIXED BIN(31)  INIT(0),                           01820000
      183.0            2  TALLY2       FIXED BIN(31)  INIT(0),                           01830000
      184.0            2  TEMP         FIXED BIN(31)  INIT(0),                           01840000
      185.0            2  THROW        FIXED BIN(31)  INIT(0),                           01850000
      186.0            2  TRAVEL(750)  FIXED BIN(31)  INIT((750)0),                      01860000
      187.0            2  ATTACK       FIXED BIN(31)  INIT(0),                           01870000
      188.0            2  TRIDNT       FIXED BIN(31)  INIT(0),                           01880000
      189.0            2  TROLL        FIXED BIN(31)  INIT(0),                           01890000
      190.0            2  TROLL2       FIXED BIN(31)  INIT(0),                           01900000
      191.0            2  TRVS         FIXED BIN(31)  INIT(0),                           01910000
      192.0            2  TURNS        FIXED BIN(31)  INIT(0),                           01920000
      193.0            2  VASE         FIXED BIN(31)  INIT(0),                           01930000
      194.0            2  VEND         FIXED BIN(31)  INIT(0),                           01940000
      195.0            2  VERB         FIXED BIN(31)  INIT(0),                           01950000
      196.0            2  WATER        FIXED BIN(31)  INIT(0),                           01960000
      197.0            2  WD1          CHAR(5) ,                                         01970000
      198.0            2  WD1X         CHAR(5) ,                                         01980000
      199.0            2  WD2          CHAR(5) ,                                         01990000
      200.0            2  WD2X         CHAR(5) ,                                         02000000
      201.0            2  WORD         FIXED BIN(31)  INIT(0),                           02010000
      202.0            2  WORDEND      FIXED BIN(31)  INIT(0),                           02020000
      203.0            2  WORDSIZE     FIXED BIN(31)  INIT(0),                           02030000
      204.0            2  WORDSTRT     FIXED BIN(31)  INIT(0),                           02040000
      205.0            2  LTEXT(150)   FIXED BIN(31)  INIT((150)0),                      02050000
      206.0            2  STEXT(150)   FIXED BIN(31)  INIT((150)0),                      02060000
      207.0            2  KEY(150)     FIXED BIN(31)  INIT((150)0),                      02070000
      208.0            2  COND(150)    FIXED BIN(31)  INIT((150)0),                      02080000
      209.0            2  PLAC(100)    FIXED BIN(31)  INIT((100)0),                      02090000
      210.0            2  FIXD(100)    FIXED BIN(31)  INIT((100)0),                      02100000
      211.0            2  PROP(100)    FIXED BIN(31)  INIT((100)0),                      02110000
      212.0            2  ACTSPK(35)   FIXED BIN(31)  INIT((35)0),                       02120000
      213.0            2  CTEXT(12)    FIXED BIN(31)  INIT((12)0),                       02130000
      214.0            2  CVAL(12)     FIXED BIN(31)  INIT((12)0),                       02140000
      215.0            2  HINTS(20,4)  FIXED BIN(31)  INIT((80)0),                       02150000
      216.0            2  HINTED(20)   BIT(1) ,                                          02160000
      217.0            2  TK(20)       FIXED BIN(31) ,                                   02170000
      218.0            2  TKWORD(10)   CHAR(1) ,                                         02180000
      219.0            2  DLOC(6)      FIXED BIN(31) ,                                   02190000
      220.0            2  ODLOC(6)     FIXED BIN(31) ,                                   02200000
      221.0            2  DSEEN(6)     BIT(1) ,                                          02210000
      222.0            2  LINSIZ       FIXED BIN(31) INIT (9650) ,                       02220000
      223.0            2  TRVSIZ       FIXED BIN(31) INIT (750) ,                        02230000
      224.0            2  LOCSIZ       FIXED BIN(31) INIT (150) ,                        02240000
      225.0            2  VRBSIZ       FIXED BIN(31) INIT (35) ,                         02250000
      226.0            2  RTXSIZ       FIXED BIN(31) INIT (205) ,                        02260000
      227.0            2  CLSMAX       FIXED BIN(31) INIT (12) ,                         02270000
      228.0            2  HNTSIZ       FIXED BIN(31) INIT (20) ,                         02280000
      229.0            2  WZDARK       BIT(1) ,                                          02290000
      230.0            2  LMWARN       BIT(1) ,                                          02300000
      231.0            2  CLOSNG       BIT(1) ,                                          02310000
      232.0            2  PANIC        BIT(1) ,                                          02320000
      233.0            2  CLOSED       BIT(1) ,                                          02330000
      234.0            2  GAVEUP       BIT(1) ,                                          02340000
      235.0            2  SCORNG       BIT(1) ,                                          02350000
      236.0            2  LOGON        BIT(1) INIT ('0'B),                               02360000
      237.0            2  YEA          BIT(1) ;                                          02370000
      238.0                                                                              02380000
      239.0           DCL I            FIXED BIN(31)  INIT(0);                           02380001
      240.0           DCL J            FIXED BIN(31)  INIT(0);                           02380002
      241.0           DCL K            FIXED BIN(31)  INIT(0);                           02380003
      242.0           DCL L            FIXED BIN(31)  INIT(0);                           02380004
      243.0           DCL CH           FIXED BIN(31)  INIT(0);                           02380005
      244.0           DCL OBJ          FIXED BIN(31)  INIT(0);                           02380006
      245.0           DCL HINT         FIXED BIN(31)  INIT(0);                           02380007
      246.0           DCL WORD         FIXED BIN(31)  INIT(0);                           02380008
      247.0           DCL TABNDX       FIXED BIN(31)  INIT(0);                           02380009
      248.0                                                                              02380010
      249.0                                                                              02380011
      250.0                                                                              02380005
      251.0    1 /*                                                                      02390000
      252.0                                                                              02400000
      253.0         WZDARK SAYS WHETHER THE LOC HE'S LEAVING WAS DARK                    02410000
      254.0         LMWARN SAYS WHETHER HE'S BEEN WARNED ABOUT LAMP GOING DIM            02420000
      255.0         CLOSNG SAYS WHETHER ITS CLOSING TIME YET                             02430000
      256.0         PANIC SAYS WHETHER HE'S FOUND OUT HE'S TRAPPED IN THE                02440000
      257.0         CAVE                                                                 02450000
      258.0         CLOSED SAYS WHETHER WE'RE ALL THE WAY CLOSED                         02460000
      259.0         GAVEUP SAYS WHETHER HE EXITED VIA "QUIT"                             02470000
      260.0         SCORNG INDICATES TO THE SCORE ROUTINE WHETHER WE'RE DOING            02480000
      261.0         A "SCORE" COMMAND                                                    02490000
      262.0         YEA IS RANDOM YES/NO REPLY                                           02500000
      263.0                                                                              02510000
      264.0       */                                                                     02520000
      265.0                                                                              02530000
      266.0    1 /*  DESCRIPTION OF THE DATABASE FORMAT                                  02540000
      267.0                                                                              02550000
      268.0                                                                              02560000
      269.0         THE DATA FILE CONTAINS SEVERAL SECTIONS.  EACH BEGINS                02570000
      270.0         WITH A LINE CONTAINING A NUMBER IDENTIFYING THE SECTION,             02580000
      271.0         AND ENDS WITH A LINE CONTAINING "-1".                                02590000
      272.0                                                                              02600000
      273.0         SECTION 1:  LONG FORM DESCRIPTIONS.  EACH LINE CONTAINS A            02610000
      274.0             LOCATION NUMBER, A TAB, AND A LINE OF TEXT.  THE SET             02620000
      275.0             OF (NECESSARILY ADJACENT) LINES WHOSE NUMBERS ARE X              02630000
      276.0             FORM THE LONG DESCRIPTION OF LOCATION X.                         02640000
      277.0         SECTION 2:  SHORT FORM DESCRIPTIONS.  SAME FORMAT AS LONG            02650000
      278.0             FORM.  NOT ALL PLACES HAVE SHORT DESCRIPTIONS.                   02660000
      279.0         SECTION 3:  TRAVEL TABLE.  EACH LINE CONTAINS A LOCATION             02670000
      280.0             NUMBER (X), A SECOND LOCATION NUMBER (Y), AND A LIST             02680000
      281.0             OF MOTION NUMBERS (SEE SECTION 4).  EACH MOTION                  02690000
      282.0             REPRESENTS A VERB WHICH WILL GO TO Y IF CURRENTLY AT             02700000
      283.0             X.  Y, IN TURN, IS INTERPRETED AS FOLLOWS.  LET                  02710000
      284.0             M=Y/1000, N=Y MOD 1000.                                          02720000
      285.0                     IF N<=300       IT IS THE LOCATION TO GO TO.             02730000
      286.0                     IF 300<N<=500   N-300 IS USED IN A COMPUTED              02740000
      287.0                                     GOTO TO A SECTION OF SPECIAL             02750000
      288.0                                     CODE.                                    02760000
      289.0                     IF N>500        MESSAGE N-500 FROM SECTION 6             02770000
      290.0                                     IS PRINTED, AND HE STAYS                 02780000
      291.0                                     WHEREVER HE IS.                          02790000
      292.0             MEANWHILE, M SPECIFIES THE CONDITIONS ON THE MOTION.             02800000
      293.0                     IF M=0          IT'S UNCONDITIONAL.                      02810000
      294.0                     IF 0<M<100      IT IS DONE WITH M%                       02820000
      295.0                                     PROBABILITY.                             02830000
      296.0                     IF M=100        UNCONDITIONAL, BUT FORBIDDEN             02840000
      297.0                                     TO DWARVES.                              02850000
      298.0                     IF 100<M<=200   HE MUST BE CARRYING OBJECT               02860000
      299.0                                     M-100.                                   02870000
      300.0                     IF 200<M<=300   MUST BE CARRYING OR IN SAME              02880000
      301.0                                     ROOM                                     02890000
      302.0                                             AS M-200.                        02900000
      303.0                     IF 300<M<=400   PROP(M MOD 100) MUST *NOT* BE            02910000
      304.0                                     0.                                       02920000
      305.0                     IF 400<M<=500   PROP(M MOD 100) MUST *NOT* BE            02930000
      306.0                                     1.                                       02940000
      307.0                     IF 500<M<=600   PROP(M MOD 100) MUST *NOT* BE            02950000
      308.0                                     2, ETC.                                  02960000
      309.0             IF THE CONDITION (IF ANY) IS NOT MET, THEN THE NEXT              02970000
      310.0             *DIFFERENT* "DESTINATION" VALUE IS USED (UNLESS IT               02980000
      311.0             FAILS TO MEET *ITS* CONDITIONS, IN WHICH CASE THE                02990000
      312.0             NEXT IS FOUND, ETC.).  TYPICALLY, THE NEXT DEST WILL             03000000
      313.0             BE FOR ONE OF THE SAME VERBS, SO THAT ITS ONLY USE IS            03010000
      314.0             AS THE ALTERNATE DESTINATION FOR THOSE VERBS.  FOR               03020000
      315.0             INSTANCE:                                                        03030000
      316.0                 15      110022  29      31      34      35      23      43   03040000
      317.0                 15      14      29                                           03050000
      318.0             THIS SAYS THAT, FROM LOC 15, ANY OF THE VERBS 29, 31,            03060000
      319.0             ETC., WILL TAKE HIM TO 22 IF HE'S CARRYING OBJECT 10,            03070000
      320.0             AND OTHERWISE WILL GO TO 14.                                     03080000
      321.0                     11      303008  49                                       03090000
      322.0                     11      9       50                                       03100000
      323.0             THIS SAYS THAT, FROM 11, 49 TAKES HIM TO 8 UNLESS                03110000
      324.0             PROP(3)=0, IN WHICH CASE HE GOES TO 9.  VERB 50 TAKES            03120000
      325.0             HIM TO 9 REGARDLESS OF PROP(3).                                  03130000
      326.0         SECTION 4:  VOCABULARY.  EACH LINE CONTAINS A NUMBER (N),            03140000
      327.0             A TAB, AND A FIVE-LETTER WORD.  CALL M=N/1000.  IF               03150000
      328.0             M=0, THEN THE WORD IS A MOTION VERB FOR USE IN                   03160000
      329.0             TRAVELLING (SEE SECTION 3).  ELSE, IF M=1, THE WORD              03170000
      330.0             IS AN OBJECT.  ELSE, IF M=2, THE WORD IS AN ACTION               03180000
      331.0             VERB (SUCH AS "CARRY" OR "ATTACK").  ELSE, IF M=3,               03190000
      332.0             THE WORD IS A SPECIAL CASE VERB (SUCH AS "DIG") AND N            03200000
      333.0             MOD 1000 IS AN INDEX INTO SECTION 6.  OBJECTS FROM 50            03210000
      334.0             TO (CURRENTLY, ANYWAY) 79 ARE CONSIDERED TREASURES               03220000
      335.0             (FOR PIRATE, CLOSEOUT).                                          03230000
      336.0         SECTION 5:  OBJECT DESCRIPTIONS.  EACH LINE CONTAINS A               03240000
      337.0             NUMBER (N), A TAB, AND A MESSAGE.  IF N IS FROM 1 TO             03250000
      338.0             100, THE MESSAGE IS THE "INVENTORY" MESSAGE FOR                  03260000
      339.0             OBJECT N.  OTHERWISE, N SHOULD BE 000, 100, 200,                 03270000
      340.0             ETC., AND THE MESSAGE SHOULD BE THE DESCRIPTION OF               03280000
      341.0             THE PRECEDING OBJECT WHEN ITS PROP VALUE IS N/100.               03290000
      342.0             THE N/100 IS USED ONLY TO DISTINGUISH MULTIPLE                   03300000
      343.0             MESSAGES FROM MULTI-LINE MESSAGES; THE PROP INFO                 03310000
      344.0             ACTUALLY REQUIRES ALL MESSAGES FOR AN OBJECT TO BE               03320000
      345.0             PRESENT AND CONSECUTIVE.  PROPERTIES WHICH PRODUCE NO            03330000
      346.0             MESSAGE SHOULD BE GIVEN THE MESSAGE ">$<".                       03340000
      347.0         SECTION 6:  ARBITRARY MESSAGES.  SAME FORMAT AS SECTIONS             03350000
      348.0             1, 2, AND 5, EXCEPT THE NUMBERS BEAR NO RELATION TO              03360000
      349.0             ANYTHING (EXCEPT FOR SPECIAL VERBS IN SECTION 4).                03370000
      350.0         SECTION 7:  OBJECT LOCATIONS.  EACH LINE CONTAINS AN                 03380000
      351.0             OBJECT NUMBER AND ITS INITIAL LOCATION (ZERO (OR                 03390000
      352.0             OMITTED) IF NONE).  IF THE OBJECT IS IMMOVABLE, THE              03400000
      353.0             LOCATION IS FOLLOWED BY A "-1".  IF IT HAS TWO                   03410000
      354.0             LOCATIONS (E.G.  THE GRATE) THE FIRST LOCATION IS                03420000
      355.0             FOLLOWED WITH THE SECOND, AND THE OBJECT IS ASSUMED              03430000
      356.0             TO BE IMMOVABLE.                                                 03440000
      357.0         SECTION 8:  ACTION DEFAULTS.  EACH LINE CONTAINS AN                  03450000
      358.0             "ACTION-VERB" NUMBER AND THE INDEX (IN SECTION 6) OF             03460000
      359.0             THE DEFAULT MESSAGE FOR THE VERB.                                03470000
      360.0         SECTION 9:  LIQUID ASSETS, ETC.  EACH LINE CONTAINS A                03480000
      361.0             NUMBER (N) AND UP TO 20 LOCATION NUMBERS.  BIT N                 03490000
      362.0             (WHERE 0 IS THE UNITS BIT) IS SET IN COND(LOC) FOR               03500000
      363.0             EACH LOC GIVEN.  THE COND BITS CURRENTLY ASSIGNED                03510000
      364.0             ARE:                                                             03520000
      365.0                     0       LIGHT                                            03530000
      366.0                     1       IF BIT 2 IS ON:  ON FOR OIL, OFF FOR             03540000
      367.0                             WATER                                            03550000
      368.0                     2       LIQUID ASSET, SEE BIT 1                          03560000
      369.0                     3       PIRATE DOESN'T GO HERE UNLESS                    03570000
      370.0                             FOLLOWING PLAYER                                 03580000
      371.0             OTHER BITS ARE USED TO INDICATE AREAS OF INTEREST TO             03590000
      372.0             "HINT" ROUTINES:                                                 03600000
      373.0                     4       TRYING TO GET INTO CAVE                          03610000
      374.0                     5       TRYING TO CATCH BIRD                             03620000
      375.0                     6       TRYING TO DEAL WITH SNAKE                        03630000
      376.0                     7       LOST IN MAZE                                     03640000
      377.0                     8       PONDERING DARK ROOM                              03650000
      378.0                     9       AT WITT'S END                                    03660000
      379.0             COND(LOC) IS SET TO 2, OVERRIDING ALL OTHER BITS, IF             03670000
      380.0             LOC HAS FORCED MOTION.                                           03680000
      381.0         SECTION 10:  CLASS MESSAGES.  EACH LINE CONTAINS A NUMBER            03690000
      382.0             (N), A TAB, AND A MESSAGE DESCRIBING A CLASSIFICATION            03700000
      383.0             OF PLAYER.  THE SCORING SECTION SELECTS THE                      03710000
      384.0             APPROPRIATE MESSAGE, WHERE EACH MESSAGE IS CONSIDERED            03720000
      385.0             TO APPLY TO PLAYERS WHOSE SCORES ARE HIGHER THAN THE             03730000
      386.0             PREVIOUS N BUT NOT HIGHER THAN THIS N.  NOTE THAT                03740000
      387.0             THESE SCORES PROBABLY CHANGE WITH EVERY MODIFICATION             03750000
      388.0             (AND PARTICULARLY EXPANSION) OF THE PROGRAM.                     03760000
      389.0         SECTION 11:  HINTS.  EACH LINE CONTAINS A HINT NUMBER                03770000
      390.0             (CORRESPONDING TO A COND BIT, SEE SECTION 9), THE                03780000
      391.0             NUMBER OF TURNS HE MUST BE AT THE RIGHT LOC(S) BEFORE            03790000
      392.0             TRIGGERING THE HINT, THE POINTS DEDUCTED FOR TAKING              03800000
      393.0             THE HINT, THE MESSAGE NUMBER (SECTION 6) OF THE                  03810000
      394.0             QUESTION, AND THE MESSAGE NUMBER OF THE HINT.  THESE             03820000
      395.0             VALUES ARE STASHED IN THE "HINTS" ARRAY.  HNTMAX IS              03830000
      396.0             SET TO THE MAX HINT NUMBER (<= HNTSIZ).  NUMBERS 1-3             03840000
      397.0             ARE UNUSABLE SINCE COND BITS ARE OTHERWISE ASSIGNED,             03850000
      398.0             SO 2 IS USED TO REMEMBER IF HE'S READ THE CLUE IN THE            03860000
      399.0             REPOSITORY, AND 3 IS USED TO REMEMBER WHETHER HE                 03870000
      400.0             ASKED FOR INSTRUCTIONS (GETS MORE TURNS, BUT LOSES               03880000
      401.0             POINTS).                                                         03890000
      402.0         SECTION 12:  MAGIC MESSAGES.  IDENTICAL TO SECTION 6                 03900000
      403.0             EXCEPT PUT IN A SEPARATE SECTION FOR EASIER                      03910000
      404.0             REFERENCE.  MAGIC MESSAGES ARE USED BY THE STARTUP,              03920000
      405.0             MAINTENANCE MODE, AND RELATED ROUTINES.                          03930000
      406.0         SECTION 0:  END OF DATABASE.                                         03940000
      407.0                                                                              03950000
      408.0       */                                                                     03960000
      409.0                                                                              03970000
      410.0      ON ERROR BEGIN;                                                         03980000
      411.0         PUT SKIP DATA (ADVARS);                                              03990000
      412.0         END;                                                                 04000000
      413.0                                                                              04010000
      414.0                                                                              04020000
      415.0    1 /*  READ THE DATABASE IF WE HAVE NOT YET DONE SO       */               04030000
      416.0                                                                              04040000
      417.0              PUT STRING (OUTSTR) EDIT ('Initializing...') (A);               04050000
      418.0              CALL LINEOUT;                                                   04060000
      419.0                                                                              04070000
      420.0      /*                                                                      04080000
      421.0         CLEAR OUT THE VARIOUS TEXT-POINTER ARRAYS.  ALL TEXT IS              04090000
      422.0         STORED IN ARRAY LINES; EACH LINE IS PRECEDED BY A WORD               04100000
      423.0         POINTING TO THE NEXT POINTER (I.E.  THE WORD FOLLOWING               04110000
      424.0         THE END OF THE LINE).  THE POINTER IS NEGATIVE IF THIS IS            04120000
      425.0         FIRST LINE OF A MESSAGE.  THE TEXT-POINTER ARRAYS CONTAIN            04130000
      426.0         INDICES OF POINTER-WORDS IN LINES.  STEXT(N) IS SHORT                04140000
      427.0         DESCRIPTION OF LOCATION N.  LTEXT(N) IS LONG DESCRIPTION.            04150000
      428.0         PTEXT(N) POINTS TO MESSAGE FOR PROP(N)=0.  SUCCESSIVE                04160000
      429.0         PROP MESSAGES ARE FOUND BY CHASING POINTERS.  RTEXT                  04170000
      430.0         CONTAINS SECTION 6'S STUFF.  CTEXT(N) POINTS TO A                    04180000
      431.0         PLAYER-CLASS MESSAGE.  MTEXT IS FOR SECTION 12.  WE ALSO             04190000
      432.0         CLEAR COND.  SEE DESCRIPTION OF SECTION 9 FOR DETAILS.               04200000
      433.0       */                                                                     04210000
      434.0                                                                              04220000
      435.0              DO I=1 TO 300;                                                  04230000
      436.0                  IF I <= 100 THEN PTEXT(I)=0;                                04240000
      437.0                  IF I <= RTXSIZ THEN RTEXT(I)=0;                             04250000
      438.0                  IF I <= CLSMAX THEN CTEXT(I)=0;                             04260000
      439.0                  IF I <= LOCSIZ THEN DO;                                     04270000
      440.0                      STEXT(I)=0;                                             04280000
      441.0                      LTEXT(I)=0;                                             04290000
      442.0                      COND(I)=0;                                              04300000
      443.0                      END;                                                    04310000
      444.0                  END;                                                        04320000
      445.0                                                                              04330000
      446.0              KEY=0;                                                          04340000
      447.0              LINUSE=1;                                                       04350000
      448.0              TRVS=1;                                                         04360000
      449.0              CLSSES=1;                                                       04370000
      450.0                                                                              04380000
      451.0      /* START NEW DATA SECTION.  SECT IS THE SECTION NUMBER. */              04390000
      452.0                                                                              04400000
      453.0      L1002:  GET FILE (CAVES) EDIT (SECT) (COL(1),F(8));                     04410000
      454.0              OLDLOC=-1;                                                      04420000
      455.0              PUT STRING (OUTSTR) EDIT ('Reading section #',SECT)             04430000
      456.0                    (A,F(2));                                                 04440000
      457.0              CALL LINEOUT;                                                   04450000
      458.0              SELECT (SECT);                                                  04460000
      459.0                 WHEN (00)  GO TO L1100;        /* (0) */                     04470000
      460.0                 WHEN (01)  GO TO L1004;        /* (1) */                     04480000
      461.0                 WHEN (02)  GO TO L1004;        /* (2) */                     04490000
      462.0                 WHEN (03)  GO TO L1030;        /* (3) */                     04500000
      463.0                 WHEN (04)  GO TO L1040;        /* (4) */                     04510000
      464.0                 WHEN (05)  GO TO L1004;        /* (5) */                     04520000
      465.0                 WHEN (06)  GO TO L1004;        /* (6) */                     04530000
      466.0                 WHEN (07)  GO TO L1050;        /* (7) */                     04540000
      467.0                 WHEN (08)  GO TO L1060;        /* (8) */                     04550000
      468.0                 WHEN (09)  GO TO L1070;        /* (9) */                     04560000
      469.0                 WHEN (10)  GO TO L1004;       /* (10) */                     04570000
      470.0                 WHEN (11)  GO TO L1080;       /* (11) */                     04580000
      471.0                 END;                                                         04590000
      472.0              CALL BUG(9);                                                    04600000
      473.0                                                                              04610000
      474.0      /* SECTIONS 1, 2, 5, 6, 10.  READ MESSAGES AND SET UP POINTERS. */      04620000
      475.0                                                                              04630000
      476.0      L1004:  GET FILE (CAVES) EDIT                                           04640000
      477.0                  (LOC,(LINES(J) DO J=LINUSE+1 TO LINUSE+14),KKWORD)          04650000
      478.0                  (COL(1),F(8),14 A(5),A(2));                                 04660000
      479.0              IF KKWORD ^= ' ' THEN CALL BUG(0);                              04670000
      480.0              IF LOC = -1 THEN GOTO L1002;                                    04680000
      481.0              DO K=1 TO 14;                                                   04690000
      482.0                  KK=LINUSE+15-K;                                             04700000
      483.0                  IF LINES(KK) ^= ' ' THEN GOTO L1007;                        04710000
      484.0                  END;                                                        04720000
      485.0              CALL BUG(1);                                                    04730000
      486.0      L1007:  PICWORD=KK+1;                                                   04740000
      487.0              LINES(LINUSE)=PICWORD;                                          04750000
      488.0              IF LOC = OLDLOC THEN GOTO L1020;                                04760000
      489.0              PICWORD=-LINES(LINUSE);                                         04770000
      490.0              LINES(LINUSE)=PICWORD;                                          04780000
      491.0              IF SECT = 10 THEN GOTO L1012;                                   04790000
      492.0              IF SECT = 6 THEN GOTO L1011;                                    04800000
      493.0              IF SECT = 5 THEN GOTO L1010;                                    04810000
      494.0              IF SECT = 1 THEN GOTO L1008;                                    04820000
      495.0                                                                              04830000
      496.0              STEXT(LOC)=LINUSE;                                              04840000
      497.0              GOTO L1020;                                                     04850000
      498.0                                                                              04860000
      499.0      L1008:  LTEXT(LOC)=LINUSE;                                              04870000
      500.0              GOTO L1020;                                                     04880000
      501.0                                                                              04890000
      502.0      L1010:  IF LOC > 0 & LOC <= 100 THEN PTEXT(LOC)=LINUSE;                 04900000
      503.0              GOTO L1020;                                                     04910000
      504.0                                                                              04920000
      505.0      L1011:  IF LOC > RTXSIZ THEN CALL BUG(6);                               04930000
      506.0              RTEXT(LOC)=LINUSE;                                              04940000
      507.0              GOTO L1020;                                                     04950000
      508.0                                                                              04960000
      509.0      L1012:  CTEXT(CLSSES)=LINUSE;                                           04970000
      510.0              CVAL(CLSSES)=LOC;                                               04980000
      511.0              CLSSES=CLSSES+1;                                                04990000
      512.0                                                                              05000000
      513.0      L1020:  LINUSE=KK+1;                                                    05010000
      514.0              LINES(LINUSE)='-1   ';                                          05020000
      515.0              OLDLOC=LOC;                                                     05030000
      516.0              IF LINUSE+14 > LINSIZ THEN CALL BUG(2);                         05040000
      517.0              GOTO L1004;                                                     05050000
      518.0                                                                              05060000
      519.0    1 /*                                                                      05070000
      520.0         THE STUFF FOR SECTION 3 IS ENCODED HERE.  EACH                       05080000
      521.0         "FROM-LOCATION" GETS A CONTIGUOUS SECTION OF THE "TRAVEL"            05090000
      522.0         ARRAY.  EACH ENTRY IN TRAVEL IS NEWLOC*1000 + KEYWORD                05100000
      523.0         (FROM SECTION 4, MOTION VERBS), AND IS NEGATED IF THIS IS            05110000
      524.0         THE LAST ENTRY FOR THIS LOCATION.  KEY(N) IS THE INDEX IN            05120000
      525.0         TRAVEL OF THE FIRST OPTION AT LOCATION N.                            05130000
      526.0      */                                                                      05140000
      527.0                                                                              05150000
      528.0      L1030:  GET FILE (CAVES) EDIT                                           05160000
      529.0                   (LOC,NEWLOC,(TK(I) DO I=1 TO 8)) (COL(1),10 F(8));         05170000
      530.0              IF LOC = -1 THEN GOTO L1002;                                    05180000
      531.0              IF KEY(LOC) ^= 0 THEN GOTO L1033;                               05190000
      532.0              KEY(LOC)=TRVS;                                                  05200000
      533.0              GOTO L1035;                                                     05210000
      534.0      L1033:  TRAVEL(TRVS-1)=-TRAVEL(TRVS-1);                                 05220000
      535.0      L1035:  DO L=1 TO 8;                                                    05230000
      536.0                  IF TK(L) = 0 THEN GOTO L1039;                               05240000
      537.0                  TRAVEL(TRVS)=NEWLOC*1000+TK(L);                             05250000
      538.0                  TRVS=TRVS+1;                                                05260000
      539.0                  IF TRVS = TRVSIZ THEN CALL BUG(3);                          05270000
      540.0                  END;                                                        05280000
      541.0                                                                              05290000
      542.0      L1039:  TRAVEL(TRVS-1)=-TRAVEL(TRVS-1);                                 05300000
      543.0              GOTO L1030;                                                     05310000
      544.0                                                                              05320000
      545.0      /*                                                                      05330000
      546.0         HERE WE READ IN THE VOCABULARY.  KTAB(N) IS THE WORD                 05340000
      547.0         NUMBER, ATAB(N) IS THE CORRESPONDING WORD.  THE -1 AT THE            05350000
      548.0         END OF SECTION 4 IS LEFT IN KTAB AS AN END-MARKER.  THE              05360000
      549.0         WORDS ARE GIVEN A MINIMAL HASH TO MAKE READING THE                   05370000
      550.0         CORE-IMAGE HARDER.  NOTE THAT '/7-08' HAD BETTER NOT BE              05380000
      551.0         IN THE LIST, SINCE IT COULD HASH TO -1.  (HASHING REMOVED            05390000
      552.0         IN PL/1 VERSION..BRD)                                                05400000
      553.0      */                                                                      05410000
      554.0                                                                              05420000
      555.0      L1040:  DO TABNDX=1 TO TABSIZ;                                          05430000
      556.0      L1043:  GET FILE (CAVES) EDIT                                           05440000
      557.0                    (KTAB(TABNDX),ATAB(TABNDX)) (COL(1),F(8),A (5));          05450000
      558.0              IF KTAB(TABNDX) = -1 THEN GOTO L1002;                           05460000
      559.0              END;                                                            05470000
      560.0              CALL BUG(4);                                                    05480000
      561.0                                                                              05490000
      562.0      /*                                                                      05500000
      563.0         READ IN THE INITIAL LOCATIONS FOR EACH OBJECT.  ALSO THE             05510000
      564.0         IMMOVABILITY INFO.  PLAC CONTAINS INITIAL LOCATIONS OF               05520000
      565.0         OBJECTS.  FIXD IS -1 FOR IMMOVABLE OBJECTS (INCLUDING THE            05530000
      566.0         SNAKE), OR = SECOND LOC FOR TWO-PLACED OBJECTS.                      05540000
      567.0      */                                                                      05550000
      568.0                                                                              05560000
      569.0      L1050:  GET FILE (CAVES) EDIT (OBJ,J,K) (COL(1),3 F(8));                05570000
      570.0              IF OBJ = -1 THEN GOTO L1002;                                    05580000
      571.0              PLAC(OBJ)=J;                                                    05590000
      572.0              FIXD(OBJ)=K;                                                    05600000
      573.0              GOTO L1050;                                                     05610000
      574.0                                                                              05620000
      575.0      /* READ DEFAULT MESSAGE NUMBERS FOR ACTION VERBS, STORE IN              05630000
      576.0         ACTSPK.  */                                                          05640000
      577.0                                                                              05650000
      578.0      L1060:  GET FILE (CAVES) EDIT (VERB,J) (COL(1),2 F(8));                 05660000
      579.0              IF VERB = -1 THEN GOTO L1002;                                   05670000
      580.0              ACTSPK(VERB)=J;                                                 05680000
      581.0              GOTO L1060;                                                     05690000
      582.0                                                                              05700000
      583.0      /* READ INFO ABOUT AVAILABLE LIQUIDS AND OTHER CONDITIONS,              05710000
      584.0         STORE IN COND.  */                                                   05720000
      585.0                                                                              05730000
      586.0      L1070:  GET FILE (CAVES) EDIT (K,(TK(I) DO I=1 TO 9))                   05740000
      587.0                   (COL(1),10 F(8));                                          05750000
      588.0              IF K = -1 THEN GOTO L1002;                                      05760000
      589.0              DO I=1 TO 9;                                                    05770000
      590.0                  LOC=TK(I);                                                  05780000
      591.0                  IF LOC = 0 THEN GOTO L1070;                                 05790000
      592.0                  IF BITSET(LOC,K) THEN CALL BUG(8);                          05800000
      593.0                  COND(LOC)=COND(LOC)+2**K;                                   05810000
      594.0                  END;                                                        05820000
      595.0              GOTO L1070;                                                     05830000
      596.0                                                                              05840000
      597.0      /* READ DATA FOR HINTS. */                                              05850000
      598.0                                                                              05860000
      599.0      L1080:  HNTMAX=0;                                                       05870000
      600.0      L1081:  GET FILE (CAVES) EDIT (K,(TK(I) DO I=1 TO 4))                   05880000
      601.0                   (COL(1),5 F(8));                                           05890000
      602.0              IF K = -1 THEN GOTO L1002;                                      05900000
      603.0              IF K = 0 THEN GOTO L1081;                                       05910000
      604.0              IF K < 0 | K > HNTSIZ THEN CALL BUG(7);                         05920000
      605.0              DO I=1 TO 4;                                                    05930000
      606.0                  HINTS(K,I)=TK(I);                                           05940000
      607.0                  END;                                                        05950000
      608.0              HNTMAX=MAX(HNTMAX,K);                                           05960000
      609.0              GOTO L1081;                                                     05970000
      610.0    1 /*                                                                      05980000
      611.0         FINISH CONSTRUCTING INTERNAL DATA FORMAT                             05990000
      612.0                                                                              06000000
      613.0         HAVING READ IN THE DATABASE, CERTAIN THINGS ARE NOW                  06010000
      614.0         CONSTRUCTED.  PROPS ARE SET TO ZERO.  WE FINISH SETTING              06020000
      615.0         UP COND BY CHECKING FOR FORCED-MOTION TRAVEL ENTRIES.                06030000
      616.0         THE PLAC AND FIXD ARRAYS ARE USED TO SET UP ATLOC(N) AS              06040000
      617.0         THE FIRST OBJECT AT LOCATION N, AND LINK(OBJ) AS THE NEXT            06050000
      618.0         OBJECT AT THE SAME LOCATION AS OBJ.  (OBJ>100 INDICATES              06060000
      619.0         THAT FIXED(OBJ-100)=LOC; LINK(OBJ) IS STILL THE CORRECT              06070000
      620.0         LINK TO USE.) ABB IS ZEROED; IT CONTROLS WHETHER THE                 06080000
      621.0         ABBREVIATED DESCRIPTION IS PRINTED.  COUNTS MOD 5 UNLESS             06090000
      622.0         "LOOK" IS USED.                                                      06100000
      623.0      */                                                                      06110000
      624.0                                                                              06120000
      625.0      L1100:  DO I=1 TO 100;                                                  06130000
      626.0                  PLACE(I)=0;                                                 06140000
      627.0                  PROP(I)=0;                                                  06150000
      628.0                  LINK(I)=0;                                                  06160000
      629.0                  LINK(I+100)=0;                                              06170000
      630.0                  END;                                                        06180000
      631.0                                                                              06190000
      632.0              DO I=1 TO LOCSIZ;                                               06200000
      633.0              ABB(I)=0;                                                       06210000
      634.0              IF LTEXT(I) = 0 | KEY(I) = 0 THEN GOTO L1102;                   06220000
      635.0              K=KEY(I);                                                       06230000
      636.0              IF MOD(ABS(TRAVEL(K)),1000) = 1 THEN COND(I)=2;                 06240000
      637.0      L1102:  ATLOC(I)=0;                                                     06250000
      638.0              END;                                                            06260000
      639.0                                                                              06270000
      640.0      /*                                                                      06280000
      641.0         SET UP THE ATLOC AND LINK ARRAYS AS DESCRIBED ABOVE.                 06290000
      642.0         WE'LL USE THE DROP SUBROUTINE, WHICH PREFACES NEW OBJECTS            06300000
      643.0         ON THE LISTS.  SINCE WE WANT THINGS IN THE OTHER ORDER,              06310000
      644.0         WE'LL RUN THE LOOP BACKWARDS.  IF THE OBJECT IS IN TWO               06320000
      645.0         LOCS, WE DROP IT TWICE.  THIS ALSO SETS UP "PLACE" AND               06330000
      646.0         "FIXED" AS COPIES OF "PLAC" AND "FIXD".  ALSO, SINCE                 06340000
      647.0         TWO-PLACED OBJECTS ARE TYPICALLY BEST DESCRIBED LAST,                06350000
      648.0         WE'LL DROP THEM FIRST.                                               06360000
      649.0      */                                                                      06370000
      650.0                                                                              06380000
      651.0              DO I=1 TO 100;                                                  06390000
      652.0                  K=101-I;                                                    06400000
      653.0                  IF FIXD(K) > 0 THEN DO;                                     06410000
      654.0                      CALL DROP(K+100,FIXD(K));                               06420000
      655.0                      CALL DROP(K,PLAC(K));                                   06430000
      656.0                      END;                                                    06440000
      657.0                  END;                                                        06450000
      658.0                                                                              06460000
      659.0              DO I=1 TO 100;                                                  06470000
      660.0                  K=101-I;                                                    06480000
      661.0                  FIXED(K)=FIXD(K);                                           06490000
      662.0                  IF PLAC(K) ^= 0 & FIXD(K) <= 0 THEN CALL DROP(K,PLAC(K));   06500000
      663.0                  END;                                                        06510000
      664.0                                                                              06520000
      665.0      /*                                                                      06530000
      666.0         TREASURES, AS NOTED EARLIER, ARE OBJECTS 50 THROUGH                  06540000
      667.0         MAXTRS (CURRENTLY 79).  THEIR PROPS ARE INITIALLY -1, AND            06550000
      668.0         ARE SET TO 0 THE FIRST TIME THEY ARE DESCRIBED.  TALLY               06560000
      669.0         KEEPS TRACK OF HOW MANY ARE NOT YET FOUND, SO WE KNOW                06570000
      670.0         WHEN TO CLOSE THE CAVE.  TALLY2 COUNTS HOW MANY CAN NEVER            06580000
      671.0         BE FOUND (E.G.  IF LOST BIRD OR BRIDGE).                             06590000
      672.0      */                                                                      06600000
      673.0                                                                              06610000
      674.0              MAXTRS=79;                                                      06620000
      675.0              TALLY=0;                                                        06630000
      676.0              TALLY2=0;                                                       06640000
      677.0              DO I=50 TO MAXTRS;                                              06650000
      678.0                  IF PTEXT(I) ^= 0 THEN PROP(I)=-1;                           06660000
      679.0                  TALLY=TALLY-PROP(I);                                        06670000
      680.0                  END;                                                        06680000
      681.0      /*                                                                      06690000
      682.0         CLEAR THE HINT STUFF.  HINTLC(I) IS HOW LONG HE'S BEEN AT            06700000
      683.0         LOC WITH COND BIT I.  HINTED(I) IS TRUE IFF HINT I HAS               06710000
      684.0         BEEN USED.                                                           06720000
      685.0      */                                                                      06730000
      686.0                                                                              06740000
      687.0              DO  I=1 TO HNTMAX;                                              06750000
      688.0                  HINTED(I)='0'B;                                             06760000
      689.0                  HINTLC(I)=0;                                                06770000
      690.0                  END;                                                        06780000
      691.0                                                                              06790000
      692.0      /* DEFINE SOME HANDY MNEMONICS.  THESE CORRESPOND TO OBJECT             06800000
      693.0         NUMBERS.  */                                                         06810000
      694.0                                                                              06820000
      695.0              KEYS=VOCAB('KEYS',1);                                           06830000
      696.0              LAMP=VOCAB('LAMP',1);                                           06840000
      697.0              GRATE=VOCAB('GRATE',1);                                         06850000
      698.0              CAGE=VOCAB('CAGE',1);                                           06860000
      699.0              ROD=VOCAB('ROD',1);                                             06870000
      700.0              ROD2=ROD+1;                                                     06880000
      701.0              STEPS=VOCAB('STEPS',1);                                         06890000
      702.0              BIRD=VOCAB('BIRD',1);                                           06900000
      703.0              DOOR=VOCAB('DOOR',1);                                           06910000
      704.0              PILLOW=VOCAB('PILLO',1);                                        06920000
      705.0              SNAKE=VOCAB('SNAKE',1);                                         06930000
      706.0              FISSUR=VOCAB('FISSU',1);                                        06940000
      707.0              TABLET=VOCAB('TABLE',1);                                        06950000
      708.0              CLAM=VOCAB('CLAM',1);                                           06960000
      709.0              OYSTER=VOCAB('OYSTE',1);                                        06970000
      710.0              MAGZIN=VOCAB('MAGAZ',1);                                        06980000
      711.0              DWARF=VOCAB('DWARF',1);                                         06990000
      712.0              KNIFE=VOCAB('KNIFE',1);                                         07000000
      713.0              FOOD=VOCAB('FOOD',1);                                           07010000
      714.0              BOTTLE=VOCAB('BOTTL',1);                                        07020000
      715.0              WATER=VOCAB('WATER',1);                                         07030000
      716.0              OIL=VOCAB('OIL',1);                                             07040000
      717.0              PLANT=VOCAB('PLANT',1);                                         07050000
      718.0              PLANT2=PLANT+1;                                                 07060000
      719.0              AXE=VOCAB('AXE',1);                                             07070000
      720.0              MIRROR=VOCAB('MIRRO',1);                                        07080000
      721.0              DRAGON=VOCAB('DRAGO',1);                                        07090000
      722.0              CHASM=VOCAB('CHASM',1);                                         07100000
      723.0              TROLL=VOCAB('TROLL',1);                                         07110000
      724.0              TROLL2=TROLL+1;                                                 07120000
      725.0              BEAR=VOCAB('BEAR',1);                                           07130000
      726.0              MESSAG=VOCAB('MESSA',1);                                        07140000
      727.0              VEND=VOCAB('VENDI',1);                                          07150000
      728.0              BATTER=VOCAB('BATTE',1);                                        07160000
      729.0                                                                              07170000
      730.0      /* OBJECTS FROM 50 THROUGH WHATEVER ARE TREASURES.  HERE ARE            07180000
      731.0         A FEW.  */                                                           07190000
      732.0                                                                              07200000
      733.0              NUGGET=VOCAB('GOLD',1);                                         07210000
      734.0              COINS=VOCAB('COINS',1);                                         07220000
      735.0              CHEST=VOCAB('CHEST',1);                                         07230000
      736.0              EGGS=VOCAB('EGGS',1);                                           07240000
      737.0              TRIDNT=VOCAB('TRIDE',1);                                        07250000
      738.0              VASE=VOCAB('VASE',1);                                           07260000
      739.0              EMRALD=VOCAB('EMERA',1);                                        07270000
      740.0              PYRAM=VOCAB('PYRAM',1);                                         07280000
      741.0              PEARL=VOCAB('PEARL',1);                                         07290000
      742.0              RUG=VOCAB('RUG',1);                                             07300000
      743.0              CHAIN=VOCAB('CHAIN',1);                                         07310000
      744.0                                                                              07320000
      745.0      /* THESE ARE MOTION-VERB NUMBERS. */                                    07330000
      746.0                                                                              07340000
      747.0              BACK=VOCAB('BACK',0);                                           07350000
      748.0              LOOK=VOCAB('LOOK',0);                                           07360000
      749.0              CAVE=VOCAB('CAVE',0);                                           07370000
      750.0              NULLX=VOCAB('NULL',0);                                          07380000
      751.0              ENTRNC=VOCAB('ENTRA',0);                                        07390000
      752.0              DPRSSN=VOCAB('DEPRE',0);                                        07400000
      753.0                                                                              07410000
      754.0      /* AND SOME ACTION VERBS. */                                            07420000
      755.0                                                                              07430000
      756.0              SAY=VOCAB('SAY',2);                                             07440000
      757.0              LOCK=VOCAB('LOCK',2);                                           07450000
      758.0              THROW=VOCAB('THROW',2);                                         07460000
      759.0              FIND=VOCAB('FIND',2);                                           07470000
      760.0              INVENT=VOCAB('INVEN',2);                                        07480000
      761.0                                                                              07490000
      762.0      /*                                                                      07500000
      763.0         INITIALIZE THE DWARVES.  DLOC IS LOC OF DWARVES,                     07510000
      764.0         HARD-WIRED IN.  ODLOC IS PRIOR LOC OF EACH DWARF,                    07520000
      765.0         INITIALLY GARBAGE.  DALTLC IS ALTERNATE INITIAL LOC FOR              07530000
      766.0         DWARF, IN CASE ONE OF THEM STARTS OUT ON TOP OF THE                  07540000
      767.0         ADVENTURER.  (NO 2 OF THE 5 INITIAL LOCS ARE ADJACENT.)              07550000
      768.0         DSEEN IS TRUE IF DWARF HAS SEEN HIM.  DFLAG CONTROLS THE             07560000
      769.0         LEVEL OF ACTIVATION OF ALL THIS:                                     07570000
      770.0              0       NO DWARF STUFF YET (WAIT UNTIL REACHES HALL             07580000
      771.0                      OF MISTS)                                               07590000
      772.0              1       REACHED HALL OF MISTS, BUT HASN'T MET FIRST DWARF       07600000
      773.0              2       MET FIRST DWARF, OTHERS START MOVING, NO                07610000
      774.0                      KNIVES THROWN YET                                       07620000
      775.0              3       A KNIFE HAS BEEN THROWN (FIRST SET ALWAYS               07630000
      776.0                      MISSES)                                                 07640000
      777.0              3+      DWARVES ARE MAD (INCREASES THEIR ACCURACY)              07650000
      778.0         SIXTH DWARF IS SPECIAL (THE PIRATE).  HE ALWAYS STARTS AT            07660000
      779.0         HIS CHEST'S EVENTUAL LOCATION INSIDE THE MAZE.  THIS LOC             07670000
      780.0         IS SAVED IN CHLOC FOR REF.  THE DEAD END IN THE OTHER                07680000
      781.0         MAZE HAS ITS LOC STORED IN CHLOC2.                                   07690000
      782.0      */                                                                      07700000
      783.0                                                                              07710000
      784.0              CHLOC=114;                                                      07720000
      785.0              CHLOC2=140;                                                     07730000
      786.0              DO I=1 TO 6;                                                    07740000
      787.0                  DSEEN(I)='0'B;                                              07750000
      788.0                  END;                                                        07760000
      789.0              DFLAG=0;                                                        07770000
      790.0              DLOC(1)=19;                                                     07780000
      791.0              DLOC(2)=27;                                                     07790000
      792.0              DLOC(3)=33;                                                     07800000
      793.0              DLOC(4)=44;                                                     07810000
      794.0              DLOC(5)=64;                                                     07820000
      795.0              DLOC(6)=CHLOC;                                                  07830000
      796.0              DALTLC=18;                                                      07840000
      797.0                                                                              07850000
      798.0    1 /*                                                                      07860000
      799.0         OTHER RANDOM FLAGS AND COUNTERS, AS FOLLOWS:                         07870000
      800.0              TURNS   TALLIES HOW MANY COMMANDS HE'S GIVEN                    07880000
      801.0                      (IGNORES YES/NO)                                        07890000
      802.0              LIMIT   LIFETIME OF LAMP (NOT SET HERE)                         07900000
      803.0              IWEST   HOW MANY TIMES HE'S SAID "WEST" INSTEAD OF              07910000
      804.0                      "W"                                                     07920000
      805.0              KNFLOC  0 IF NO KNIFE HERE, LOC IF KNIFE HERE, -1               07930000
      806.0                      AFTER CAVEAT                                            07940000
      807.0              DETAIL  HOW OFTEN WE'VE SAID "NOT ALLOWED TO GIVE               07950000
      808.0                      MORE DETAIL"                                            07960000
      809.0              ABBNUM  HOW OFTEN WE SHOULD PRINT NON-ABBREVIATED               07970000
      810.0                      DESCRIPTIONS                                            07980000
      811.0              MAXDIE  NUMBER OF REINCARNATION MESSAGES AVAILABLE              07990000
      812.0                      (UP TO 5)                                               08000000
      813.0              NUMDIE  NUMBER OF TIMES KILLED SO FAR                           08010000
      814.0              HOLDNG  NUMBER OF OBJECTS BEING CARRIED                         08020000
      815.0              DKILL   NUMBER OF DWARVES KILLED (UNUSED IN SCORING,            08030000
      816.0                      NEEDED FOR MSG)                                         08040000
      817.0              FOOBAR  CURRENT PROGRESS IN SAYING "FEE FIE FOE                 08050000
      818.0                      FOO".                                                   08060000
      819.0              BONUS   USED TO DETERMINE AMOUNT OF BONUS IF HE                 08070000
      820.0                      REACHES CLOSING                                         08080000
      821.0              CLOCK1  NUMBER OF TURNS FROM FINDING LAST TREASURE              08090000
      822.0                      TILL CLOSING                                            08100000
      823.0              CLOCK2  NUMBER OF TURNS FROM FIRST WARNING TILL                 08110000
      824.0                      BLINDING FLASH                                          08120000
      825.0              LOGICALS WERE EXPLAINED EARLIER                                 08130000
      826.0      */                                                                      08140000
      827.0                                                                              08150000
      828.0              TURNS=0;                                                        08160000
      829.0              LMWARN='0'B;                                                    08170000
      830.0              IWEST=0;                                                        08180000
      831.0              KNFLOC=0;                                                       08190000
      832.0              DETAIL=0;                                                       08200000
      833.0              ABBNUM=5;                                                       08210000
      834.0              DO I=0 TO 4;                                                    08220000
      835.0                  IF RTEXT(2*I+81) ^= 0 THEN MAXDIE=I+1;                      08230000
      836.0                  END;                                                        08240000
      837.0              NUMDIE=0;                                                       08250000
      838.0              HOLDNG=0;                                                       08260000
      839.0              DKILL=0;                                                        08270000
      840.0              FOOBAR=0;                                                       08280000
      841.0              BONUS=0;                                                        08290000
      842.0              CLOCK1=30;                                                      08300000
      843.0              CLOCK2=50;                                                      08310000
      844.0              CLOSNG='0'B;                                                    08320000
      845.0              PANIC='0'B;                                                     08330000
      846.0              CLOSED='0'B;                                                    08340000
      847.0              GAVEUP='0'B;                                                    08350000
      848.0              SCORNG='0'B;                                                    08360000
      849.0                                                                              08370000
      850.0    1 /* REPORT ON AMOUNT OF ARRAYS ACTUALLY USED, TO PERMIT                  08380000
      851.0         REDUCTIONS. */                                                       08390000
      852.0                                                                              08400000
      853.0                                                                              08410000
      854.0              DO K=1 TO LOCSIZ;                                               08420000
      855.0                  KK=LOCSIZ+1-K;                                              08430000
      856.0                  IF LTEXT(KK) ^= 0 THEN GOTO L1997;                          08440000
      857.0                  END;                                                        08450000
      858.0                                                                              08460000
      859.0              OBJ=0;                                                          08470000
      860.0      L1997:  DO K=1 TO 100;                                                  08480000
      861.0                  IF PTEXT(K) ^= 0 THEN OBJ=OBJ+1;                            08490000
      862.0                  END;                                                        08500000
      863.0                                                                              08510000
      864.0              DO K=1 TO TABNDX;                                               08520000
      865.0                  IF KTAB(K)/1000 = 2 THEN VERB=KTAB(K)-2000;                 08530000
      866.0                  END;                                                        08540000
      867.0                                                                              08550000
      868.0              DO K=1 TO RTXSIZ;                                               08560000
      869.0                  J=RTXSIZ+1-K;                                               08570000
      870.0                  IF RTEXT(J) ^= 0 THEN GOTO L1991;                           08580000
      871.0                  END;                                                        08590000
      872.0                                                                              08600000
      873.0      L1991:  K=100;                                                          08610000
      874.0              CALL LINESKP;                                                   08620000
      875.0              PUT STRING (OUTSTR) EDIT (LINUSE,' of ',LINSIZ,                 08630000
      876.0                  ' words of messages') (F(6),A,F(6),A);                      08640000
      877.0              CALL LINEOUT;                                                   08650000
      878.0              PUT STRING (OUTSTR) EDIT (TRVS,' of ',TRVSIZ,                   08660000
      879.0                  ' travel options') (F(6),A,F(6),A);                         08670000
      880.0              CALL LINEOUT;                                                   08680000
      881.0              PUT STRING (OUTSTR) EDIT (TABNDX,' of ',TABSIZ,                 08690000
      882.0                  ' vocabulary words') (F(6),A,F(6),A);                       08700000
      883.0              CALL LINEOUT;                                                   08710000
      884.0              PUT STRING (OUTSTR) EDIT (KK,' of ',LOCSIZ,                     08720000
      885.0                  ' locations') (F(6),A,F(6),A);                              08730000
      886.0              CALL LINEOUT;                                                   08740000
      887.0              PUT STRING (OUTSTR) EDIT (OBJ,' of ',K,                         08750000
      888.0                  ' objects') (F(6),A,F(6),A);                                08760000
      889.0              CALL LINEOUT;                                                   08770000
      890.0              PUT STRING (OUTSTR) EDIT (VERB,' of ',VRBSIZ,                   08780000
      891.0                  ' action verbs') (F(6),A,F(6),A);                           08790000
      892.0              CALL LINEOUT;                                                   08800000
      893.0              PUT STRING (OUTSTR) EDIT (J,' of ',RTXSIZ,                      08810000
      894.0                  ' rtext messages') (F(6),A,F(6),A);                         08820000
      895.0              CALL LINEOUT;                                                   08830000
      896.0              PUT STRING (OUTSTR) EDIT (CLSSES,' of ',CLSSIZ,                 08840000
      897.0                  ' class messages') (F(6),A,F(6),A);                         08850000
      898.0              CALL LINEOUT;                                                   08860000
      899.0              PUT STRING (OUTSTR) EDIT (HNTMAX,' of ',HNTSIZ,                 08870000
      900.0                  ' hints') (F(6),A,F(6),A);                                  08880000
      901.0              CALL LINEOUT;                                                   08890000
      902.0              CALL LINESKP;                                                   08900000
      903.0                                                                              08910000
      904.0                                                                              08920000
      905.0      /*  FINALLY, SINCE WE'RE CLEARLY SETTING THINGS UP FOR THE              08930000
      906.0         FIRST TIME...  */                                                    08940000
      907.0                                                                              08950000
      908.0              PUT STRING (OUTSTR) EDIT ('Done!') (A);                         08960000
      909.0              CALL LINEOUT;                                                   08970000
      910.0              CALL LINESKP;                                                   08980000
      911.0              CALL LINESKP;                                                   08990000
      912.0                                                                              09000000
      913.0    1 /*  START-UP, DWARF STUFF */                                            09010000
      914.0                                                                              09020000
      915.0      L1:     CALL ITIME(I);                                                  09030000
      916.0              DO J=1 TO I;                                                    09040000
      917.0                 CALL RAN(1);                                                 09050000
      918.0                 END;                                                         09060000
      919.0              I=RAN(1);                                                       09070000
      920.0              HINTED(3)=YES(65,1,0);                                          09080000
      921.0              LOC,NEWLOC=1;                                                   09090000
      922.0              LIMIT=330;                                                      09100000
      923.0              IF HINTED(3) THEN LIMIT=1000;                                   09110000
      924.0                                                                              09120000
      925.0      /*  CAN'T LEAVE CAVE ONCE IT'S CLOSING (EXCEPT BY MAIN OFFICE). */      09130000
      926.0                                                                              09140000
      927.0      L2:     IF NEWLOC >= 9 | NEWLOC = 0 |  ^ CLOSNG THEN GOTO L71;          09150000
      928.0              CALL RSPEAK(130);                                               09160000
      929.0              NEWLOC=LOC;                                                     09170000
      930.0              IF  ^ PANIC THEN CLOCK2=15;                                     09180000
      931.0              PANIC='1'B;                                                     09190000
      932.0                                                                              09200000
      933.0      /*                                                                      09210000
      934.0         SEE IF A DWARF HAS SEEN HIM AND HAS COME FROM WHERE HE               09220000
      935.0         WANTS TO GO.  IF SO, THE DWARF'S BLOCKING HIS WAY.  IF               09230000
      936.0         COMING FROM PLACE FORBIDDEN TO PIRATE (DWARVES ROOTED IN             09240000
      937.0         PLACE) LET HIM GET OUT (AND ATTACKED).                               09250000
      938.0      */                                                                      09260000
      939.0                                                                              09270000
      940.0      L71:    IF NEWLOC = LOC | FORCED(LOC) | BITSET(LOC,3) THEN GOTO L74;    09280000
      941.0              DO I=1 TO 5;                                                    09290000
      942.0                  IF ^ (ODLOC(I) ^= NEWLOC |  ^ DSEEN(I)) THEN DO;            09300000
      943.0                      NEWLOC=LOC;                                             09310000
      944.0                      CALL RSPEAK(2);                                         09320000
      945.0                      GOTO L74;                                               09330000
      946.0                      END;                                                    09340000
      947.0                  END;                                                        09350000
      948.0      L74:    LOC=NEWLOC;                                                     09360000
      949.0                                                                              09370000
      950.0      /*                                                                      09380000
      951.0         DWARF STUFF.  SEE EARLIER COMMENTS FOR DESCRIPTION OF                09390000
      952.0         VARIABLES.  REMEMBER SIXTH DWARF IS PIRATE AND IS THUS               09400000
      953.0         VERY DIFFERENT EXCEPT FOR MOTION RULES.                              09410000
      954.0                                                                              09420000
      955.0         FIRST OFF, DON'T LET THE DWARVES FOLLOW HIM INTO A PIT OR            09430000
      956.0         A WALL.  ACTIVATE THE WHOLE MESS THE FIRST TIME HE GETS              09440000
      957.0         AS FAR AS THE HALL OF MISTS (LOC 15).  IF NEWLOC IS                  09450000
      958.0         FORBIDDEN TO PIRATE (IN PARTICULAR, IF IT'S BEYOND THE               09460000
      959.0         TROLL BRIDGE), BYPASS DWARF STUFF.  THAT WAY PIRATE CAN'T            09470000
      960.0         STEAL RETURN TOLL, AND DWARVES CAN'T MEET THE BEAR.  ALSO            09480000
      961.0         MEANS DWARVES WON'T FOLLOW HIM INTO DEAD END IN MAZE, BUT            09490000
      962.0         C'EST LA VIE.  THEY'LL WAIT FOR HIM OUTSIDE THE DEAD END.            09500000
      963.0      */                                                                      09510000
      964.0                                                                              09520000
      965.0              IF LOC = 0 | FORCED(LOC) | BITSET(NEWLOC,3) THEN GOTO L2000;    09530000
      966.0              IF DFLAG ^= 0 THEN GOTO L6000;                                  09540000
      967.0              IF LOC >= 15 THEN DFLAG=1;                                      09550000
      968.0              GOTO L2000;                                                     09560000
      969.0                                                                              09570000
      970.0      /*                                                                      09580000
      971.0         WHEN WE ENCOUNTER THE FIRST DWARF, WE KILL 0, 1, OR 2 OF             09590000
      972.0         THE 5 DWARVES.  IF ANY OF THE SURVIVORS IS AT LOC,                   09600000
      973.0         REPLACE HIM WITH THE ALTERNATE.                                      09610000
      974.0      */                                                                      09620000
      975.0                                                                              09630000
      976.0      L6000:  IF DFLAG ^= 1 THEN GOTO L6010;                                  09640000
      977.0              IF LOC < 15 | PCT(95) THEN GOTO L2000;                          09650000
      978.0              DFLAG=2;                                                        09660000
      979.0              DO I=1 TO 2;                                                    09670000
      980.0                  J=1+RAN(5);                                                 09680000
      981.0                  IF PCT(50) THEN DLOC(J)=0;                                  09690000
      982.0                  END;                                                        09700000
      983.0              DO I=1 TO 5;                                                    09710000
      984.0                  IF DLOC(I) = LOC THEN DLOC(I)=DALTLC;                       09720000
      985.0                  ODLOC(I)=DLOC(I);                                           09730000
      986.0                  END;                                                        09740000
      987.0              CALL RSPEAK(3);                                                 09750000
      988.0              CALL DROP(AXE,LOC);                                             09760000
      989.0              GOTO L2000;                                                     09770000
      990.0                                                                              09780000
      991.0      /*                                                                      09790000
      992.0         THINGS ARE IN FULL SWING.  MOVE EACH DWARF AT RANDOM,                09800000
      993.0         EXCEPT IF HE'S SEEN US HE STICKS WITH US.  DWARVES NEVER             09810000
      994.0         GO TO LOCS <15.  IF WANDERING AT RANDOM, THEY DON'T BACK             09820000
      995.0         UP UNLESS THERE'S NO ALTERNATIVE.  IF THEY DON'T HAVE TO             09830000
      996.0         MOVE, THEY ATTACK.  AND, OF COURSE, DEAD DWARVES DON'T DO            09840000
      997.0         MUCH OF ANYTHING.                                                    09850000
      998.0      */                                                                      09860000
      999.0                                                                              09870000
     1000.0      L6010:  DTOTAL=0;                                                       09880000
     1001.0              ATTACK=0;                                                       09890000
     1002.0              STICK=0;                                                        09900000
     1003.0              DO I=1 TO 6;                                                    09910000
     1004.0                  IF DLOC(I) = 0 THEN GOTO L6030;                             09920000
     1005.0                  J=1;                                                        09930000
     1006.0                  KK=DLOC(I);                                                 09940000
     1007.0                  KK=KEY(KK);                                                 09950000
     1008.0                  IF KK = 0 THEN GOTO L6016;                                  09960000
     1009.0      L6012:      NEWLOC=MOD(ABS(TRAVEL(KK))/1000,1000);                      09970000
     1010.0                  IF NEWLOC > 300 | NEWLOC < 15 | NEWLOC = ODLOC(I)           09980000
     1011.0                    | (J > 1 & NEWLOC = TK(J-1)) | J >= 20                    09990000
     1012.0                    | NEWLOC = DLOC(I) | FORCED(NEWLOC)                       10000000
     1013.0                    | (I = 6 & BITSET(NEWLOC,3))                              10010000
     1014.0                    | ABS(TRAVEL(KK))/1000000 = 100 THEN GOTO L6014;          10020000
     1015.0                  TK(J)=NEWLOC;                                               10030000
     1016.0                  J=J+1;                                                      10040000
     1017.0      L6014:      KK=KK+1;                                                    10050000
     1018.0                  IF TRAVEL(KK-1) >= 0 THEN GOTO L6012;                       10060000
     1019.0      L6016:      TK(J)=ODLOC(I);                                             10070000
     1020.0                  IF J >= 2 THEN J=J-1;                                       10080000
     1021.0                  J=1+RAN(J);                                                 10090000
     1022.0                  ODLOC(I)=DLOC(I);                                           10100000
     1023.0                  DLOC(I)=TK(J);                                              10110000
     1024.0                  DSEEN(I)=(DSEEN(I) & LOC >= 15)                             10120000
     1025.0                   | (DLOC(I) = LOC | ODLOC(I) = LOC);                        10130000
     1026.0                  IF ^DSEEN(I) THEN GOTO L6030;                               10140000
     1027.0                  DLOC(I)=LOC;                                                10150000
     1028.0                  IF I ^= 6 THEN GOTO L6027;                                  10160000
     1029.0                                                                              10170000
     1030.0      /*                                                                      10180000
     1031.0         THE PIRATE'S SPOTTED HIM.  HE LEAVES HIM ALONE ONCE WE'VE            10190000
     1032.0         FOUND CHEST.  K COUNTS IF A TREASURE IS HERE.  IF NOT,               10200000
     1033.0         AND TALLY=TALLY2 PLUS ONE FOR AN UNSEEN CHEST, LET THE               10210000
     1034.0         PIRATE BE SPOTTED.                                                   10220000
     1035.0      */                                                                      10230000
     1036.0                                                                              10240000
     1037.0                  IF LOC = CHLOC | PROP(CHEST) >= 0 THEN GOTO L6030;          10250000
     1038.0                  K=0;                                                        10260000
     1039.0                  DO J=50 TO MAXTRS;                                          10270000
     1040.0                                                                              10280000
     1041.0      /* PIRATE WON'T TAKE PYRAMID FROM PLOVER ROOM OR DARK ROOM              10290000
     1042.0         (TOO EASY!).  */                                                     10300000
     1043.0                                                                              10310000
     1044.0                      IF J = PYRAM & (LOC = PLAC(PYRAM)                       10320000
     1045.0                       | LOC = PLAC(EMRALD)) THEN GOTO L6020;                 10330000
     1046.0                      IF TOTING(J) THEN GOTO L6022;                           10340000
     1047.0      L6020:          IF HERE(J) THEN K=1;                                    10350000
     1048.0                      END;                                                    10360000
     1049.0                  IF TALLY = TALLY2+1 & K = 0 & PLACE(CHEST) = 0              10370000
     1050.0                   & HERE(LAMP) & PROP(LAMP) = 1 THEN GOTO L6025;             10380000
     1051.0                  IF ODLOC(6) ^= DLOC(6) & PCT(20) THEN CALL RSPEAK(127);     10390000
     1052.0                  GOTO L6030;                                                 10400000
     1053.0                                                                              10410000
     1054.0      L6022:      CALL RSPEAK(128);                                           10420000
     1055.0                                                                              10430000
     1056.0      /* DON'TSTEAL CHEST BACK FROM TROLL! */                                 10440000
     1057.0                                                                              10450000
     1058.0                  IF PLACE(MESSAG) = 0 THEN CALL MOVE(CHEST,CHLOC);           10460000
     1059.0                  CALL MOVE(MESSAG,CHLOC2);                                   10470000
     1060.0                  DO J=50 TO MAXTRS;                                          10480000
     1061.0                      IF J = PYRAM & (LOC = PLAC(PYRAM)                       10490000
     1062.0                       | LOC = PLAC(EMRALD)) THEN GOTO L6023;                 10500000
     1063.0                      IF AT(J) & FIXED(J) = 0 THEN CALL CARRY(J,LOC);         10510000
     1064.0                      IF TOTING(J) THEN CALL DROP(J,CHLOC);                   10520000
     1065.0      L6023:          END;                                                    10530000
     1066.0      L6024:      DLOC(6)=CHLOC;                                              10540000
     1067.0                  ODLOC(6)=CHLOC;                                             10550000
     1068.0                  DSEEN(6)='0'B;                                              10560000
     1069.0                  GOTO L6030;                                                 10570000
     1070.0                                                                              10580000
     1071.0      L6025:      CALL RSPEAK(186);                                           10590000
     1072.0                  CALL MOVE(CHEST,CHLOC);                                     10600000
     1073.0                  CALL MOVE(MESSAG,CHLOC2);                                   10610000
     1074.0                  GOTO L6024;                                                 10620000
     1075.0                                                                              10630000
     1076.0      /* THIS THREATENING LITTLE DWARF IS IN THE ROOM WITH HIM! */            10640000
     1077.0                                                                              10650000
     1078.0      L6027:      DTOTAL=DTOTAL+1;                                            10660000
     1079.0                  IF ODLOC(I) ^= DLOC(I) THEN GOTO L6030;                     10670000
     1080.0                  ATTACK=ATTACK+1;                                            10680000
     1081.0                  IF KNFLOC >= 0 THEN KNFLOC=LOC;                             10690000
     1082.0                  IF RAN(1000) < 95*(DFLAG-2) THEN STICK=STICK+1;             10700000
     1083.0      L6030:      END;                                                        10710000
     1084.0                                                                              10720000
     1085.0      /* NOW WE KNOW WHAT'S HAPPENING.  LET'S TELL THE POOR SUCKER            10730000
     1086.0         ABOUT IT.  */                                                        10740000
     1087.0                                                                              10750000
     1088.0              IF DTOTAL = 0 THEN GOTO L2000;                                  10760000
     1089.0              IF DTOTAL = 1 THEN GOTO L75;                                    10770000
     1090.0              CALL LINESKP;                                                   10780000
     1091.0              PUT STRING (OUTSTR) EDIT ('There are ',DTOTAL,                  10790000
     1092.0                  ' threatening little dwarves in the room with you.')        10800000
     1093.0                  (A,F(1),A);                                                 10810000
     1094.0              CALL LINEOUT;                                                   10820000
     1095.0              GOTO L77;                                                       10830000
     1096.0      L75:    CALL RSPEAK(4);                                                 10840000
     1097.0      L77:    IF ATTACK = 0 THEN GOTO L2000;                                  10850000
     1098.0              IF DFLAG = 2 THEN DFLAG=3;                                      10860000
     1099.0                                                                              10870000
     1100.0      /*                                                                      10880000
     1101.0         DWARVES GET *VERY* MAD!                                              10890000
     1102.0      */                                                                      10900000
     1103.0                                                                              10910000
     1104.0              IF ATTACK = 1 THEN GOTO L79;                                    10920000
     1105.0              PUT STRING (OUTSTR) EDIT (ATTACK,                               10930000
     1106.0                 ' of them throw knives at you!')                             10940000
     1107.0                  (F(1),A);                                                   10950000
     1108.0              CALL LINEOUT;                                                   10960000
     1109.0              K=6;                                                            10970000
     1110.0      L82:    IF STICK > 1 THEN GOTO L83;                                     10980000
     1111.0              CALL RSPEAK(K+STICK);                                           10990000
     1112.0              IF STICK = 0 THEN GOTO L2000;                                   11000000
     1113.0              GOTO L84;                                                       11010000
     1114.0      L83:    PUT STRING (OUTSTR) EDIT (STICK,' of them get you!') (F(1),A);  11020000
     1115.0              CALL LINEOUT;                                                   11030000
     1116.0      L84:    OLDLC2=LOC;                                                     11040000
     1117.0              GOTO L99;                                                       11050000
     1118.0                                                                              11060000
     1119.0      L79:    CALL RSPEAK(5);                                                 11070000
     1120.0              K=52;                                                           11080000
     1121.0              GOTO L82;                                                       11090000
     1122.0                                                                              11100000
     1123.0    1 /* DESCRIBE THE CURRENT LOCATION AND (MAYBE) GET NEXT COMMAND. */       11110000
     1124.0                                                                              11120000
     1125.0      /* PRINT TEXT FOR CURRENT LOC. */                                       11130000
     1126.0                                                                              11140000
     1127.0      L2000:  IF LOC = 0 THEN GOTO L99;                                       11150000
     1128.0              KK=STEXT(LOC);                                                  11160000
     1129.0              IF MOD(ABB(LOC),ABBNUM) = 0 | KK = 0 THEN KK=LTEXT(LOC);        11170000
     1130.0              IF FORCED(LOC) |  ^ DARK(0) THEN GOTO L2001;                    11180000
     1131.0              IF WZDARK & PCT(35) THEN GOTO L90;                              11190000
     1132.0              KK=RTEXT(16);                                                   11200000
     1133.0      L2001:  IF TOTING(BEAR) THEN CALL RSPEAK(141);                          11210000
     1134.0              CALL SPEAK(KK);                                                 11220000
     1135.0              K=1;                                                            11230000
     1136.0              IF FORCED(LOC) THEN GOTO L8;                                    11240000
     1137.0              IF LOC = 33 & PCT(25) &  ^ CLOSNG THEN CALL RSPEAK(8);          11250000
     1138.0                                                                              11260000
     1139.0      /*                                                                      11270000
     1140.0         PRINT OUT DESCRIPTIONS OF OBJECTS AT THIS LOCATION.  IF              11280000
     1141.0         NOT CLOSING AND PROPERTY VALUE IS NEGATIVE, TALLY OFF                11290000
     1142.0         ANOTHER TREASURE.  RUG IS SPECIAL CASE; ONCE SEEN, ITS               11300000
     1143.0         PROP IS 1 (DRAGON ON IT) TILL DRAGON IS KILLED.                      11310000
     1144.0         SIMILARLY FOR CHAIN; PROP IS INITIALLY 1 (LOCKED TO                  11320000
     1145.0         BEAR).  THESE HACKS ARE BECAUSE PROP=0 IS NEEDED TO GET              11330000
     1146.0         FULL SCORE.                                                          11340000
     1147.0      */                                                                      11350000
     1148.0                                                                              11360000
     1149.0              IF DARK(0) THEN GOTO L2012;                                     11370000
     1150.0              ABB(LOC)=ABB(LOC)+1;                                            11380000
     1151.0              I=ATLOC(LOC);                                                   11390000
     1152.0      L2004:   IF I = 0 THEN GOTO L2012;                                      11400000
     1153.0              OBJ=I;                                                          11410000
     1154.0              IF OBJ > 100 THEN OBJ=OBJ-100;                                  11420000
     1155.0              IF OBJ = STEPS & TOTING(NUGGET) THEN GOTO L2008;                11430000
     1156.0              IF PROP(OBJ) >= 0 THEN GOTO L2006;                              11440000
     1157.0              IF CLOSED THEN GOTO L2008;                                      11450000
     1158.0              PROP(OBJ)=0;                                                    11460000
     1159.0              IF OBJ = RUG | OBJ = CHAIN THEN PROP(OBJ)=1;                    11470000
     1160.0              TALLY=TALLY-1;                                                  11480000
     1161.0                                                                              11490000
     1162.0      /* IF REMAINING TREASURES TOO ELUSIVE, ZAP HIS LAMP. */                 11500000
     1163.0                                                                              11510000
     1164.0              IF TALLY = TALLY2 & TALLY ^= 0 THEN LIMIT=MIN(35,LIMIT);        11520000
     1165.0      L2006:  KK=PROP(OBJ);                                                   11530000
     1166.0              IF OBJ = STEPS & LOC = FIXED(STEPS) THEN KK=1;                  11540000
     1167.0              CALL PSPEAK(OBJ,KK);                                            11550000
     1168.0      L2008:  I=LINK(I);                                                      11560000
     1169.0              GOTO L2004;                                                     11570000
     1170.0                                                                              11580000
     1171.0      L2009:  K=54;                                                           11590000
     1172.0      L2010:  SPK=K;                                                          11600000
     1173.0      L2011:  CALL RSPEAK(SPK);                                               11610000
     1174.0                                                                              11620000
     1175.0      L2012:  VERB=0;                                                         11630000
     1176.0              OBJ=0;                                                          11640000
     1177.0                                                                              11650000
     1178.0      /*                                                                      11660000
     1179.0         CHECK IF THIS LOC IS ELIGIBLE FOR ANY HINTS.  IF BEEN                11670000
     1180.0         HERE LONG ENOUGH, BRANCH TO HELP SECTION (ON LATER PAGE).            11680000
     1181.0         HINTS ALL COME BACK HERE EVENTUALLY TO FINISH THE LOOP.              11690000
     1182.0         IGNORE "HINTS" < 4 (SPECIAL STUFF, SEE DATABASE NOTES).              11700000
     1183.0      */                                                                      11710000
     1184.0                                                                              11720000
     1185.0      L2600:  DO HINT=4 TO HNTMAX;                                            11730000
     1186.0                  IF ^ (HINTED(HINT)) THEN DO;                                11740000
     1187.0                      IF ^BITSET(LOC,HINT) THEN HINTLC(HINT)=-1;              11750000
     1188.0                      HINTLC(HINT)=HINTLC(HINT)+1;                            11760000
     1189.0                      IF HINTLC(HINT) >= HINTS(HINT,1) THEN GOTO L40000;      11770000
     1190.0                      END;                                                    11780000
     1191.0                  END;                                                        11790000
     1192.0                                                                              11800000
     1193.0      /*                                                                      11810000
     1194.0         KICK THE RANDOM NUMBER GENERATOR JUST TO ADD VARIETY TO              11820000
     1195.0         THE CHASE.  ALSO, IF CLOSING TIME, CHECK FOR ANY OBJECTS             11830000
     1196.0         BEING TOTED WITH PROP < 0 AND SET THE PROP TO -1-PROP.               11840000
     1197.0         THIS WAY OBJECTS WON'T BE DESCRIBED UNTIL THEY'VE BEEN               11850000
     1198.0         PICKED UP AND PUT DOWN SEPARATE FROM THEIR RESPECTIVE                11860000
     1199.0         PILES.  DON'T TICK CLOCK1 UNLESS WELL INTO CAVE (AND NOT             11870000
     1200.0         AT Y2).                                                              11880000
     1201.0      */                                                                      11890000
     1202.0                                                                              11900000
     1203.0      L2602:  IF ^CLOSED THEN GOTO L2605;                                     11910000
     1204.0              IF PROP(OYSTER) < 0 & TOTING(OYSTER)                            11920000
     1205.0                     THEN CALL PSPEAK(OYSTER,1);                              11930000
     1206.0              DO I=1 TO 100;                                                  11940000
     1207.0                  IF TOTING(I) & PROP(I) < 0 THEN PROP(I)=-1-PROP(I);         11950000
     1208.0                  END;                                                        11960000
     1209.0      L2605:  WZDARK=DARK(0);                                                 11970000
     1210.0              IF KNFLOC > 0 & KNFLOC ^= LOC THEN KNFLOC=0;                    11980000
     1211.0              I=RAN(1);                                                       11990000
     1212.0              CALL GETIN(WD1,WD1X,WD2,WD2X);                                  12000000
     1213.0                                                                              12010000
     1214.0      /*                                                                      12020000
     1215.0         EVERY INPUT, CHECK "FOOBAR" FLAG.  IF ZERO, NOTHING'S                12030000
     1216.0         GOING ON.  IF POS, MAKE NEG.  IF NEG, HE SKIPPED A WORD,             12040000
     1217.0         SO MAKE IT ZERO.                                                     12050000
     1218.0      */                                                                      12060000
     1219.0                                                                              12070000
     1220.0      L2608:  FOOBAR=MIN(0,-FOOBAR);                                          12080000
     1221.0              TURNS=TURNS+1;                                                  12090000
     1222.0              IF VERB = SAY & WD2 ^= '     ' THEN VERB=0;                     12100000
     1223.0              IF VERB = SAY THEN GOTO L4090;                                  12110000
     1224.0              IF TALLY = 0 & LOC >= 15 & LOC ^= 33 THEN CLOCK1=CLOCK1-1;      12120000
     1225.0              IF CLOCK1 = 0 THEN GOTO L10000;                                 12130000
     1226.0              IF CLOCK1 < 0 THEN CLOCK2=CLOCK2-1;                             12140000
     1227.0              IF CLOCK2 = 0 THEN GOTO L11000;                                 12150000
     1228.0              IF PROP(LAMP) = 1 THEN LIMIT=LIMIT-1;                           12160000
     1229.0              IF LIMIT <= 30 & HERE(BATTER) & PROP(BATTER) = 0                12170000
     1230.0               & HERE(LAMP) THEN GOTO L12000;                                 12180000
     1231.0              IF LIMIT = 0 THEN GOTO L12400;                                  12190000
     1232.0              IF LIMIT < 0 & LOC <= 8 THEN GOTO L12600;                       12200000
     1233.0              IF LIMIT <= 30 THEN GOTO L12200;                                12210000
     1234.0      L19999: K=43;                                                           12220000
     1235.0              IF LIQLOC(LOC) = WATER THEN K=70;                               12230000
     1236.0              IF WD1 = 'ENTER' & (WD2 = 'STREA' | WD2 = 'WATER')              12240000
     1237.0               THEN GOTO L2010;                                               12250000
     1238.0              IF WD1 = 'ENTER' & WD2 ^= '    ' THEN GOTO L2800;               12260000
     1239.0              IF (WD1 ^= 'WATER' & WD1 ^= 'OIL')                              12270000
     1240.0               | (WD2 ^= 'PLANT' & WD2 ^= 'DOOR') THEN GOTO L2610;            12280000
     1241.0              IF AT(VOCAB(WD2,1)) THEN WD2='POUR';                            12290000
     1242.0      L2610:  IF WD1 ^= 'WEST' THEN GOTO L2630;                               12300000
     1243.0              IWEST=IWEST+1;                                                  12310000
     1244.0              IF IWEST = 10 THEN CALL RSPEAK(17);                             12320000
     1245.0      L2630:  I=VOCAB(WD1,-1);                                                12330000
     1246.0              IF I = -1 THEN GOTO L3000;                                      12340000
     1247.0              K=MOD(I,1000);                                                  12350000
     1248.0              KQ=I/1000+1;                                                    12360000
     1249.0              SELECT (KQ-1);                                                  12370000
     1250.0                 WHEN (0) GO TO L8;                                           12380000
     1251.0                 WHEN (1) GO TO L5000;                                        12390000
     1252.0                 WHEN (2) GO TO L4000;                                        12400000
     1253.0                 WHEN (3) GO TO L2010;                                        12410000
     1254.0                 END;                                                         12420000
     1255.0              CALL BUG(22);                                                   12430000
     1256.0                                                                              12440000
     1257.0      /* GET SECOND WORD FOR ANALYSIS. */                                     12450000
     1258.0                                                                              12460000
     1259.0      L2800:  WD1=WD2;                                                        12470000
     1260.0              WD1X=WD2X;                                                      12480000
     1261.0              WD2='     ';                                                    12490000
     1262.0              GOTO L2610;                                                     12500000
     1263.0                                                                              12510000
     1264.0      /* GEE, I DON'T UNDERSTAND. */                                          12520000
     1265.0                                                                              12530000
     1266.0      L3000:  SPK=60;                                                         12540000
     1267.0              IF PCT(20) THEN SPK=61;                                         12550000
     1268.0              IF PCT(20) THEN SPK=13;                                         12560000
     1269.0              CALL RSPEAK(SPK);                                               12570000
     1270.0              GOTO L2600;                                                     12580000
     1271.0                                                                              12590000
     1272.0      /*                                                                      12600000
     1273.0         ANALYSE A VERB.  REMEMBER WHAT IT WAS, GO BACK FOR OBJECT            12610000
     1274.0         IF SECOND WORD UNLESS VERB IS "SAY", WHICH SNARFS                    12620000
     1275.0         ARBITRARY SECOND WORD.                                               12630000
     1276.0      */                                                                      12640000
     1277.0                                                                              12650000
     1278.0      L4000:  VERB=K;                                                         12660000
     1279.0              SPK=ACTSPK(VERB);                                               12670000
     1280.0              IF WD2 ^= '     ' & VERB ^= SAY THEN GOTO L2800;                12680000
     1281.0              IF VERB = SAY THEN                                              12690000
     1282.0                  IF WD2 = '     ' THEN GO TO L4080;                          12700000
     1283.0                                   ELSE GO TO L4090;                          12710000
     1284.0              IF OBJ ^= 0 THEN GOTO L4090;                                    12720000
     1285.0                                                                              12730000
     1286.0      /* ANALYSE AN INTRANSITIVE VERB (IE, NO OBJECT GIVEN YET). */           12740000
     1287.0                                                                              12750000
     1288.0      L4080:  SELECT (VERB);                                                  12760000
     1289.0                 WHEN (01) GO TO L8010;       /* TAKE */                      12770000
     1290.0                 WHEN (02) GO TO L8000;       /* DROP */                      12780000
     1291.0                 WHEN (03) GO TO L8000;       /* SAY */                       12790000
     1292.0                 WHEN (04) GO TO L8040;       /* OPEN */                      12800000
     1293.0                 WHEN (05) GO TO L2009;       /* NOTH */                      12810000
     1294.0                 WHEN (06) GO TO L8040;       /* LOCK */                      12820000
     1295.0                 WHEN (07) GO TO L9070;       /* ON */                        12830000
     1296.0                 WHEN (08) GO TO L9080;       /* OFF */                       12840000
     1297.0                 WHEN (09) GO TO L8000;       /* WAVE */                      12850000
     1298.0                 WHEN (10) GO TO L8000;       /* CALM */                      12860000
     1299.0                 WHEN (11) GO TO L2011;       /* WALK */                      12870000
     1300.0                 WHEN (12) GO TO L9120;       /* KILL */                      12880000
     1301.0                 WHEN (13) GO TO L9130;       /* POUR */                      12890000
     1302.0                 WHEN (14) GO TO L8140;       /* EAT */                       12900000
     1303.0                 WHEN (15) GO TO L9150;       /* DRNK */                      12910000
     1304.0                 WHEN (16) GO TO L8000;       /* RUB */                       12920000
     1305.0                 WHEN (17) GO TO L8000;       /* TOSS */                      12930000
     1306.0                 WHEN (18) GO TO L8180;       /* QUIT */                      12940000
     1307.0                 WHEN (19) GO TO L8000;       /* FIND */                      12950000
     1308.0                 WHEN (20) GO TO L8200;       /* INVN */                      12960000
     1309.0                 WHEN (21) GO TO L8000;       /* FEED */                      12970000
     1310.0                 WHEN (22) GO TO L9220;       /* FILL */                      12980000
     1311.0                 WHEN (23) GO TO L9230;       /* BLST */                      12990000
     1312.0                 WHEN (24) GO TO L8240;       /* SCOR */                      13000000
     1313.0                 WHEN (25) GO TO L8250;       /* FOO */                       13010000
     1314.0                 WHEN (26) GO TO L8260;       /* BRF */                       13020000
     1315.0                 WHEN (27) GO TO L8270;       /* READ */                      13030000
     1316.0                 WHEN (28) GO TO L8000;       /* BREK */                      13040000
     1317.0                 WHEN (29) GO TO L8000;       /* WAKE */                      13050000
     1318.0                 WHEN (30) GO TO L8300;       /* SUSP */                      13060000
     1319.0                 WHEN (31) GO TO L8310;       /* HOUR */                      13070000
     1320.0                 WHEN (32) GO TO SETLOG;      /* LOG  */                      13080000
     1321.0                 END;                                                         13090000
     1322.0                                                                              13100000
     1323.0              CALL BUG(23);                                                   13110000
     1324.0                                                                              13120000
     1325.0      /* ANALYSE A TRANSITIVE VERB. */                                        13130000
     1326.0                                                                              13140000
     1327.0      L4090:  SELECT (VERB);                                                  13150000
     1328.0                 WHEN (01) GO TO L9010;       /* TAKE */                      13160000
     1329.0                 WHEN (02) GO TO L9020;       /* DROP */                      13170000
     1330.0                 WHEN (03) GO TO L9030;       /* SAY */                       13180000
     1331.0                 WHEN (04) GO TO L9040;       /* OPEN */                      13190000
     1332.0                 WHEN (05) GO TO L2009;       /* NOTH */                      13200000
     1333.0                 WHEN (06) GO TO L9040;       /* LOCK */                      13210000
     1334.0                 WHEN (07) GO TO L9070;       /* ON */                        13220000
     1335.0                 WHEN (08) GO TO L9080;       /* OFF */                       13230000
     1336.0                 WHEN (09) GO TO L9090;       /* WAVE */                      13240000
     1337.0                 WHEN (10) GO TO L2011;       /* CALM */                      13250000
     1338.0                 WHEN (11) GO TO L2011;       /* WALK */                      13260000
     1339.0                 WHEN (12) GO TO L9120;       /* KILL */                      13270000
     1340.0                 WHEN (13) GO TO L9130;       /* POUR */                      13280000
     1341.0                 WHEN (14) GO TO L9140;       /* EAT */                       13290000
     1342.0                 WHEN (15) GO TO L9150;       /* DRNK */                      13300000
     1343.0                 WHEN (16) GO TO L9160;       /* RUB */                       13310000
     1344.0                 WHEN (17) GO TO L9170;       /* TOSS */                      13320000
     1345.0                 WHEN (18) GO TO L2011;       /* QUIT */                      13330000
     1346.0                 WHEN (19) GO TO L9190;       /* FIND */                      13340000
     1347.0                 WHEN (20) GO TO L9190;       /* INVN */                      13350000
     1348.0                 WHEN (21) GO TO L9210;       /* FEED */                      13360000
     1349.0                 WHEN (22) GO TO L9220;       /* FILL */                      13370000
     1350.0                 WHEN (23) GO TO L9230;       /* BLST */                      13380000
     1351.0                 WHEN (24) GO TO L2011;       /* SCOR */                      13390000
     1352.0                 WHEN (25) GO TO L2011;       /* FOO */                       13400000
     1353.0                 WHEN (26) GO TO L2011;       /* BRF */                       13410000
     1354.0                 WHEN (27) GO TO L9270;       /* READ */                      13420000
     1355.0                 WHEN (28) GO TO L9280;       /* BREK */                      13430000
     1356.0                 WHEN (29) GO TO L9290;       /* WAKE */                      13440000
     1357.0                 WHEN (30) GO TO L2011;       /* SUSP */                      13450000
     1358.0                 WHEN (31) GO TO L2011;       /* HOUR */                      13460000
     1359.0                 WHEN (32) GO TO L2011;       /* LOG  */                      13470000
     1360.0                 END;                                                         13480000
     1361.0              CALL BUG(24);                                                   13490000
     1362.0                                                                              13500000
     1363.0      /*                                                                      13510000
     1364.0         ANALYSE AN OBJECT WORD.  SEE IF THE THING IS HERE,                   13520000
     1365.0         WHETHER WE'VE GOT A VERB YET, AND SO ON.  OBJECT MUST BE             13530000
     1366.0         HERE UNLESS VERB IS "FIND" OR "INVENT(ORY)" (AND NO NEW              13540000
     1367.0         VERB YET TO BE ANALYSED).  WATER AND OIL ARE ALSO FUNNY,             13550000
     1368.0         SINCE THEY ARE NEVER ACTUALLY DROPPED AT ANY LOCATION,               13560000
     1369.0         BUT MIGHT BE HERE INSIDE THE BOTTLE OR AS A FEATURE OF               13570000
     1370.0         THE LOCATION.                                                        13580000
     1371.0      */                                                                      13590000
     1372.0                                                                              13600000
     1373.0      L5000:  OBJ=K;                                                          13610000
     1374.0              IF FIXED(K) ^= LOC &  ^ HERE(K) THEN GOTO L5100;                13620000
     1375.0      L5010:  IF WD2 ^= '     ' THEN GOTO L2800;                              13630000
     1376.0              IF VERB ^= 0 THEN GOTO L4090;                                   13640000
     1377.0              CALL A5TOA1(WD1,WD1X,TKWORD,K);                                 13650000
     1378.0              CALL LINESKP;                                                   13660000
     1379.0              PUT STRING (OUTSTR) EDIT ('What do you want to do with the ',   13670000
     1380.0                  (TKWORD(I) DO I=1 TO K)) (A,20 A);                          13680000
     1381.0              CALL LINEOUT;                                                   13690000
     1382.0              GOTO L2600;                                                     13700000
     1383.0                                                                              13710000
     1384.0      L5100:  IF K ^= GRATE THEN GOTO L5110;                                  13720000
     1385.0              IF LOC = 1 | LOC = 4 | LOC = 7 THEN K=DPRSSN;                   13730000
     1386.0              IF LOC > 9 & LOC < 15 THEN K=ENTRNC;                            13740000
     1387.0              IF K ^= GRATE THEN GOTO L8;                                     13750000
     1388.0      L5110:  IF K ^= DWARF THEN GOTO L5120;                                  13760000
     1389.0              DO I=1 TO 5;                                                    13770000
     1390.0                  IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L5010;              13780000
     1391.0                  END;                                                        13790000
     1392.0      L5120:  IF (LIQ(0) = K & HERE(BOTTLE))                                  13800000
     1393.0                     | K = LIQLOC(LOC) THEN GOTO L5010;                       13810000
     1394.0              IF OBJ ^= PLANT |  ^ AT(PLANT2) | PROP(PLANT2) = 0              13820000
     1395.0                    THEN GOTO L5130;                                          13830000
     1396.0              OBJ=PLANT2;                                                     13840000
     1397.0              GOTO L5010;                                                     13850000
     1398.0      L5130:  IF OBJ ^= KNIFE | KNFLOC ^= LOC THEN GOTO L5140;                13860000
     1399.0              KNFLOC=-1;                                                      13870000
     1400.0              SPK=116;                                                        13880000
     1401.0              GOTO L2011;                                                     13890000
     1402.0      L5140:  IF OBJ ^= ROD |  ^HERE(ROD2) THEN GOTO L5190;                   13900000
     1403.0              OBJ=ROD2;                                                       13910000
     1404.0              GOTO L5010;                                                     13920000
     1405.0      L5190:  IF (VERB = FIND | VERB = INVENT) & WD2 = '     '                13930000
     1406.0                   THEN GOTO L5010;                                           13940000
     1407.0              CALL A5TOA1(WD1,WD1X,TKWORD,K);                                 13950000
     1408.0              CALL LINESKP;                                                   13960000
     1409.0              PUT STRING (OUTSTR) EDIT                                        13970000
     1410.0                   ('I see no ',(TKWORD(I) DO I=1 TO K),' here!')             13980000
     1411.0                  (A,20 A);                                                   13990000
     1412.0              CALL LINEOUT;                                                   14000000
     1413.0              GOTO L2012;                                                     14010000
     1414.0    1 /*                                                                      14020000
     1415.0         FIGURE OUT THE NEW LOCATION                                          14030000
     1416.0                                                                              14040000
     1417.0         GIVEN THE CURRENT LOCATION IN "LOC", AND A MOTION VERB               14050000
     1418.0         NUMBER IN "K", PUT THE NEW LOCATION IN "NEWLOC".  THE                14060000
     1419.0         CURRENT LOC IS SAVED IN "OLDLOC" IN CASE HE WANTS TO                 14070000
     1420.0         RETREAT.  THE CURRENT OLDLOC IS SAVED IN OLDLC2, IN CASE             14080000
     1421.0         HE DIES.  (IF HE DOES, NEWLOC WILL BE LIMBO, AND OLDLOC              14090000
     1422.0         WILL BE WHAT KILLED HIM, SO WE NEED OLDLC2, WHICH IS THE             14100000
     1423.0         LAST PLACE HE WAS SAFE.)                                             14110000
     1424.0      */                                                                      14120000
     1425.0                                                                              14130000
     1426.0      L8:     KK=KEY(LOC);                                                    14140000
     1427.0              NEWLOC=LOC;                                                     14150000
     1428.0              IF KK = 0 THEN CALL BUG(26);                                    14160000
     1429.0              IF K = NULLX THEN GOTO L2;                                      14170000
     1430.0              IF K = BACK THEN GOTO L20;                                      14180000
     1431.0              IF K = LOOK THEN GOTO L30;                                      14190000
     1432.0              IF K = CAVE THEN GOTO L40;                                      14200000
     1433.0              OLDLC2=OLDLOC;                                                  14210000
     1434.0              OLDLOC=LOC;                                                     14220000
     1435.0                                                                              14230000
     1436.0      L9:     LL=ABS(TRAVEL(KK));                                             14240000
     1437.0              IF MOD(LL,1000) = 1 | MOD(LL,1000) = K THEN GOTO L10;           14250000
     1438.0              IF TRAVEL(KK) < 0 THEN GOTO L50;                                14260000
     1439.0              KK=KK+1;                                                        14270000
     1440.0              GOTO L9;                                                        14280000
     1441.0                                                                              14290000
     1442.0      L10:    LL=LL/1000;                                                     14300000
     1443.0      L11:    NEWLOC=LL/1000;                                                 14310000
     1444.0              K=MOD(NEWLOC,100);                                              14320000
     1445.0              IF NEWLOC <= 300 THEN GOTO L13;                                 14330000
     1446.0              IF PROP(K) ^= NEWLOC/100-3 THEN GOTO L16;                       14340000
     1447.0      L12:    IF TRAVEL(KK) < 0 THEN CALL BUG(25);                            14350000
     1448.0              KK=KK+1;                                                        14360000
     1449.0              NEWLOC=ABS(TRAVEL(KK))/1000;                                    14370000
     1450.0              IF NEWLOC = LL THEN GOTO L12;                                   14380000
     1451.0              LL=NEWLOC;                                                      14390000
     1452.0              GOTO L11;                                                       14400000
     1453.0                                                                              14410000
     1454.0      L13:    IF NEWLOC <= 100 THEN GOTO L14;                                 14420000
     1455.0              IF TOTING(K) | (NEWLOC > 200 & AT(K)) THEN GOTO L16;            14430000
     1456.0              GOTO L12;                                                       14440000
     1457.0                                                                              14450000
     1458.0      L14:    IF NEWLOC ^= 0 &  ^PCT(NEWLOC) THEN GOTO L12;                   14460000
     1459.0      L16:    NEWLOC=MOD(LL,1000);                                            14470000
     1460.0              IF NEWLOC <= 300 THEN GOTO L2;                                  14480000
     1461.0              IF NEWLOC <= 500 THEN GOTO L30000;                              14490000
     1462.0              CALL RSPEAK(NEWLOC-500);                                        14500000
     1463.0              NEWLOC=LOC;                                                     14510000
     1464.0              GOTO L2;                                                        14520000
     1465.0                                                                              14530000
     1466.0      /*                                                                      14540000
     1467.0         SPECIAL MOTIONS COME HERE.  LABELLING CONVENTION:                    14550000
     1468.0         STATEMENT NUMBERS NNNXX (XX=00-99) ARE USED FOR SPECIAL              14560000
     1469.0         CASE NUMBER NNN (NNN=301-500).                                       14570000
     1470.0      */                                                                      14580000
     1471.0                                                                              14590000
     1472.0      L30000: NEWLOC=NEWLOC-300;                                              14600000
     1473.0              SELECT (NEWLOC-1);                                              14610000
     1474.0                  WHEN (00) GO TO L30100;                                     14620000
     1475.0                  WHEN (01) GO TO L30200;                                     14630000
     1476.0                  WHEN (02) GO TO L30300;                                     14640000
     1477.0                  END;                                                        14650000
     1478.0              CALL BUG(20);                                                   14660000
     1479.0                                                                              14670000
     1480.0      /*                                                                      14680000
     1481.0         TRAVEL 301.  PLOVER-ALCOVE PASSAGE.  CAN CARRY ONLY                  14690000
     1482.0         EMERALD.  NOTE:  TRAVEL TABLE MUST INCLUDE "USELESS"                 14700000
     1483.0         ENTRIES GOING THROUGH PASSAGE, WHICH CAN NEVER BE USED               14710000
     1484.0         FOR ACTUAL MOTION, BUT CAN BE SPOTTED BY "GO BACK".                  14720000
     1485.0      */                                                                      14730000
     1486.0                                                                              14740000
     1487.0      L30100: NEWLOC=99+100-LOC;                                              14750000
     1488.0              IF HOLDNG = 0 | (HOLDNG = 1 & TOTING(EMRALD)) THEN GOTO L2;     14760000
     1489.0              NEWLOC=LOC;                                                     14770000
     1490.0              CALL RSPEAK(117);                                               14780000
     1491.0              GOTO L2;                                                        14790000
     1492.0                                                                              14800000
     1493.0      /*                                                                      14810000
     1494.0         TRAVEL 302.  PLOVER TRANSPORT.  DROP THE EMERALD (ONLY               14820000
     1495.0         USE SPECIAL TRAVEL IF TOTING IT), SO HE'S FORCED TO USE              14830000
     1496.0         THE PLOVER-PASSAGE TO GET IT OUT.  HAVING DROPPED IT, GO             14840000
     1497.0         BACK AND PRETEND HE WASN'T CARRYING IT AFTER ALL.                    14850000
     1498.0      */                                                                      14860000
     1499.0                                                                              14870000
     1500.0      L30200: CALL DROP(EMRALD,LOC);                                          14880000
     1501.0              GOTO L12;                                                       14890000
     1502.0                                                                              14900000
     1503.0      /*                                                                      14910000
     1504.0         TRAVEL 303.  TROLL BRIDGE.  MUST BE DONE ONLY AS SPECIAL             14920000
     1505.0         MOTION SO THAT DWARVES WON'T WANDER ACROSS AND ENCOUNTER             14930000
     1506.0         THE BEAR.  (THEY WON'T FOLLOW THE PLAYER THERE BECAUSE               14940000
     1507.0         THAT REGION IS FORBIDDEN TO THE PIRATE.) IF                          14950000
     1508.0         PROP(TROLL)=1, HE'S CROSSED SINCE PAYING, SO STEP OUT AND            14960000
     1509.0         BLOCK HIM.  (STANDARD TRAVEL ENTRIES CHECK FOR                       14970000
     1510.0         PROP(TROLL)=0.) SPECIAL STUFF FOR BEAR.                              14980000
     1511.0      */                                                                      14990000
     1512.0                                                                              15000000
     1513.0      L30300: IF PROP(TROLL) ^= 1 THEN GOTO L30310;                           15010000
     1514.0              CALL PSPEAK(TROLL,1);                                           15020000
     1515.0              PROP(TROLL)=0;                                                  15030000
     1516.0              CALL MOVE(TROLL2,0);                                            15040000
     1517.0              CALL MOVE(TROLL2+100,0);                                        15050000
     1518.0              CALL MOVE(TROLL,PLAC(TROLL));                                   15060000
     1519.0              CALL MOVE(TROLL+100,FIXD(TROLL));                               15070000
     1520.0              CALL JUGGLE(CHASM);                                             15080000
     1521.0              NEWLOC=LOC;                                                     15090000
     1522.0              GOTO L2;                                                        15100000
     1523.0                                                                              15110000
     1524.0      L30310: NEWLOC=PLAC(TROLL)+FIXD(TROLL)-LOC;                             15120000
     1525.0              IF PROP(TROLL) = 0 THEN PROP(TROLL)=1;                          15130000
     1526.0              IF ^TOTING(BEAR) THEN GOTO L2;                                  15140000
     1527.0              CALL RSPEAK(162);                                               15150000
     1528.0              PROP(CHASM)=1;                                                  15160000
     1529.0              PROP(TROLL)=2;                                                  15170000
     1530.0              CALL DROP(BEAR,NEWLOC);                                         15180000
     1531.0              FIXED(BEAR)=-1;                                                 15190000
     1532.0              PROP(BEAR)=3;                                                   15200000
     1533.0              IF PROP(SPICES) < 0 THEN TALLY2=TALLY2+1;                       15210000
     1534.0              OLDLC2=NEWLOC;                                                  15220000
     1535.0              GOTO L99;                                                       15230000
     1536.0                                                                              15240000
     1537.0      /* END OF SPECIALS. */                                                  15250000
     1538.0                                                                              15260000
     1539.0      /*                                                                      15270000
     1540.0         HANDLE "GO BACK".  LOOK FOR VERB WHICH GOES FROM LOC TO              15280000
     1541.0         OLDLOC, OR TO OLDLC2 IF OLDLOC HAS FORCED-MOTION.  K2                15290000
     1542.0         SAVES ENTRY -> FORCED LOC -> PREVIOUS LOC.                           15300000
     1543.0      */                                                                      15310000
     1544.0                                                                              15320000
     1545.0      L20:    K=OLDLOC;                                                       15330000
     1546.0              IF FORCED(K) THEN K=OLDLC2;                                     15340000
     1547.0              OLDLC2=OLDLOC;                                                  15350000
     1548.0              OLDLOC=LOC;                                                     15360000
     1549.0              K2=0;                                                           15370000
     1550.0              IF K ^= LOC THEN GOTO L21;                                      15380000
     1551.0              CALL RSPEAK(91);                                                15390000
     1552.0              GOTO L2;                                                        15400000
     1553.0                                                                              15410000
     1554.0      L21:    LL=MOD((ABS(TRAVEL(KK))/1000),1000);                            15420000
     1555.0              IF LL = K THEN GOTO L25;                                        15430000
     1556.0              IF LL > 300 THEN GOTO L22;                                      15440000
     1557.0              J=KEY(LL);                                                      15450000
     1558.0              IF FORCED(LL) & MOD((ABS(TRAVEL(J))/1000),1000) = K             15460000
     1559.0                   THEN K2=KK;                                                15470000
     1560.0      L22:    IF TRAVEL(KK) < 0 THEN GOTO L23;                                15480000
     1561.0              KK=KK+1;                                                        15490000
     1562.0              GOTO L21;                                                       15500000
     1563.0                                                                              15510000
     1564.0      L23:    KK=K2;                                                          15520000
     1565.0              IF KK ^= 0 THEN GOTO L25;                                       15530000
     1566.0              CALL RSPEAK(140);                                               15540000
     1567.0              GOTO L2;                                                        15550000
     1568.0                                                                              15560000
     1569.0      L25:    K=MOD(ABS(TRAVEL(KK)),1000);                                    15570000
     1570.0              KK=KEY(LOC);                                                    15580000
     1571.0              GOTO L9;                                                        15590000
     1572.0                                                                              15600000
     1573.0      /*                                                                      15610000
     1574.0         LOOK.  CAN'T GIVE MORE DETAIL.  PRETEND IT WASN'T DARK               15620000
     1575.0         (THOUGH IT MAY "NOW" BE DARK) SO HE WON'T FALL INTO A PIT            15630000
     1576.0         WHILE STARING INTO THE GLOOM.                                        15640000
     1577.0      */                                                                      15650000
     1578.0                                                                              15660000
     1579.0      L30:    IF DETAIL < 3 THEN CALL RSPEAK(15);                             15670000
     1580.0              DETAIL=DETAIL+1;                                                15680000
     1581.0              WZDARK='0'B;                                                    15690000
     1582.0              ABB(LOC)=0;                                                     15700000
     1583.0              GOTO L2;                                                        15710000
     1584.0                                                                              15720000
     1585.0      /* CAVE.  DIFFERENT MESSAGES DEPENDING ON WHETHER ABOVE GROUND. */      15730000
     1586.0                                                                              15740000
     1587.0      L40:    IF LOC < 8 THEN CALL RSPEAK(57);                                15750000
     1588.0              IF LOC >= 8 THEN CALL RSPEAK(58);                               15760000
     1589.0              GOTO L2;                                                        15770000
     1590.0                                                                              15780000
     1591.0      /* NON-APPLICABLE MOTION.  VARIOUS MESSAGES DEPENDING ON                15790000
     1592.0         WORD GIVEN.  */                                                      15800000
     1593.0                                                                              15810000
     1594.0      L50:    SPK=12;                                                         15820000
     1595.0              IF K >= 43 & K <= 50 THEN SPK=9;                                15830000
     1596.0              IF K = 29 | K = 30 THEN SPK=9;                                  15840000
     1597.0              IF K = 7 | K = 36 | K = 37 THEN SPK=10;                         15850000
     1598.0              IF K = 11 | K = 19 THEN SPK=11;                                 15860000
     1599.0              IF VERB = FIND | VERB = INVENT THEN SPK=59;                     15870000
     1600.0              IF K = 62 | K = 65 THEN SPK=42;                                 15880000
     1601.0              IF K = 17 THEN SPK=80;                                          15890000
     1602.0              CALL RSPEAK(SPK);                                               15900000
     1603.0              GOTO L2;                                                        15910000
     1604.0                                                                              15920000
     1605.0    1 /*                                                                      15930000
     1606.0         "YOU'RE DEAD, JIM."                                                  15940000
     1607.0                                                                              15950000
     1608.0         IF THE CURRENT LOC IS ZERO, IT MEANS THE CLOWN GOT                   15960000
     1609.0         HIMSELF KILLED.  WE'LL ALLOW THIS MAXDIE TIMES.  MAXDIE              15970000
     1610.0         IS AUTOMATICALLY SET BASED ON THE NUMBER OF SNIDE                    15980000
     1611.0         MESSAGES AVAILABLE.  EACH DEATH RESULTS IN A MESSAGE (81,            15990000
     1612.0         83, ETC.) WHICH OFFERS REINCARNATION; IF ACCEPTED, THIS              16000000
     1613.0         RESULTS IN MESSAGE 82, 84, ETC.  THE LAST TIME, IF HE                16010000
     1614.0         WANTS ANOTHER CHANCE, HE GETS A SNIDE REMARK AS WE EXIT.             16020000
     1615.0         WHEN REINCARNATED, ALL OBJECTS BEING CARRIED GET DROPPED             16030000
     1616.0         AT OLDLC2 (PRESUMABLY THE LAST PLACE PRIOR TO BEING                  16040000
     1617.0         KILLED) WITHOUT CHANGE OF PROPS.  THE LOOP RUNS BACKWARDS            16050000
     1618.0         TO ASSURE THAT THE BIRD IS DROPPED BEFORE THE CAGE.                  16060000
     1619.0         (THIS KLUGE COULD BE CHANGED ONCE WE'RE SURE ALL                     16070000
     1620.0         REFERENCES TO BIRD AND CAGE ARE DONE BY KEYWORDS.) THE               16080000
     1621.0         LAMP IS A SPECIAL CASE (IT WOULDN'T DO TO LEAVE IT IN THE            16090000
     1622.0         CAVE).  IT IS TURNED OFF AND LEFT OUTSIDE THE BUILDING               16100000
     1623.0         (ONLY IF HE WAS CARRYING IT, OF COURSE).  HE HIMSELF IS              16110000
     1624.0         LEFT INSIDE THE BUILDING (AND HEAVEN HELP HIM IF HE TRIES            16120000
     1625.0         TO XYZZY BACK INTO THE CAVE WITHOUT THE LAMP!).  OLDLOC              16130000
     1626.0         IS ZAPPED SO HE CAN'T JUST "RETREAT".                                16140000
     1627.0                                                                              16150000
     1628.0         THE EASIEST WAY TO GET KILLED IS TO FALL INTO A PIT IN               16160000
     1629.0         PITCH DARKNESS.                                                      16170000
     1630.0      */                                                                      16180000
     1631.0                                                                              16190000
     1632.0      L90:    CALL RSPEAK(23);                                                16200000
     1633.0              OLDLC2=LOC;                                                     16210000
     1634.0                                                                              16220000
     1635.0      /* OKAY, HE'S DEAD.  LET'S GET ON WITH IT. */                           16230000
     1636.0                                                                              16240000
     1637.0      L99:    IF CLOSNG THEN GOTO L95;                                        16250000
     1638.0              YEA=YES(81+NUMDIE*2,82+NUMDIE*2,54);                            16260000
     1639.0              NUMDIE=NUMDIE+1;                                                16270000
     1640.0              IF NUMDIE = MAXDIE |  ^YEA THEN GOTO L20000;                    16280000
     1641.0              PLACE(WATER)=0;                                                 16290000
     1642.0              PLACE(OIL)=0;                                                   16300000
     1643.0              IF TOTING(LAMP) THEN PROP(LAMP)=0;                              16310000
     1644.0              DO J=1 TO 100;                                                  16320000
     1645.0                  I=101-J;                                                    16330000
     1646.0                  IF ^TOTING(I) THEN GOTO L98;                                16340000
     1647.0                  K=OLDLC2;                                                   16350000
     1648.0                  IF I = LAMP THEN K=1;                                       16360000
     1649.0                  CALL DROP(I,K);                                             16370000
     1650.0      L98:        END;                                                        16380000
     1651.0              LOC=3;                                                          16390000
     1652.0              OLDLOC=LOC;                                                     16400000
     1653.0              GOTO L2000;                                                     16410000
     1654.0                                                                              16420000
     1655.0      /* HE DIED DURING CLOSING TIME.  NO RESURRECTION.  TALLY UP             16430000
     1656.0         A DEATH AND EXIT.  */                                                16440000
     1657.0                                                                              16450000
     1658.0      L95:    CALL RSPEAK(131);                                               16460000
     1659.0              NUMDIE=NUMDIE+1;                                                16470000
     1660.0              GOTO L20000;                                                    16480000
     1661.0                                                                              16490000
     1662.0    1 /*                                                                      16500000
     1663.0         ROUTINES FOR PERFORMING THE VARIOUS ACTION VERBS                     16510000
     1664.0                                                                              16520000
     1665.0         STATEMENT NUMBERS IN THIS SECTION ARE 8000 FOR                       16530000
     1666.0         INTRANSITIVE VERBS, 9000 FOR TRANSITIVE, PLUS TEN TIMES              16540000
     1667.0         THE VERB NUMBER.  MANY INTRANSITIVE VERBS USE THE                    16550000
     1668.0         TRANSITIVE CODE, AND SOME VERBS USE CODE FOR OTHER VERBS,            16560000
     1669.0         AS NOTED BELOW.                                                      16570000
     1670.0                                                                              16580000
     1671.0         RANDOM INTRANSITIVE VERBS COME HERE.  CLEAR OBJ JUST IN              16590000
     1672.0         CASE (SEE "ATTACK").                                                 16600000
     1673.0      */                                                                      16610000
     1674.0                                                                              16620000
     1675.0      L8000:  CALL A5TOA1(WD1,WD1X,TKWORD,K);                                 16630000
     1676.0              CALL LINESKP;                                                   16640000
     1677.0              PUT STRING (OUTSTR) EDIT                                        16650000
     1678.0                   ((TKWORD(I) DO I=1 TO K),' what?') (A,20 A);               16660000
     1679.0              CALL LINEOUT;                                                   16670000
     1680.0              OBJ=0;                                                          16680000
     1681.0              GOTO L2600;                                                     16690000
     1682.0                                                                              16700000
     1683.0      /* CARRY, NO OBJECT GIVEN YET.  OK IF ONLY ONE OBJECT PRESENT. */       16710000
     1684.0                                                                              16720000
     1685.0      L8010:  IF ATLOC(LOC) = 0 | LINK(ATLOC(LOC)) ^= 0 THEN GOTO L8000;      16730000
     1686.0              DO I=1 TO 5;                                                    16740000
     1687.0                  IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L8000;              16750000
     1688.0                  END;                                                        16760000
     1689.0              OBJ=ATLOC(LOC);                                                 16770000
     1690.0                                                                              16780000
     1691.0      /*                                                                      16790000
     1692.0         CARRY AN OBJECT.  SPECIAL CASES FOR BIRD AND CAGE (IF                16800000
     1693.0         BIRD IN CAGE, CAN'T TAKE ONE WITHOUT THE OTHER.  LIQUIDS             16810000
     1694.0         ALSO SPECIAL, SINCE THEY DEPEND ON STATUS OF BOTTLE.                 16820000
     1695.0         ALSO VARIOUS SIDE EFFECTS, ETC.                                      16830000
     1696.0      */                                                                      16840000
     1697.0                                                                              16850000
     1698.0      L9010:  IF TOTING(OBJ) THEN GOTO L2011;                                 16860000
     1699.0              SPK=25;                                                         16870000
     1700.0              IF OBJ = PLANT & PROP(PLANT) <= 0 THEN SPK=115;                 16880000
     1701.0              IF OBJ = BEAR & PROP(BEAR) = 1 THEN SPK=169;                    16890000
     1702.0              IF OBJ = CHAIN & PROP(BEAR) ^= 0 THEN SPK=170;                  16900000
     1703.0              IF FIXED(OBJ) ^= 0 THEN GOTO L2011;                             16910000
     1704.0              IF OBJ ^= WATER & OBJ ^= OIL THEN GOTO L9017;                   16920000
     1705.0              IF HERE(BOTTLE) & LIQ(0) = OBJ THEN GOTO L9018;                 16930000
     1706.0              OBJ=BOTTLE;                                                     16940000
     1707.0              IF TOTING(BOTTLE) & PROP(BOTTLE) = 1 THEN GOTO L9220;           16950000
     1708.0              IF PROP(BOTTLE) ^= 1 THEN SPK=105;                              16960000
     1709.0              IF ^TOTING(BOTTLE) THEN SPK=104;                                16970000
     1710.0              GOTO L2011;                                                     16980000
     1711.0      L9018:  OBJ=BOTTLE;                                                     16990000
     1712.0      L9017:  IF HOLDNG < 7 THEN GOTO L9016;                                  17000000
     1713.0              CALL RSPEAK(92);                                                17010000
     1714.0              GOTO L2012;                                                     17020000
     1715.0      L9016:  IF OBJ ^= BIRD THEN GOTO L9014;                                 17030000
     1716.0              IF PROP(BIRD) ^= 0 THEN GOTO L9014;                             17040000
     1717.0              IF ^TOTING(ROD) THEN GOTO L9013;                                17050000
     1718.0              CALL RSPEAK(26);                                                17060000
     1719.0              GOTO L2012;                                                     17070000
     1720.0      L9013:  IF TOTING(CAGE) THEN GOTO L9015;                                17080000
     1721.0              CALL RSPEAK(27);                                                17090000
     1722.0              GOTO L2012;                                                     17100000
     1723.0      L9015:  PROP(BIRD)=1;                                                   17110000
     1724.0      L9014:  IF (OBJ = BIRD | OBJ = CAGE) & PROP(BIRD) ^= 0                  17120000
     1725.0                  THEN CALL CARRY(BIRD+CAGE-OBJ,LOC);                         17130000
     1726.0              CALL CARRY(OBJ,LOC);                                            17140000
     1727.0              K=LIQ(0);                                                       17150000
     1728.0              IF OBJ = BOTTLE & K ^= 0 THEN PLACE(K)=-1;                      17160000
     1729.0              GOTO L2009;                                                     17170000
     1730.0                                                                              17180000
     1731.0      /*                                                                      17190000
     1732.0         DISCARD OBJECT.  "THROW" ALSO COMES HERE FOR MOST                    17200000
     1733.0         OBJECTS.  SPECIAL CASES FOR BIRD (MIGHT ATTACK SNAKE OR              17210000
     1734.0         DRAGON) AND CAGE (MIGHT CONTAIN BIRD) AND VASE.  DROP                17220000
     1735.0         COINS AT VENDING MACHINE FOR EXTRA BATTERIES.                        17230000
     1736.0      */                                                                      17240000
     1737.0                                                                              17250000
     1738.0      L9020:  IF TOTING(ROD2) & OBJ = ROD &  ^ TOTING(ROD) THEN OBJ=ROD2;     17260000
     1739.0              IF ^TOTING(OBJ) THEN GOTO L2011;                                17270000
     1740.0              IF OBJ ^= BIRD |  ^ HERE(SNAKE) THEN GOTO L9024;                17280000
     1741.0              CALL RSPEAK(30);                                                17290000
     1742.0              IF CLOSED THEN GOTO L19000;                                     17300000
     1743.0              CALL DSTROY(SNAKE);                                             17310000
     1744.0                                                                              17320000
     1745.0      /* SET PROP FOR USE BY TRAVEL OPTIONS */                                17330000
     1746.0                                                                              17340000
     1747.0              PROP(SNAKE)=1;                                                  17350000
     1748.0      L9021:  K=LIQ(0);                                                       17360000
     1749.0              IF K = OBJ THEN OBJ=BOTTLE;                                     17370000
     1750.0              IF OBJ = BOTTLE & K ^= 0 THEN PLACE(K)=0;                       17380000
     1751.0              IF OBJ = CAGE & PROP(BIRD) ^= 0 THEN CALL DROP(BIRD,LOC);       17390000
     1752.0              IF OBJ = BIRD THEN PROP(BIRD)=0;                                17400000
     1753.0              CALL DROP(OBJ,LOC);                                             17410000
     1754.0              GOTO L2012;                                                     17420000
     1755.0                                                                              17430000
     1756.0      L9024:  IF OBJ ^= COINS |  ^ HERE(VEND) THEN GOTO L9025;                17440000
     1757.0              CALL DSTROY(COINS);                                             17450000
     1758.0              CALL DROP(BATTER,LOC);                                          17460000
     1759.0              CALL PSPEAK(BATTER,0);                                          17470000
     1760.0              GOTO L2012;                                                     17480000
     1761.0                                                                              17490000
     1762.0      L9025:  IF OBJ ^= BIRD |  ^ AT(DRAGON) | PROP(DRAGON) ^= 0              17500000
     1763.0                     THEN GOTO L9026;                                         17510000
     1764.0              CALL RSPEAK(154);                                               17520000
     1765.0              CALL DSTROY(BIRD);                                              17530000
     1766.0              PROP(BIRD)=0;                                                   17540000
     1767.0              IF PLACE(SNAKE) = PLAC(SNAKE) THEN TALLY2=TALLY2+1;             17550000
     1768.0              GOTO L2012;                                                     17560000
     1769.0                                                                              17570000
     1770.0      L9026:  IF OBJ ^= BEAR |  ^AT(TROLL) THEN GOTO L9027;                   17580000
     1771.0              CALL RSPEAK(163);                                               17590000
     1772.0              CALL MOVE(TROLL,0);                                             17600000
     1773.0              CALL MOVE(TROLL+100,0);                                         17610000
     1774.0              CALL MOVE(TROLL2,PLAC(TROLL));                                  17620000
     1775.0              CALL MOVE(TROLL2+100,FIXD(TROLL));                              17630000
     1776.0              CALL JUGGLE(CHASM);                                             17640000
     1777.0              PROP(TROLL)=2;                                                  17650000
     1778.0              GOTO L9021;                                                     17660000
     1779.0                                                                              17670000
     1780.0      L9027:  IF OBJ = VASE & LOC ^= PLAC(PILLOW) THEN GOTO L9028;            17680000
     1781.0              CALL RSPEAK(54);                                                17690000
     1782.0              GOTO L9021;                                                     17700000
     1783.0                                                                              17710000
     1784.0      L9028:  PROP(VASE)=2;                                                   17720000
     1785.0              IF AT(PILLOW) THEN PROP(VASE)=0;                                17730000
     1786.0              CALL PSPEAK(VASE,PROP(VASE)+1);                                 17740000
     1787.0              IF PROP(VASE) ^= 0 THEN FIXED(VASE)=-1;                         17750000
     1788.0              GOTO L9021;                                                     17760000
     1789.0                                                                              17770000
     1790.0      /* SAY.  ECHO WD2 (OR WD1 IF NO WD2 (SAY WHAT?, ETC.).)                 17780000
     1791.0         MAGIC WORDS OVERRIDE.  */                                            17790000
     1792.0                                                                              17800000
     1793.0      L9030:  CALL A5TOA1(WD2,WD2X,TKWORD,K);                                 17810000
     1794.0              IF WD2 = '     ' THEN CALL A5TOA1(WD1,WD1X,TKWORD,K);           17820000
     1795.0              IF WD2 ^= '     ' THEN WD1=WD2;                                 17830000
     1796.0              I=VOCAB(WD1,-1);                                                17840000
     1797.0              IF I = 62 | I = 65 | I = 71 | I = 2025 THEN GOTO L9035;         17850000
     1798.0              CALL LINESKP;                                                   17860000
     1799.0              PUT STRING (OUTSTR) EDIT                                        17870000
     1800.0                     ('Okay, "',(TKWORD(I) DO I=1 TO K),'".') (A,20 A);       17880000
     1801.0              CALL LINEOUT;                                                   17890000
     1802.0              GOTO L2012;                                                     17900000
     1803.0                                                                              17910000
     1804.0      L9035:  WD2='     ';                                                    17920000
     1805.0              OBJ=0;                                                          17930000
     1806.0              GOTO L2630;                                                     17940000
     1807.0                                                                              17950000
     1808.0      /* LOCK, UNLOCK, NO OBJECT GIVEN.  ASSUME VARIOUS THINGS IF             17960000
     1809.0         PRESENT.  */                                                         17970000
     1810.0                                                                              17980000
     1811.0      L8040:  SPK=28;                                                         17990000
     1812.0              IF HERE(CLAM) THEN OBJ=CLAM;                                    18000000
     1813.0              IF HERE(OYSTER) THEN OBJ=OYSTER;                                18010000
     1814.0              IF AT(DOOR) THEN OBJ=DOOR;                                      18020000
     1815.0              IF AT(GRATE) THEN OBJ=GRATE;                                    18030000
     1816.0              IF OBJ ^= 0 & HERE(CHAIN) THEN GOTO L8000;                      18040000
     1817.0              IF HERE(CHAIN) THEN OBJ=CHAIN;                                  18050000
     1818.0              IF OBJ = 0 THEN GOTO L2011;                                     18060000
     1819.0                                                                              18070000
     1820.0      /* LOCK, UNLOCK OBJECT.  SPECIAL STUFF FOR OPENING                      18080000
     1821.0         CLAM/OYSTER AND FOR CHAIN.  */                                       18090000
     1822.0                                                                              18100000
     1823.0      L9040:  IF OBJ = CLAM | OBJ = OYSTER THEN GOTO L9046;                   18110000
     1824.0              IF OBJ = DOOR THEN SPK=111;                                     18120000
     1825.0              IF OBJ = DOOR & PROP(DOOR) = 1 THEN SPK=54;                     18130000
     1826.0              IF OBJ = CAGE THEN SPK=32;                                      18140000
     1827.0              IF OBJ = KEYS THEN SPK=55;                                      18150000
     1828.0              IF OBJ = GRATE | OBJ = CHAIN THEN SPK=31;                       18160000
     1829.0              IF SPK ^= 31 |  ^ HERE(KEYS) THEN GOTO L2011;                   18170000
     1830.0              IF OBJ = CHAIN THEN GOTO L9048;                                 18180000
     1831.0              IF ^CLOSNG THEN GOTO L9043;                                     18190000
     1832.0              K=130;                                                          18200000
     1833.0              IF ^PANIC THEN CLOCK2=15;                                       18210000
     1834.0              PANIC='1'B;                                                     18220000
     1835.0              GOTO L2010;                                                     18230000
     1836.0                                                                              18240000
     1837.0      L9043:  K=34+PROP(GRATE);                                               18250000
     1838.0              PROP(GRATE)=1;                                                  18260000
     1839.0              IF VERB = LOCK THEN PROP(GRATE)=0;                              18270000
     1840.0              K=K+2*PROP(GRATE);                                              18280000
     1841.0              GOTO L2010;                                                     18290000
     1842.0                                                                              18300000
     1843.0      /* CLAM/OYSTER. */                                                      18310000
     1844.0                                                                              18320000
     1845.0      L9046:  K=0;                                                            18330000
     1846.0              IF OBJ = OYSTER THEN K=1;                                       18340000
     1847.0              SPK=124+K;                                                      18350000
     1848.0              IF TOTING(OBJ) THEN SPK=120+K;                                  18360000
     1849.0              IF ^TOTING(TRIDNT) THEN SPK=122+K;                              18370000
     1850.0              IF VERB = LOCK THEN SPK=61;                                     18380000
     1851.0              IF SPK ^= 124 THEN GOTO L2011;                                  18390000
     1852.0              CALL DSTROY(CLAM);                                              18400000
     1853.0              CALL DROP(OYSTER,LOC);                                          18410000
     1854.0              CALL DROP(PEARL,105);                                           18420000
     1855.0              GOTO L2011;                                                     18430000
     1856.0                                                                              18440000
     1857.0      /* CHAIN. */                                                            18450000
     1858.0                                                                              18460000
     1859.0      L9048:  IF VERB = LOCK THEN GOTO L9049;                                 18470000
     1860.0              SPK=171;                                                        18480000
     1861.0              IF PROP(BEAR) = 0 THEN SPK=41;                                  18490000
     1862.0              IF PROP(CHAIN) = 0 THEN SPK=37;                                 18500000
     1863.0              IF SPK ^= 171 THEN GOTO L2011;                                  18510000
     1864.0              PROP(CHAIN)=0;                                                  18520000
     1865.0              FIXED(CHAIN)=0;                                                 18530000
     1866.0              IF PROP(BEAR) ^= 3 THEN PROP(BEAR)=2;                           18540000
     1867.0              FIXED(BEAR)=2-PROP(BEAR);                                       18550000
     1868.0              GOTO L2011;                                                     18560000
     1869.0                                                                              18570000
     1870.0      L9049:  SPK=172;                                                        18580000
     1871.0              IF PROP(CHAIN) ^= 0 THEN SPK=34;                                18590000
     1872.0              IF LOC ^= PLAC(CHAIN) THEN SPK=173;                             18600000
     1873.0              IF SPK ^= 172 THEN GOTO L2011;                                  18610000
     1874.0              PROP(CHAIN)=2;                                                  18620000
     1875.0              IF TOTING(CHAIN) THEN CALL DROP(CHAIN,LOC);                     18630000
     1876.0              FIXED(CHAIN)=-1;                                                18640000
     1877.0              GOTO L2011;                                                     18650000
     1878.0                                                                              18660000
     1879.0      /* LIGHT LAMP */                                                        18670000
     1880.0                                                                              18680000
     1881.0      L9070:  IF ^HERE(LAMP) THEN GOTO L2011;                                 18690000
     1882.0              SPK=184;                                                        18700000
     1883.0              IF LIMIT < 0 THEN GOTO L2011;                                   18710000
     1884.0              PROP(LAMP)=1;                                                   18720000
     1885.0              CALL RSPEAK(39);                                                18730000
     1886.0              IF WZDARK THEN GOTO L2000;                                      18740000
     1887.0              GOTO L2012;                                                     18750000
     1888.0                                                                              18760000
     1889.0      /* LAMP OFF */                                                          18770000
     1890.0                                                                              18780000
     1891.0      L9080:  IF ^HERE(LAMP) THEN GOTO L2011;                                 18790000
     1892.0              PROP(LAMP)=0;                                                   18800000
     1893.0              CALL RSPEAK(40);                                                18810000
     1894.0              IF DARK(0) THEN CALL RSPEAK(16);                                18820000
     1895.0              GOTO L2012;                                                     18830000
     1896.0                                                                              18840000
     1897.0      /* WAVE.  NO EFFECT UNLESS WAVING ROD AT FISSURE. */                    18850000
     1898.0                                                                              18860000
     1899.0      L9090:  IF (^TOTING(OBJ)) & (OBJ ^= ROD |  ^ TOTING(ROD2))              18870000
     1900.0               THEN SPK=29;                                                   18880000
     1901.0              IF OBJ ^= ROD |  ^ AT(FISSUR) |  ^ TOTING(OBJ)                  18890000
     1902.0               | CLOSNG THEN GOTO L2011;                                      18900000
     1903.0              PROP(FISSUR)=1-PROP(FISSUR);                                    18910000
     1904.0              CALL PSPEAK(FISSUR,2-PROP(FISSUR));                             18920000
     1905.0              GOTO L2012;                                                     18930000
     1906.0                                                                              18940000
     1907.0      /*                                                                      18950000
     1908.0         ATTACK.  ASSUME TARGET IF UNAMBIGUOUS.  "THROW" ALSO                 18960000
     1909.0         LINKS HERE.  ATTACKABLE OBJECTS FALL INTO TWO CATEGORIES:            18970000
     1910.0         ENEMIES (SNAKE, DWARF, ETC.) AND OTHERS (BIRD, CLAM).                18980000
     1911.0         AMBIGUOUS IF TWO ENEMIES, OR IF NO ENEMIES BUT TWO                   18990000
     1912.0         OTHERS.                                                              19000000
     1913.0      */                                                                      19010000
     1914.0                                                                              19020000
     1915.0      L9120:  DO I=1 TO 5;                                                    19030000
     1916.0                  IF DLOC(I) = LOC & DFLAG >= 2 THEN GOTO L9122;              19040000
     1917.0                  END;                                                        19050000
     1918.0              I=0;                                                            19060000
     1919.0      L9122:  IF OBJ ^= 0 THEN GOTO L9124;                                    19070000
     1920.0              IF I ^= 0 THEN OBJ=DWARF;                                       19080000
     1921.0              IF HERE(SNAKE) THEN OBJ=OBJ*100+SNAKE;                          19090000
     1922.0              IF AT(DRAGON) & PROP(DRAGON) = 0 THEN OBJ=OBJ*100+DRAGON;       19100000
     1923.0              IF AT(TROLL) THEN OBJ=OBJ*100+TROLL;                            19110000
     1924.0              IF HERE(BEAR) & PROP(BEAR) = 0 THEN OBJ=OBJ*100+BEAR;           19120000
     1925.0              IF OBJ > 100 THEN GOTO L8000;                                   19130000
     1926.0              IF OBJ ^= 0 THEN GOTO L9124;                                    19140000
     1927.0                                                                              19150000
     1928.0      /* CAN'T ATTACK BIRD BY THROWING AXE. */                                19160000
     1929.0                                                                              19170000
     1930.0              IF HERE(BIRD) & VERB ^= THROW THEN OBJ=BIRD;                    19180000
     1931.0                                                                              19190000
     1932.0      /* CLAM AND OYSTER BOTH TREATED AS CLAM FOR INTRANSITIVE                19200000
     1933.0         CASE; NO HARM DONE.  */                                              19210000
     1934.0                                                                              19220000
     1935.0              IF HERE(CLAM) | HERE(OYSTER) THEN OBJ=100*OBJ+CLAM;             19230000
     1936.0              IF OBJ > 100 THEN GOTO L8000;                                   19240000
     1937.0      L9124:  IF OBJ ^= BIRD THEN GOTO L9125;                                 19250000
     1938.0              SPK=137;                                                        19260000
     1939.0              IF CLOSED THEN GOTO L2011;                                      19270000
     1940.0              CALL DSTROY(BIRD);                                              19280000
     1941.0              PROP(BIRD)=0;                                                   19290000
     1942.0              IF PLACE(SNAKE) = PLAC(SNAKE) THEN TALLY2=TALLY2+1;             19300000
     1943.0              SPK=45;                                                         19310000
     1944.0      L9125:  IF OBJ = 0 THEN SPK=44;                                         19320000
     1945.0              IF OBJ = CLAM | OBJ = OYSTER THEN SPK=150;                      19330000
     1946.0              IF OBJ = SNAKE THEN SPK=46;                                     19340000
     1947.0              IF OBJ = DWARF THEN SPK=49;                                     19350000
     1948.0              IF OBJ = DWARF & CLOSED THEN GOTO L19000;                       19360000
     1949.0              IF OBJ = DRAGON THEN SPK=167;                                   19370000
     1950.0              IF OBJ = TROLL THEN SPK=157;                                    19380000
     1951.0              IF OBJ = BEAR THEN SPK=165+(PROP(BEAR)+1)/2;                    19390000
     1952.0              IF OBJ ^= DRAGON | PROP(DRAGON) ^= 0 THEN GOTO L2011;           19400000
     1953.0      /*                                                                      19410000
     1954.0         FUN STUFF FOR DRAGON.  IF HE INSISTS ON ATTACKING IT,                19420000
     1955.0         WIN!  SET PROP TO DEAD, MOVE DRAGON TO CENTRAL LOC (STILL            19430000
     1956.0         FIXED), MOVE RUG THERE (NOT FIXED), AND MOVE HIM THERE,              19440000
     1957.0         TOO.  THEN DO A NULL MOTION TO GET NEW DESCRIPTION.                  19450000
     1958.0      */                                                                      19460000
     1959.0              CALL RSPEAK(49);                                                19470000
     1960.0              VERB=0;                                                         19480000
     1961.0              OBJ=0;                                                          19490000
     1962.0              CALL GETIN(WD1,WD1X,WD2,WD2X);                                  19500000
     1963.0              IF WD1 ^= 'Y' & WD1 ^= 'YES' THEN GOTO L2608;                   19510000
     1964.0              CALL PSPEAK(DRAGON,1);                                          19520000
     1965.0              PROP(DRAGON)=2;                                                 19530000
     1966.0              PROP(RUG)=0;                                                    19540000
     1967.0              K=(PLAC(DRAGON)+FIXD(DRAGON))/2;                                19550000
     1968.0              CALL MOVE(DRAGON+100,-1);                                       19560000
     1969.0              CALL MOVE(RUG+100,0);                                           19570000
     1970.0              CALL MOVE(DRAGON,K);                                            19580000
     1971.0              CALL MOVE(RUG,K);                                               19590000
     1972.0              DO OBJ=1 TO 100;                                                19600000
     1973.0              IF PLACE(OBJ) = PLAC(DRAGON) | PLACE(OBJ) = FIXD(DRAGON)        19610000
     1974.0                   THEN CALL MOVE(OBJ,K);                                     19620000
     1975.0                  END;                                                        19630000
     1976.0              LOC=K;                                                          19640000
     1977.0              K=NULLX;                                                        19650000
     1978.0              GOTO L8;                                                        19660000
     1979.0                                                                              19670000
     1980.0      /*                                                                      19680000
     1981.0         POUR.  IF NO OBJECT, OR OBJECT IS BOTTLE, ASSUME CONTENTS            19690000
     1982.0         OF BOTTLE.  SPECIAL TESTS FOR POURING WATER OR OIL ON                19700000
     1983.0         PLANT OR RUSTY DOOR.                                                 19710000
     1984.0      */                                                                      19720000
     1985.0                                                                              19730000
     1986.0      L9130:  IF OBJ = BOTTLE | OBJ = 0 THEN OBJ=LIQ(0);                      19740000
     1987.0              IF OBJ = 0 THEN GOTO L8000;                                     19750000
     1988.0              IF ^TOTING(OBJ) THEN GOTO L2011;                                19760000
     1989.0              SPK=78;                                                         19770000
     1990.0              IF OBJ ^= OIL & OBJ ^= WATER THEN GOTO L2011;                   19780000
     1991.0              PROP(BOTTLE)=1;                                                 19790000
     1992.0              PLACE(OBJ)=0;                                                   19800000
     1993.0              SPK=77;                                                         19810000
     1994.0              IF ^(AT(PLANT) | AT(DOOR)) THEN GOTO L2011;                     19820000
     1995.0                                                                              19830000
     1996.0              IF AT(DOOR) THEN GOTO L9132;                                    19840000
     1997.0              SPK=112;                                                        19850000
     1998.0              IF OBJ ^= WATER THEN GOTO L2011;                                19860000
     1999.0              CALL PSPEAK(PLANT,PROP(PLANT)+1);                               19870000
     2000.0              PROP(PLANT)=MOD(PROP(PLANT)+2,6);                               19880000
     2001.0              PROP(PLANT2)=PROP(PLANT)/2;                                     19890000
     2002.0              K=NULLX;                                                        19900000
     2003.0              GOTO L8;                                                        19910000
     2004.0                                                                              19920000
     2005.0      L9132:  PROP(DOOR)=0;                                                   19930000
     2006.0              IF OBJ = OIL THEN PROP(DOOR)=1;                                 19940000
     2007.0              SPK=113+PROP(DOOR);                                             19950000
     2008.0              GOTO L2011;                                                     19960000
     2009.0                                                                              19970000
     2010.0      /*                                                                      19980000
     2011.0         EAT.  INTRANSITIVE:  ASSUME FOOD IF PRESENT, ELSE ASK                19990000
     2012.0         WHAT.  TRANSITIVE:  FOOD OK, SOME THINGS LOSE APPETITE,              20000000
     2013.0         REST ARE RIDICULOUS.                                                 20010000
     2014.0      */                                                                      20020000
     2015.0                                                                              20030000
     2016.0      L8140:  IF ^HERE(FOOD) THEN GOTO L8000;                                 20040000
     2017.0      L8142:  CALL DSTROY(FOOD);                                              20050000
     2018.0              SPK=72;                                                         20060000
     2019.0              GOTO L2011;                                                     20070000
     2020.0                                                                              20080000
     2021.0      L9140:  IF OBJ = FOOD THEN GOTO L8142;                                  20090000
     2022.0              IF OBJ = BIRD | OBJ = SNAKE | OBJ = CLAM | OBJ = OYSTER         20100000
     2023.0               | OBJ = DWARF | OBJ = DRAGON | OBJ = TROLL                     20110000
     2024.0               | OBJ = BEAR THEN SPK=71;                                      20120000
     2025.0              GOTO L2011;                                                     20130000
     2026.0                                                                              20140000
     2027.0      /*                                                                      20150000
     2028.0         DRINK.  IF NO OBJECT, ASSUME WATER AND LOOK FOR IT HERE.             20160000
     2029.0         IF WATER IS IN THE BOTTLE, DRINK THAT, ELSE MUST BE AT A             20170000
     2030.0         WATER LOC, SO DRINK STREAM.                                          20180000
     2031.0      */                                                                      20190000
     2032.0                                                                              20200000
     2033.0      L9150:  IF OBJ = 0 & LIQLOC(LOC) ^= WATER & (LIQ(0) ^= WATER            20210000
     2034.0               |  ^ HERE(BOTTLE)) THEN GOTO L8000;                            20220000
     2035.0              IF OBJ ^= 0 & OBJ ^= WATER THEN SPK=110;                        20230000
     2036.0              IF SPK = 110 | LIQ(0) ^= WATER |  ^ HERE(BOTTLE)                20240000
     2037.0                   THEN GOTO L2011;                                           20250000
     2038.0              PROP(BOTTLE)=1;                                                 20260000
     2039.0              PLACE(WATER)=0;                                                 20270000
     2040.0              SPK=74;                                                         20280000
     2041.0              GOTO L2011;                                                     20290000
     2042.0                                                                              20300000
     2043.0      /* RUB.  YIELDS VARIOUS SNIDE REMARKS. */                               20310000
     2044.0                                                                              20320000
     2045.0      L9160:  IF OBJ ^= LAMP THEN SPK=76;                                     20330000
     2046.0              GOTO L2011;                                                     20340000
     2047.0                                                                              20350000
     2048.0      /*                                                                      20360000
     2049.0         THROW.  SAME AS DISCARD UNLESS AXE.  THEN SAME AS ATTACK             20370000
     2050.0         EXCEPT IGNORE BIRD, AND IF DWARF IS PRESENT THEN ONE                 20380000
     2051.0         MIGHT BE KILLED.  (ONLY WAY TO DO SO!) AXE ALSO SPECIAL              20390000
     2052.0         FOR DRAGON, BEAR, AND TROLL.  TREASURES SPECIAL FOR                  20400000
     2053.0         TROLL.                                                               20410000
     2054.0      */                                                                      20420000
     2055.0                                                                              20430000
     2056.0      L9170:  IF TOTING(ROD2) & OBJ = ROD &  ^ TOTING(ROD) THEN OBJ=ROD2;     20440000
     2057.0              IF ^TOTING(OBJ) THEN GOTO L2011;                                20450000
     2058.0              IF OBJ >= 50 & OBJ <= MAXTRS & AT(TROLL) THEN GOTO L9178;       20460000
     2059.0              IF OBJ = FOOD & HERE(BEAR) THEN GOTO L9177;                     20470000
     2060.0              IF OBJ ^= AXE THEN GOTO L9020;                                  20480000
     2061.0              DO I=1 TO 5;                                                    20490000
     2062.0                                                                              20500000
     2063.0      /* NEEDN'T CHECK DFLAG IF AXE IS HERE. */                               20510000
     2064.0                                                                              20520000
     2065.0                  IF DLOC(I) = LOC THEN GOTO L9172;                           20530000
     2066.0                  END;                                                        20540000
     2067.0              SPK=152;                                                        20550000
     2068.0              IF AT(DRAGON) & PROP(DRAGON) = 0 THEN GOTO L9175;               20560000
     2069.0              SPK=158;                                                        20570000
     2070.0              IF AT(TROLL) THEN GOTO L9175;                                   20580000
     2071.0              IF HERE(BEAR) & PROP(BEAR) = 0 THEN GOTO L9176;                 20590000
     2072.0              OBJ=0;                                                          20600000
     2073.0              GOTO L9120;                                                     20610000
     2074.0                                                                              20620000
     2075.0      L9172:  SPK=48;                                                         20630000
     2076.0                                                                              20640000
     2077.0                                                                              20650000
     2078.0              IF RAN(3) = 0 THEN GO TO L9175;                                 20660000
     2079.0              DSEEN(I)='0'B;                                                  20670000
     2080.0              DLOC(I)=0;                                                      20680000
     2081.0              SPK=47;                                                         20690000
     2082.0              DKILL=DKILL+1;                                                  20700000
     2083.0              IF DKILL = 1 THEN SPK=149;                                      20710000
     2084.0      L9175:  CALL RSPEAK(SPK);                                               20720000
     2085.0              CALL DROP(AXE,LOC);                                             20730000
     2086.0              K=NULLX;                                                        20740000
     2087.0              GOTO L8;                                                        20750000
     2088.0                                                                              20760000
     2089.0      /* THIS'LL TEACH HIM TO THROW THE AXE AT THE BEAR! */                   20770000
     2090.0                                                                              20780000
     2091.0      L9176:  SPK=164;                                                        20790000
     2092.0              CALL DROP(AXE,LOC);                                             20800000
     2093.0              FIXED(AXE)=-1;                                                  20810000
     2094.0              PROP(AXE)=1;                                                    20820000
     2095.0              CALL JUGGLE(BEAR);                                              20830000
     2096.0              GOTO L2011;                                                     20840000
     2097.0                                                                              20850000
     2098.0      /* BUT THROWING FOOD IS ANOTHER STORY. */                               20860000
     2099.0                                                                              20870000
     2100.0      L9177:  OBJ=BEAR;                                                       20880000
     2101.0              GOTO L9210;                                                     20890000
     2102.0                                                                              20900000
     2103.0      L9178:  SPK=159;                                                        20910000
     2104.0                                                                              20920000
     2105.0      /* SNARF A TREASURE FOR THE TROLL. */                                   20930000
     2106.0                                                                              20940000
     2107.0              CALL DROP(OBJ,0);                                               20950000
     2108.0              CALL MOVE(TROLL,0);                                             20960000
     2109.0              CALL MOVE(TROLL+100,0);                                         20970000
     2110.0              CALL DROP(TROLL2,PLAC(TROLL));                                  20980000
     2111.0              CALL DROP(TROLL2+100,FIXD(TROLL));                              20990000
     2112.0              CALL JUGGLE(CHASM);                                             21000000
     2113.0              GOTO L2011;                                                     21010000
     2114.0                                                                              21020000
     2115.0      /* QUIT.  INTRANSITIVE ONLY.  VERIFY INTENT AND EXIT IF                 21030000
     2116.0         THAT'S WHAT HE WANTS.  */                                            21040000
     2117.0                                                                              21050000
     2118.0      L8180:  GAVEUP=YES(22,54,54);                                           21060000
     2119.0      L8185:  IF GAVEUP THEN GOTO L20000;                                     21070000
     2120.0              GOTO L2012;                                                     21080000
     2121.0                                                                              21090000
     2122.0      /* FIND.  MIGHT BE CARRYING IT, OR IT MIGHT BE HERE.  ELSE              21100000
     2123.0         GIVE CAVEAT.  */                                                     21110000
     2124.0                                                                              21120000
     2125.0      L9190:  IF AT(OBJ) | (LIQ(0) = OBJ & AT(BOTTLE))                        21130000
     2126.0               | K = LIQLOC(LOC) THEN SPK=94;                                 21140000
     2127.0              DO I=1 TO 5;                                                    21150000
     2128.0                  IF DLOC(I) = LOC & DFLAG >= 2 & OBJ = DWARF THEN SPK=94;    21160000
     2129.0                  END;                                                        21170000
     2130.0              IF CLOSED THEN SPK=138;                                         21180000
     2131.0              IF TOTING(OBJ) THEN SPK=24;                                     21190000
     2132.0              GOTO L2011;                                                     21200000
     2133.0                                                                              21210000
     2134.0      /* INVENTORY.  IF OBJECT, TREAT SAME AS FIND.  ELSE REPORT              21220000
     2135.0         ON CURRENT BURDEN.  */                                               21230000
     2136.0                                                                              21240000
     2137.0      L8200:  SPK=98;                                                         21250000
     2138.0              DO I=1 TO 100;                                                  21260000
     2139.0                 IF I = BEAR |  ^ TOTING(I) THEN GOTO L8201;                  21270000
     2140.0                 IF SPK = 98 THEN CALL RSPEAK(99);                            21280000
     2141.0                 BLKLIN='0'B;                                                 21290000
     2142.0                 CALL PSPEAK(I,-1);                                           21300000
     2143.0                 BLKLIN='1'B;                                                 21310000
     2144.0                 SPK=0;                                                       21320000
     2145.0      L8201:     END;                                                         21330000
     2146.0              IF TOTING(BEAR) THEN SPK=141;                                   21340000
     2147.0              GOTO L2011;                                                     21350000
     2148.0                                                                              21360000
     2149.0      /*                                                                      21370000
     2150.0      FEED.  IF BIRD, NO SEED.  SNAKE, DRAGON, TROLL:  QUIP.  IF              21380000
     2151.0         DWARF, MAKE HIM MAD.  BEAR, SPECIAL.                                 21390000
     2152.0      */                                                                      21400000
     2153.0                                                                              21410000
     2154.0      L9210:  IF OBJ ^= BIRD THEN GOTO L9212;                                 21420000
     2155.0              SPK=100;                                                        21430000
     2156.0              GOTO L2011;                                                     21440000
     2157.0                                                                              21450000
     2158.0      L9212:  IF OBJ ^= SNAKE & OBJ ^= DRAGON & OBJ ^= TROLL THEN GOTO L9213; 21460000
     2159.0              SPK=102;                                                        21470000
     2160.0              IF OBJ = DRAGON & PROP(DRAGON) ^= 0 THEN SPK=110;               21480000
     2161.0              IF OBJ = TROLL THEN SPK=182;                                    21490000
     2162.0              IF OBJ ^= SNAKE | CLOSED |  ^ HERE(BIRD) THEN GOTO L2011;       21500000
     2163.0              SPK=101;                                                        21510000
     2164.0              CALL DSTROY(BIRD);                                              21520000
     2165.0              PROP(BIRD)=0;                                                   21530000
     2166.0              TALLY2=TALLY2+1;                                                21540000
     2167.0              GOTO L2011;                                                     21550000
     2168.0                                                                              21560000
     2169.0      L9213:  IF OBJ ^= DWARF THEN GOTO L9214;                                21570000
     2170.0              IF ^HERE(FOOD) THEN GOTO L2011;                                 21580000
     2171.0              SPK=103;                                                        21590000
     2172.0              DFLAG=DFLAG+1;                                                  21600000
     2173.0              GOTO L2011;                                                     21610000
     2174.0                                                                              21620000
     2175.0      L9214:  IF OBJ ^= BEAR THEN GOTO L9215;                                 21630000
     2176.0              IF PROP(BEAR) = 0 THEN SPK=102;                                 21640000
     2177.0              IF PROP(BEAR) = 3 THEN SPK=110;                                 21650000
     2178.0              IF ^HERE(FOOD) THEN GOTO L2011;                                 21660000
     2179.0              CALL DSTROY(FOOD);                                              21670000
     2180.0              PROP(BEAR)=1;                                                   21680000
     2181.0              FIXED(AXE)=0;                                                   21690000
     2182.0              PROP(AXE)=0;                                                    21700000
     2183.0              SPK=168;                                                        21710000
     2184.0              GOTO L2011;                                                     21720000
     2185.0                                                                              21730000
     2186.0      L9215:  SPK=14;                                                         21740000
     2187.0              GOTO L2011;                                                     21750000
     2188.0                                                                              21760000
     2189.0      /* FILL.  BOTTLE MUST BE EMPTY, AND SOME LIQUID AVAILABLE.              21770000
     2190.0         (VASE IS NASTY.) */                                                  21780000
     2191.0                                                                              21790000
     2192.0      L9220:  IF OBJ = VASE THEN GOTO L9222;                                  21800000
     2193.0              IF OBJ ^= 0 & OBJ ^= BOTTLE THEN GOTO L2011;                    21810000
     2194.0              IF OBJ = 0 &  ^ HERE(BOTTLE) THEN GOTO L8000;                   21820000
     2195.0              SPK=107;                                                        21830000
     2196.0              IF LIQLOC(LOC) = 0 THEN SPK=106;                                21840000
     2197.0              IF LIQ(0) ^= 0 THEN SPK=105;                                    21850000
     2198.0              IF SPK ^= 107 THEN GOTO L2011;                                  21860000
     2199.0              PROP(BOTTLE)=MOD(COND(LOC),4)/2;                                21870000
     2200.0              PROP(BOTTLE)=PROP(BOTTLE)*2;                                    21880000
     2201.0              K=LIQ(0);                                                       21890000
     2202.0              IF TOTING(BOTTLE) THEN PLACE(K)=-1;                             21900000
     2203.0              IF K = OIL THEN SPK=108;                                        21910000
     2204.0              GOTO L2011;                                                     21920000
     2205.0                                                                              21930000
     2206.0      L9222:  SPK=29;                                                         21940000
     2207.0              IF LIQLOC(LOC) = 0 THEN SPK=144;                                21950000
     2208.0              IF LIQLOC(LOC) = 0 |  ^TOTING(VASE) THEN GOTO L2011;            21960000
     2209.0              CALL RSPEAK(145);                                               21970000
     2210.0              PROP(VASE)=2;                                                   21980000
     2211.0              FIXED(VASE)=-1;                                                 21990000
     2212.0              GOTO L9024;                                                     22000000
     2213.0                                                                              22010000
     2214.0      /* BLAST.  NO EFFECT UNLESS YOU'VE GOT DYNAMITE, WHICH IS A             22020000
     2215.0         NEAT TRICK!  */                                                      22030000
     2216.0                                                                              22040000
     2217.0      L9230:  IF PROP(ROD2) < 0 |  ^ CLOSED THEN GOTO L2011;                  22050000
     2218.0              BONUS=133;                                                      22060000
     2219.0              IF LOC = 115 THEN BONUS=134;                                    22070000
     2220.0              IF HERE(ROD2) THEN BONUS=135;                                   22080000
     2221.0              CALL RSPEAK(BONUS);                                             22090000
     2222.0              GOTO L20000;                                                    22100000
     2223.0                                                                              22110000
     2224.0      /* SCORE.  GO TO SCORING SECTION, WHICH WILL RETURN TO 8241             22120000
     2225.0         IF SCORNG IS TRUE.  */                                               22130000
     2226.0                                                                              22140000
     2227.0      L8240:  SCORNG='1'B;                                                    22150000
     2228.0              GOTO L20000;                                                    22160000
     2229.0                                                                              22170000
     2230.0      L8241:  SCORNG='0'B;                                                    22180000
     2231.0              CALL LINESKP;                                                   22190000
     2232.0              PUT STRING (OUTSTR) EDIT                                        22200000
     2233.0                   ('If you were to quit now, you would score ',              22210000
     2234.0                  SCORE,' out of a possible',MXSCOR,'.') (A,F(4),A,F(4),A);   22220000
     2235.0              CALL LINEOUT;                                                   22230000
     2236.0              GAVEUP=YES(143,54,54);                                          22240000
     2237.0              GOTO L8185;                                                     22250000
     2238.0                                                                              22260000
     2239.0      /*                                                                      22270000
     2240.0         FEE FIE FOE FOO (AND FUM).  ADVANCE TO NEXT STATE IF GIVEN           22280000
     2241.0         IN PROPER ORDER.  LOOK UP WD1 IN SECTION 3 OF VOCAB TO               22290000
     2242.0         DETERMINE WHICH WORD WE'VE GOT.  LAST WORD ZIPS THE EGGS             22300000
     2243.0         BACK TO THE GIANT ROOM (UNLESS ALREADY THERE).                       22310000
     2244.0      */                                                                      22320000
     2245.0                                                                              22330000
     2246.0      L8250:  K=VOCAB(WD1,3);                                                 22340000
     2247.0              SPK=42;                                                         22350000
     2248.0              IF FOOBAR = 1-K THEN GOTO L8252;                                22360000
     2249.0              IF FOOBAR ^= 0 THEN SPK=151;                                    22370000
     2250.0              GOTO L2011;                                                     22380000
     2251.0                                                                              22390000
     2252.0      L8252:  FOOBAR=K;                                                       22400000
     2253.0              IF K ^= 4 THEN GOTO L2009;                                      22410000
     2254.0              FOOBAR=0;                                                       22420000
     2255.0              IF PLACE(EGGS) = PLAC(EGGS)                                     22430000
     2256.0               | (TOTING(EGGS) & LOC = PLAC(EGGS)) THEN GOTO L2011;           22440000
     2257.0                                                                              22450000
     2258.0      /* BRING BACK TROLL IF WE STEAL THE EGGS BACK FROM HIM                  22460000
     2259.0         BEFORE CROSSING.  */                                                 22470000
     2260.0                                                                              22480000
     2261.0              IF PLACE(EGGS) = 0 & PLACE(TROLL) = 0 & PROP(TROLL) = 0         22490000
     2262.0               THEN PROP(TROLL)=1;                                            22500000
     2263.0              K=2;                                                            22510000
     2264.0              IF HERE(EGGS) THEN K=1;                                         22520000
     2265.0              IF LOC = PLAC(EGGS) THEN K=0;                                   22530000
     2266.0              CALL MOVE(EGGS,PLAC(EGGS));                                     22540000
     2267.0              CALL PSPEAK(EGGS,K);                                            22550000
     2268.0              GOTO L2012;                                                     22560000
     2269.0                                                                              22570000
     2270.0      /* BRIEF.  INTRANSITIVE ONLY.  SUPPRESS LONG DESCRIPTIONS               22580000
     2271.0         AFTER FIRST TIME.  */                                                22590000
     2272.0                                                                              22600000
     2273.0      L8260:  SPK=156;                                                        22610000
     2274.0              ABBNUM=10000;                                                   22620000
     2275.0              DETAIL=3;                                                       22630000
     2276.0              GOTO L2011;                                                     22640000
     2277.0                                                                              22650000
     2278.0      /* READ.  MAGAZINES IN DWARVISH, MESSAGE WE'VE SEEN, AND .              22660000
     2279.0         .  .  OYSTER?  */                                                    22670000
     2280.0                                                                              22680000
     2281.0      L8270:  IF HERE(MAGZIN) THEN OBJ=MAGZIN;                                22690000
     2282.0              IF HERE(TABLET) THEN OBJ=OBJ*100+TABLET;                        22700000
     2283.0              IF HERE(MESSAG) THEN OBJ=OBJ*100+MESSAG;                        22710000
     2284.0              IF CLOSED & TOTING(OYSTER) THEN OBJ=OYSTER;                     22720000
     2285.0              IF OBJ > 100 | OBJ = 0 | DARK(0) THEN GOTO L8000;               22730000
     2286.0                                                                              22740000
     2287.0      L9270:  IF DARK(0) THEN GOTO L5190;                                     22750000
     2288.0              IF OBJ = MAGZIN THEN SPK=190;                                   22760000
     2289.0              IF OBJ = TABLET THEN SPK=196;                                   22770000
     2290.0              IF OBJ = MESSAG THEN SPK=191;                                   22780000
     2291.0              IF OBJ = OYSTER & HINTED(2) & TOTING(OYSTER) THEN SPK=194;      22790000
     2292.0              IF OBJ ^= OYSTER | HINTED(2) |  ^TOTING(OYSTER)                 22800000
     2293.0               |  ^CLOSED THEN GOTO L2011;                                    22810000
     2294.0              HINTED(2)=YES(192,193,54);                                      22820000
     2295.0              GOTO L2012;                                                     22830000
     2296.0                                                                              22840000
     2297.0      /* BREAK.  ONLY WORKS FOR MIRROR IN REPOSITORY AND, OF                  22850000
     2298.0         COURSE, THE VASE.  */                                                22860000
     2299.0                                                                              22870000
     2300.0      L9280:  IF OBJ = MIRROR THEN SPK=148;                                   22880000
     2301.0              IF OBJ = VASE & PROP(VASE) = 0 THEN GOTO L9282;                 22890000
     2302.0              IF OBJ ^= MIRROR |  ^CLOSED THEN GOTO L2011;                    22900000
     2303.0              CALL RSPEAK(197);                                               22910000
     2304.0              GOTO L19000;                                                    22920000
     2305.0                                                                              22930000
     2306.0      L9282:  SPK=198;                                                        22940000
     2307.0              IF TOTING(VASE) THEN CALL DROP(VASE,LOC);                       22950000
     2308.0              PROP(VASE)=2;                                                   22960000
     2309.0              FIXED(VASE)=-1;                                                 22970000
     2310.0              GOTO L2011;                                                     22980000
     2311.0                                                                              22990000
     2312.0      /* WAKE.  ONLY USE IS TO DISTURB THE DWARVES. */                        23000000
     2313.0                                                                              23010000
     2314.0      L9290:  IF OBJ ^= DWARF |  ^CLOSED THEN GOTO L2011;                     23020000
     2315.0              CALL RSPEAK(199);                                               23030000
     2316.0              GOTO L19000;                                                    23040000
     2317.0                                                                              23050000
     2318.0      /*                                                                      23060000
     2319.0         SUSPEND.  OFFER TO EXIT LEAVING THINGS RESTARTABLE, BUT              23070000
     2320.0         REQUIRING A DELAY BEFORE RESTARTING (SO CAN'T SAVE THE               23080000
     2321.0         WORLD BEFORE TRYING SOMETHING RISKY).  UPON RESTARTING,              23090000
     2322.0         SETUP=-1 CAUSES RETURN TO 8305 TO PICK UP AGAIN.                     23100000
     2323.0      */                                                                      23110000
     2324.0                                                                              23120000
     2325.0      L8300:  PUT STRING (OUTSTR) EDIT                                        23130000
     2326.0                    ('Can''t suspend on this machine') (A);                   23140000
     2327.0              CALL LINEOUT;                                                   23150000
     2328.0              GO TO L2012;                                                    23160000
     2329.0                                                                              23170000
     2330.0      /* HOURS.  REPORT CURRENT NON-PRIME-TIME HOURS. */                      23180000
     2331.0                                                                              23190000
     2332.0      L8310:  PUT STRING (OUTSTR) EDIT ('Open all day!') (A);                 23200000
     2333.0              CALL LINEOUT;                                                   23210000
     2334.0              GOTO L2012;                                                     23220000
     2335.0                                                                              23230000
     2336.0      /* LOG.  TOGGLE LOGGIN EITHER ON OR OFF */                              23240000
     2337.0                                                                              23250000
     2338.0      SETLOG: LOGON = ^ LOGON;                                                23260000
     2339.0              IF LOGON THEN PUT STRING (OUTSTR) EDIT ('Log on.') (A);         23270000
     2340.0                       ELSE PUT STRING (OUTSTR) EDIT ('Log off.') (A);        23280000
     2341.0              CALL LINEOUT;                                                   23290000
     2342.0              CALL LINESKP;                                                   23300000
     2343.0              GO TO L2012;                                                    23310000
     2344.0                                                                              23320000
     2345.0    1 /*                                                                      23330000
     2346.0         HINTS                                                                23340000
     2347.0                                                                              23350000
     2348.0         COME HERE IF HE'S BEEN LONG ENOUGH AT REQUIRED LOC(S) FOR            23360000
     2349.0         SOME UNUSED HINT.  HINT NUMBER IS IN VARIABLE "HINT".                23370000
     2350.0         BRANCH TO QUICK TEST FOR ADDITIONAL CONDITIONS, THEN COME            23380000
     2351.0         BACK TO DO NEAT STUFF.  GOTO 40010 IF CONDITIONS ARE MET             23390000
     2352.0         AND WE WANT TO OFFER THE HINT.  GOTO 40020 TO CLEAR                  23400000
     2353.0         HINTLC BACK TO ZERO, 40030 TO TAKE NO ACTION YET.                    23410000
     2354.0      */                                                                      23420000
     2355.0                                                                              23430000
     2356.0      L40000: SELECT (HINT-4);                                                23440000
     2357.0                  WHEN (00) GO TO L40400;        /* CAVE */                   23450000
     2358.0                  WHEN (01) GO TO L40500;        /* BIRD */                   23460000
     2359.0                  WHEN (02) GO TO L40600;        /* SNAKE */                  23470000
     2360.0                  WHEN (03) GO TO L40700;        /* MAZE */                   23480000
     2361.0                  WHEN (04) GO TO L40800;        /* DARK */                   23490000
     2362.0                  WHEN (05) GO TO L40900;        /* WITT */                   23500000
     2363.0                  END;                                                        23510000
     2364.0              CALL BUG(27);                                                   23520000
     2365.0                                                                              23530000
     2366.0      L40010: HINTLC(HINT)=0;                                                 23540000
     2367.0              IF ^YES(HINTS(HINT,3),0,54) THEN GOTO L2602;                    23550000
     2368.0              CALL LINESKP;                                                   23560000
     2369.0              PUT STRING (OUTSTR) EDIT                                        23570000
     2370.0                ('I am prepared to give you a hint, but it will cost you',    23580000
     2371.0                   HINTS(HINT,2),' points.') (A,F(2),A);                      23590000
     2372.0              CALL LINEOUT;                                                   23600000
     2373.0              HINTED(HINT)=YES(175,HINTS(HINT,4),54);                         23610000
     2374.0              IF HINTED(HINT) & LIMIT > 30                                    23620000
     2375.0                     THEN LIMIT=LIMIT+30*HINTS(HINT,2);                       23630000
     2376.0      L40020: HINTLC(HINT)=0;                                                 23640000
     2377.0      L40030: GOTO L2602;                                                     23650000
     2378.0                                                                              23660000
     2379.0      /* NOW FOR THE QUICK TESTS.  SEE DATABASE DESCRIPTION FOR               23670000
     2380.0         ONE-LINE NOTES.  */                                                  23680000
     2381.0                                                                              23690000
     2382.0      L40400: IF PROP(GRATE) = 0 &  ^ HERE(KEYS) THEN GOTO L40010;            23700000
     2383.0              GOTO L40020;                                                    23710000
     2384.0                                                                              23720000
     2385.0      L40500: IF HERE(BIRD) & TOTING(ROD) & OBJ = BIRD THEN GOTO L40010;      23730000
     2386.0              GOTO L40030;                                                    23740000
     2387.0                                                                              23750000
     2388.0      L40600: IF HERE(SNAKE) &  ^ HERE(BIRD) THEN GOTO L40010;                23760000
     2389.0              GOTO L40020;                                                    23770000
     2390.0                                                                              23780000
     2391.0      L40700: IF ATLOC(LOC) = 0 & ATLOC(OLDLOC) = 0                           23790000
     2392.0               & ATLOC(OLDLC2) = 0 & HOLDNG > 1 THEN GOTO L40010;             23800000
     2393.0              GOTO L40020;                                                    23810000
     2394.0                                                                              23820000
     2395.0      L40800: IF PROP(EMRALD) ^= -1 & PROP(PYRAM) = -1 THEN GOTO L40010;      23830000
     2396.0              GOTO L40020;                                                    23840000
     2397.0                                                                              23850000
     2398.0      L40900: GOTO L40010;                                                    23860000
     2399.0                                                                              23870000
     2400.0    1 /*                                                                      23880000
     2401.0         CAVE CLOSING AND SCORING                                             23890000
     2402.0                                                                              23900000
     2403.0                                                                              23910000
     2404.0         THESE SECTIONS HANDLE THE CLOSING OF THE CAVE.  THE CAVE             23920000
     2405.0         CLOSES "CLOCK1" TURNS AFTER THE LAST TREASURE HAS BEEN               23930000
     2406.0         LOCATED (INCLUDING THE PIRATE'S CHEST, WHICH MAY OF                  23940000
     2407.0         COURSE NEVER SHOW UP).  NOTE THAT THE TREASURES NEED NOT             23950000
     2408.0         HAVE BEEN TAKEN YET, JUST LOCATED.  HENCE CLOCK1 MUST BE             23960000
     2409.0         LARGE ENOUGH TO GET OUT OF THE CAVE (IT ONLY TICKS WHILE             23970000
     2410.0         INSIDE THE CAVE).  WHEN IT HITS ZERO, WE BRANCH TO 10000             23980000
     2411.0         TO START CLOSING THE CAVE, AND THEN SIT BACK AND WAIT FOR            23990000
     2412.0         HIM TO TRY TO GET OUT.  IF HE DOESN'T WITHIN CLOCK2                  24000000
     2413.0         TURNS, WE CLOSE THE CAVE; IF HE DOES TRY, WE ASSUME HE               24010000
     2414.0         PANICS, AND GIVE HIM A FEW ADDITIONAL TURNS TO GET                   24020000
     2415.0         FRANTIC BEFORE WE CLOSE.  WHEN CLOCK2 HITS ZERO, WE                  24030000
     2416.0         BRANCH TO 11000 TO TRANSPORT HIM INTO THE FINAL PUZZLE.              24040000
     2417.0         NOTE THAT THE PUZZLE DEPENDS UPON ALL SORTS OF RANDOM                24050000
     2418.0         THINGS.  FOR INSTANCE, THERE MUST BE NO WATER OR OIL,                24060000
     2419.0         SINCE THERE ARE BEANSTALKS WHICH WE DON'T WANT TO BE ABLE            24070000
     2420.0         TO WATER, SINCE THE CODE CAN'T HANDLE IT.  ALSO, WE CAN              24080000
     2421.0         HAVE NO KEYS, SINCE THERE IS A GRATE (HAVING MOVED THE               24090000
     2422.0         FIXED OBJECT!) THERE SEPARATING HIM FROM ALL THE                     24100000
     2423.0         TREASURES.  MOST OF THESE PROBLEMS ARISE FROM THE USE OF             24110000
     2424.0         NEGATIVE PROP NUMBERS TO SUPPRESS THE OBJECT DESCRIPTIONS            24120000
     2425.0         UNTIL HE'S ACTUALLY MOVED THE OBJECTS.                               24130000
     2426.0                                                                              24140000
     2427.0         WHEN THE FIRST WARNING COMES, WE LOCK THE GRATE, DESTROY             24150000
     2428.0         THE BRIDGE, KILL ALL THE DWARVES (AND THE PIRATE), REMOVE            24160000
     2429.0         THE TROLL AND BEAR (UNLESS DEAD), AND SET "CLOSNG" TO                24170000
     2430.0         TRUE.  LEAVE THE DRAGON; TOO MUCH TROUBLE TO MOVE IT.                24180000
     2431.0         FROM NOW UNTIL CLOCK2 RUNS OUT, HE CANNOT UNLOCK THE                 24190000
     2432.0         GRATE, MOVE TO ANY LOCATION OUTSIDE THE CAVE (LOC<9), OR             24200000
     2433.0         CREATE THE BRIDGE.  NOR CAN HE BE RESURRECTED IF HE DIES.            24210000
     2434.0         NOTE THAT THE SNAKE IS ALREADY GONE, SINCE HE GOT TO THE             24220000
     2435.0         TREASURE ACCESSIBLE ONLY VIA THE HALL OF THE MT.  KING.              24230000
     2436.0         ALSO, HE'S BEEN IN GIANT ROOM (TO GET EGGS), SO WE CAN               24240000
     2437.0         REFER TO IT.  ALSO ALSO, HE'S GOTTEN THE PEARL, SO WE                24250000
     2438.0         KNOW THE BIVALVE IS AN OYSTER.  *AND*, THE DWARVES MUST              24260000
     2439.0         HAVE BEEN ACTIVATED, SINCE WE'VE FOUND CHEST.                        24270000
     2440.0      */                                                                      24280000
     2441.0                                                                              24290000
     2442.0      L10000: PROP(GRATE)=0;                                                  24300000
     2443.0              PROP(FISSUR)=0;                                                 24310000
     2444.0              DO I=1 TO 6;                                                    24320000
     2445.0                  DSEEN(I)='0'B;                                              24330000
     2446.0                  END;                                                        24340000
     2447.0              CALL MOVE(TROLL,0);                                             24350000
     2448.0              CALL MOVE(TROLL+100,0);                                         24360000
     2449.0              CALL MOVE(TROLL2,PLAC(TROLL));                                  24370000
     2450.0              CALL MOVE(TROLL2+100,FIXD(TROLL));                              24380000
     2451.0              CALL JUGGLE(CHASM);                                             24390000
     2452.0              IF PROP(BEAR) ^= 3 THEN CALL DSTROY(BEAR);                      24400000
     2453.0              PROP(CHAIN)=0;                                                  24410000
     2454.0              FIXED(CHAIN)=0;                                                 24420000
     2455.0              PROP(AXE)=0;                                                    24430000
     2456.0              FIXED(AXE)=0;                                                   24440000
     2457.0              CALL RSPEAK(129);                                               24450000
     2458.0              CLOCK1=-1;                                                      24460000
     2459.0              CLOSNG='1'B;                                                    24470000
     2460.0              GOTO L19999;                                                    24480000
     2461.0                                                                              24490000
     2462.0      /*                                                                      24500000
     2463.0         ONCE HE'S PANICKED, AND CLOCK2 HAS RUN OUT, WE COME HERE             24510000
     2464.0         TO SET UP THE STORAGE ROOM.  THE ROOM HAS TWO LOCS,                  24520000
     2465.0         HARDWIRED AS 115 (NE) AND 116 (SW).  AT THE NE END, WE               24530000
     2466.0         PLACE EMPTY BOTTLES, A NURSERY OF PLANTS, A BED OF                   24540000
     2467.0         OYSTERS, A PILE OF LAMPS, RODS WITH STARS, SLEEPING                  24550000
     2468.0         DWARVES, AND HIM.  AND THE SW END WE PLACE GRATE OVER                24560000
     2469.0         TREASURES, SNAKE PIT, COVEY OF CAGED BIRDS, MORE RODS,               24570000
     2470.0         AND PILLOWS.  A MIRROR STRETCHES ACROSS ONE WALL.  MANY              24580000
     2471.0         OF THE OBJECTS COME FROM KNOWN LOCATIONS AND/OR STATES               24590000
     2472.0         (E.G.  THE SNAKE IS KNOWN TO HAVE BEEN DESTROYED AND                 24600000
     2473.0         NEEDN'T BE CARRIED AWAY FROM ITS OLD "PLACE"), MAKING THE            24610000
     2474.0         VARIOUS OBJECTS BE HANDLED DIFFERENTLY.  WE ALSO DROP ALL            24620000
     2475.0         OTHER OBJECTS HE MIGHT BE CARRYING (LEST HE HAVE SOME                24630000
     2476.0         WHICH COULD CAUSE TROUBLE, SUCH AS THE KEYS).  WE                    24640000
     2477.0         DESCRIBE THE FLASH OF LIGHT AND TRUNDLE BACK.                        24650000
     2478.0      */                                                                      24660000
     2479.0                                                                              24670000
     2480.0      L11000: PROP(BOTTLE)=PUT(BOTTLE,115,1);                                 24680000
     2481.0              PROP(PLANT)=PUT(PLANT,115,0);                                   24690000
     2482.0              PROP(OYSTER)=PUT(OYSTER,115,0);                                 24700000
     2483.0              PROP(LAMP)=PUT(LAMP,115,0);                                     24710000
     2484.0              PROP(ROD)=PUT(ROD,115,0);                                       24720000
     2485.0              PROP(DWARF)=PUT(DWARF,115,0);                                   24730000
     2486.0              LOC=115;                                                        24740000
     2487.0              OLDLOC=115;                                                     24750000
     2488.0              NEWLOC=115;                                                     24760000
     2489.0                                                                              24770000
     2490.0      /* LEAVE THE GRATE WITH NORMAL (NON-NEGATIVE PROPERTY). */              24780000
     2491.0                                                                              24790000
     2492.0              FOO=PUT(GRATE,116,0);                                           24800000
     2493.0              PROP(SNAKE)=PUT(SNAKE,116,1);                                   24810000
     2494.0              PROP(BIRD)=PUT(BIRD,116,1);                                     24820000
     2495.0              PROP(CAGE)=PUT(CAGE,116,0);                                     24830000
     2496.0              PROP(ROD2)=PUT(ROD2,116,0);                                     24840000
     2497.0              PROP(PILLOW)=PUT(PILLOW,116,0);                                 24850000
     2498.0                                                                              24860000
     2499.0              PROP(MIRROR)=PUT(MIRROR,115,0);                                 24870000
     2500.0              FIXED(MIRROR)=116;                                              24880000
     2501.0                                                                              24890000
     2502.0              DO I=1 TO 100;                                                  24900000
     2503.0                  IF TOTING(I) THEN CALL DSTROY(I);                           24910000
     2504.0                  END;                                                        24920000
     2505.0                                                                              24930000
     2506.0              CALL RSPEAK(132);                                               24940000
     2507.0              CLOSED='1'B;                                                    24950000
     2508.0              GOTO L2;                                                        24960000
     2509.0                                                                              24970000
     2510.0      /*                                                                      24980000
     2511.0         ANOTHER WAY WE CAN FORCE AN END TO THINGS IS BY HAVING               24990000
     2512.0         THE LAMP GIVE OUT.  WHEN IT GETS CLOSE, WE COME HERE TO              25000000
     2513.0         WARN HIM.  WE GO TO 12000 IF THE LAMP AND FRESH BATTERIES            25010000
     2514.0         ARE HERE, IN WHICH CASE WE REPLACE THE BATTERIES AND                 25020000
     2515.0         CONTINUE.  12200 IS FOR OTHER CASES OF LAMP DYING.  12400            25030000
     2516.0         IS WHEN IT GOES OUT, AND 12600 IS IF HE'S WANDERED                   25040000
     2517.0         OUTSIDE AND THE LAMP IS USED UP, IN WHICH CASE WE FORCE              25050000
     2518.0         HIM TO GIVE UP.                                                      25060000
     2519.0      */                                                                      25070000
     2520.0                                                                              25080000
     2521.0      L12000: CALL RSPEAK(188);                                               25090000
     2522.0              PROP(BATTER)=1;                                                 25100000
     2523.0              IF TOTING(BATTER) THEN CALL DROP(BATTER,LOC);                   25110000
     2524.0              LIMIT=LIMIT+2500;                                               25120000
     2525.0              LMWARN='0'B;                                                    25130000
     2526.0              GOTO L19999;                                                    25140000
     2527.0                                                                              25150000
     2528.0      L12200: IF LMWARN |  ^HERE(LAMP) THEN GOTO L19999;                      25160000
     2529.0              LMWARN='1'B;                                                    25170000
     2530.0              SPK=187;                                                        25180000
     2531.0              IF PLACE(BATTER) = 0 THEN SPK=183;                              25190000
     2532.0              IF PROP(BATTER) = 1 THEN SPK=189;                               25200000
     2533.0              CALL RSPEAK(SPK);                                               25210000
     2534.0              GOTO L19999;                                                    25220000
     2535.0                                                                              25230000
     2536.0      L12400: LIMIT=-1;                                                       25240000
     2537.0              PROP(LAMP)=0;                                                   25250000
     2538.0              IF HERE(LAMP) THEN CALL RSPEAK(184);                            25260000
     2539.0              GOTO L19999;                                                    25270000
     2540.0                                                                              25280000
     2541.0      L12600: CALL RSPEAK(185);                                               25290000
     2542.0              GAVEUP='1'B;                                                    25300000
     2543.0              GOTO L20000;                                                    25310000
     2544.0                                                                              25320000
     2545.0      /* OH DEAR, HE'S DISTURBED THE DWARVES. */                              25330000
     2546.0                                                                              25340000
     2547.0      L19000: CALL RSPEAK(136);                                               25350000
     2548.0                                                                              25360000
     2549.0      /*                                                                      25370000
     2550.0         EXIT CODE.  WILL EVENTUALLY INCLUDE SCORING.  FOR NOW, HOWEVER, ...  25380000
     2551.0                                                                              25390000
     2552.0         THE PRESENT SCORING ALGORITHM IS AS FOLLOWS:                         25400000
     2553.0            OBJECTIVE:          POINTS:        PRESENT TOTAL POSSIBLE:        25410000
     2554.0         GETTING WELL INTO CAVE   25                    25                    25420000
     2555.0         EACH TREASURE < CHEST    12                    60                    25430000
     2556.0         TREASURE CHEST ITSELF    14                    14                    25440000
     2557.0         EACH TREASURE > CHEST    16                   144                    25450000
     2558.0         SURVIVING             (MAX-NUM)*10             30                    25460000
     2559.0         NOT QUITTING              4                     4                    25470000
     2560.0         REACHING "CLOSNG"        25                    25                    25480000
     2561.0         "CLOSED": QUIT/KILLED    10                                          25490000
     2562.0                   KLUTZED        25                                          25500000
     2563.0                   WRONG WAY      30                                          25510000
     2564.0                   SUCCESS        45                    45                    25520000
     2565.0         CAME TO WITT'S END        1                     1                    25530000
     2566.0         ROUND OUT THE TOTAL       2                     2                    25540000
     2567.0                                              TOTAL:   350                    25550000
     2568.0         (POINTS CAN ALSO BE DEDUCTED FOR USING HINTS.)                       25560000
     2569.0      */                                                                      25570000
     2570.0                                                                              25580000
     2571.0      L20000: SCORE=0;                                                        25590000
     2572.0              MXSCOR=0;                                                       25600000
     2573.0                                                                              25610000
     2574.0      /*                                                                      25620000
     2575.0         FIRST TALLY UP THE TREASURES.  MUST BE IN BUILDING AND               25630000
     2576.0         NOT BROKEN.  GIVE THE POOR GUY 2 POINTS JUST FOR FINDING             25640000
     2577.0         EACH TREASURE.                                                       25650000
     2578.0      */                                                                      25660000
     2579.0                                                                              25670000
     2580.0              DO I=50 TO MAXTRS;                                              25680000
     2581.0                  IF PTEXT(I) ^= 0 THEN DO;                                   25690000
     2582.0                      K=12;                                                   25700000
     2583.0                      IF I = CHEST THEN K=14;                                 25710000
     2584.0                      IF I > CHEST THEN K=16;                                 25720000
     2585.0                      IF PROP(I) >= 0 THEN SCORE=SCORE+2;                     25730000
     2586.0                      IF PLACE(I) = 3 & PROP(I) = 0 THEN SCORE=SCORE+K-2;     25740000
     2587.0                      MXSCOR=MXSCOR+K;                                        25750000
     2588.0                      END;                                                    25760000
     2589.0                  END;                                                        25770000
     2590.0                                                                              25780000
     2591.0      /*                                                                      25790000
     2592.0         NOW LOOK AT HOW HE FINISHED AND HOW FAR HE GOT.  MAXDIE              25800000
     2593.0         AND NUMDIE TELL US HOW WELL HE SURVIVED.  GAVEUP SAYS                25810000
     2594.0         WHETHER HE EXITED VIA QUIT.  DFLAG WILL TELL US IF HE                25820000
     2595.0         EVER GOT SUITABLY DEEP INTO THE CAVE.  CLOSNG STILL                  25830000
     2596.0         INDICATES WHETHER HE REACHED THE ENDGAME.  AND IF HE GOT             25840000
     2597.0         AS FAR AS "CAVE CLOSED" (INDICATED BY "CLOSED"), THEN                25850000
     2598.0         BONUS IS ZERO FOR MUNDANE EXITS OR 133, 134, 135 IF HE               25860000
     2599.0         BLEW IT (SO TO SPEAK).                                               25870000
     2600.0      */                                                                      25880000
     2601.0                                                                              25890000
     2602.0              SCORE=SCORE+(MAXDIE-NUMDIE)*10;                                 25900000
     2603.0              MXSCOR=MXSCOR+MAXDIE*10;                                        25910000
     2604.0              IF ^(SCORNG | GAVEUP) THEN SCORE=SCORE+4;                       25920000
     2605.0              MXSCOR=MXSCOR+4;                                                25930000
     2606.0              IF DFLAG ^= 0 THEN SCORE=SCORE+25;                              25940000
     2607.0              MXSCOR=MXSCOR+25;                                               25950000
     2608.0              IF CLOSNG THEN SCORE=SCORE+25;                                  25960000
     2609.0              MXSCOR=MXSCOR+25;                                               25970000
     2610.0              IF ^CLOSED THEN GOTO L20020;                                    25980000
     2611.0              IF BONUS = 0 THEN SCORE=SCORE+10;                               25990000
     2612.0              IF BONUS = 135 THEN SCORE=SCORE+25;                             26000000
     2613.0              IF BONUS = 134 THEN SCORE=SCORE+30;                             26010000
     2614.0              IF BONUS = 133 THEN SCORE=SCORE+45;                             26020000
     2615.0      L20020: MXSCOR=MXSCOR+45;                                               26030000
     2616.0                                                                              26040000
     2617.0      /* DID HE COME TO WITT'S END AS HE SHOULD? */                           26050000
     2618.0                                                                              26060000
     2619.0              IF PLACE(MAGZIN) = 108 THEN SCORE=SCORE+1;                      26070000
     2620.0              MXSCOR=MXSCOR+1;                                                26080000
     2621.0                                                                              26090000
     2622.0      /* ROUND IT OFF. */                                                     26100000
     2623.0                                                                              26110000
     2624.0              SCORE=SCORE+2;                                                  26120000
     2625.0              MXSCOR=MXSCOR+2;                                                26130000
     2626.0                                                                              26140000
     2627.0      /* DEDUCT POINTS FOR HINTS.  HINTS < 4 ARE SPECIAL; SEE                 26150000
     2628.0         DATABASE DESCRIPTION.  */                                            26160000
     2629.0                                                                              26170000
     2630.0              DO I=1 TO HNTMAX;                                               26180000
     2631.0                  IF HINTED(I) THEN SCORE=SCORE-HINTS(I,2);                   26190000
     2632.0                  END;                                                        26200000
     2633.0                                                                              26210000
     2634.0      /* RETURN TO SCORE COMMAND IF THAT'S WHERE WE CAME FROM. */             26220000
     2635.0                                                                              26230000
     2636.0              IF SCORNG THEN GOTO L8241;                                      26240000
     2637.0                                                                              26250000
     2638.0      /* THAT SHOULD BE GOOD ENOUGH.  LET'S TELL HIM ALL ABOUT IT. */         26260000
     2639.0                                                                              26270000
     2640.0              CALL LINESKP;                                                   26280000
     2641.0              CALL LINESKP;                                                   26290000
     2642.0              CALL LINESKP;                                                   26300000
     2643.0              PUT STRING (OUTSTR) EDIT                                        26310000
     2644.0                  ('You scored',SCORE,' out of a possible',                   26320000
     2645.0                  MXSCOR,' using',TURNS,' turns.')                            26330000
     2646.0                 (A,F(4),A,F(4),A,F(4),A);                                    26340000
     2647.0              CALL LINEOUT;                                                   26350000
     2648.0                                                                              26360000
     2649.0              DO I=1 TO CLSSES;                                               26370000
     2650.0                  IF CVAL(I) >= SCORE THEN GOTO L20210;                       26380000
     2651.0                  END;                                                        26390000
     2652.0              CALL LINESKP;                                                   26400000
     2653.0              PUT STRING (OUTSTR) EDIT ('You just went of my scale!!') (A);   26410000
     2654.0              CALL LINEOUT;                                                   26420000
     2655.0              GOTO L25000;                                                    26430000
     2656.0                                                                              26440000
     2657.0      L20210: CALL SPEAK(CTEXT(I));                                           26450000
     2658.0              IF I = CLSSES-1 THEN GOTO L20220;                               26460000
     2659.0              K=CVAL(I)+1-SCORE;                                              26470000
     2660.0              KKWORD='s.';                                                    26480000
     2661.0              IF K = 1 THEN KKWORD='. ';                                      26490000
     2662.0              CALL LINESKP;                                                   26500000
     2663.0              PUT STRING (OUTSTR) EDIT                                        26510000
     2664.0                  ('To achieve the next higher rating, you need',             26520000
     2665.0                     K,' more point',KKWORD) (A,F(3),A,A(2));                 26530000
     2666.0              CALL LINEOUT;                                                   26540000
     2667.0              GOTO L25000;                                                    26550000
     2668.0                                                                              26560000
     2669.0      L20220: CALL LINESKP;                                                   26570000
     2670.0              PUT STRING (OUTSTR) EDIT                                        26580000
     2671.0               ('To achieve the next higher rating would be a neat trick!')   26590000
     2672.0                     (A);                                                     26600000
     2673.0              CALL LINEOUT;                                                   26610000
     2674.0              CALL LINESKP;                                                   26620000
     2675.0              PUT STRING (OUTSTR) EDIT ('Congratulations!!') (A);             26630000
     2676.0              CALL LINEOUT;                                                   26640000
     2677.0                                                                              26650000
     2678.0      L25000: CALL LINESKP;                                                   26660000
     2679.0              STOP;                                                           26670000
     2680.0    1 /*  SUBROUTINES/FUNCTIONS                                               26680000
     2681.0                                                                              26690000
     2682.0                                                                              26700000
     2683.0         TOTING(OBJ)  = TRUE IF THE OBJ IS BEING CARRIED                      26710000
     2684.0         HERE(OBJ)    = TRUE IF THE OBJ IS AT "LOC" (OR IS BEING CARRIED)     26720000
     2685.0         AT(OBJ)      = TRUE IF ON EITHER SIDE OF TWO-PLACED OBJECT           26730000
     2686.0         LIQ(DUMMY)   = OBJECT NUMBER OF LIQUID IN BOTTLE                     26740000
     2687.0         LIQLOC(LOC)  = OBJECT NUMBER OF LIQUID (IF ANY) AT LOC               26750000
     2688.0         BITSET(L,N)  = TRUE IF COND(L) HAS BIT N SET (BIT 0 IS UNITS BIT)    26760000
     2689.0         FORCED(LOC)  = TRUE IF LOC MOVES WITHOUT ASKING FOR INPUT (COND=2)   26770000
     2690.0         DARK(DUMMY)  = TRUE IF LOCATION "LOC" IS DARK                        26780000
     2691.0         PCT(N)       = TRUE N% OF THE TIME (N INTEGER FROM 0 TO 100)         26790000
     2692.0                                                                              26800000
     2693.0      */                                                                      26810000
     2694.0                                                                              26820000
     2695.0      TOTING: PROC (OBJ) RETURNS (BIT(1));                                    26830000
     2696.0                                                                              26840000
     2697.0              DCL OBJ FIXED BIN(31);                                          26850000
     2698.0                                                                              26860000
     2699.0              RETURN(PLACE(OBJ) = -1);                                        26870000
     2700.0              END;                                                            26880000
     2701.0                                                                              26890000
     2702.0      HERE: PROC (OBJ) RETURNS (BIT(1));                                      26900000
     2703.0                                                                              26910000
     2704.0              DCL OBJ FIXED BIN(31);                                          26920000
     2705.0                                                                              26930000
     2706.0              RETURN(PLACE(OBJ) = LOC | TOTING(OBJ));                         26940000
     2707.0              END;                                                            26950000
     2708.0                                                                              26960000
     2709.0      AT: PROC (OBJ) RETURNS (BIT(1));                                        26970000
     2710.0                                                                              26980000
     2711.0              DCL OBJ FIXED BIN (31);                                         26990000
     2712.0                                                                              27000000
     2713.0              RETURN(PLACE(OBJ) = LOC | FIXED (OBJ) = LOC);                   27010000
     2714.0              END;                                                            27020000
     2715.0                                                                              27030000
     2716.0      LIQ2: PROC (PBOTL) RETURNS (FIXED BIN(31));                             27040000
     2717.0                                                                              27050000
     2718.0              DCL PBOTL FIXED BIN(31);                                        27060000
     2719.0              DCL LIQ2TEMP FIXED BIN(31);                                     27070000
     2720.0                                                                              27080000
     2721.0              LIQ2TEMP=PBOTL/2;                                               27090000
     2722.0              RETURN((1-PBOTL)*WATER+(LIQ2TEMP)*(WATER+OIL));                 27100000
     2723.0              END;                                                            27110000
     2724.0                                                                              27120000
     2725.0      LIQ: PROC (DUMMY) RETURNS (FIXED BIN(31));                              27130000
     2726.0                                                                              27140000
     2727.0              DCL DUMMY FIXED BIN(31);                                        27150000
     2728.0                                                                              27160000
     2729.0              RETURN(LIQ2(MAX(PROP(BOTTLE),-1-PROP(BOTTLE))));                27170000
     2730.0              END;                                                            27180000
     2731.0                                                                              27190000
     2732.0      LIQLOC: PROC (LOC) RETURNS (FIXED BIN(31));                             27200000
     2733.0                                                                              27210000
     2734.0              DCL LOC FIXED BIN(31);                                          27220000
     2735.0              DCL (LIQTEMP1,LIQTEMP2) FIXED BIN(31);                          27230000
     2736.0                                                                              27240000
     2737.0              LIQTEMP1=COND(LOC)/2;                                           27250000
     2738.0              LIQTEMP1=LIQTEMP1*2;                                            27260000
     2739.0              LIQTEMP2=COND(LOC)/4;                                           27270000
     2740.0              RETURN(LIQ2((MOD(LIQTEMP1,8)-5)*MOD(LIQTEMP2,2)+1));            27280000
     2741.0              END;                                                            27290000
     2742.0                                                                              27300000
     2743.0      BITSET: PROC (L,N) RETURNS (BIT(1));                                    27310000
     2744.0                                                                              27320000
     2745.0              DCL (L,N) FIXED BIN(31);                                        27330000
     2746.0              DCL BITTEMP FIXED BIN(31) STATIC;                               27340000
     2747.0                                                                              27350000
     2748.0              BITTEMP=COND(L)/2**N;                                           27360000
     2749.0              RETURN(MOD(BITTEMP,2) ^= 0);                                    27370000
     2750.0              END;                                                            27380000
     2751.0                                                                              27390000
     2752.0      FORCED: PROC (LOC) RETURNS (BIT(1));                                    27400000
     2753.0                                                                              27410000
     2754.0              DCL LOC FIXED BIN(31);                                          27420000
     2755.0                                                                              27430000
     2756.0              RETURN(COND(LOC) = 2);                                          27440000
     2757.0              END;                                                            27450000
     2758.0                                                                              27460000
     2759.0      DARK: PROC (DUMMY) RETURNS (BIT(1));                                    27470000
     2760.0                                                                              27480000
     2761.0              DCL DUMMY FIXED BIN(31);                                        27490000
     2762.0                                                                              27500000
     2763.0              RETURN(MOD(COND(LOC),2) = 0 &                                   27510000
     2764.0                   (PROP(LAMP) = 0 | ^ HERE(LAMP)));                          27520000
     2765.0              END;                                                            27530000
     2766.0                                                                              27540000
     2767.0      PCT: PROC (N) RETURNS (BIT(1));                                         27550000
     2768.0                                                                              27560000
     2769.0              DCL N FIXED BIN(31);                                            27570000
     2770.0                                                                              27580000
     2771.0              RETURN(RAN(100) < N);                                           27590000
     2772.0              END;                                                            27600000
     2773.0    1 /* I/O ROUTINES (SPEAK, PSPEAK, RSPEAK, GETIN, YES, A5TOA1) */          27610000
     2774.0                                                                              27620000
     2775.0                                                                              27630000
     2776.0      SPEAK: PROC (N);                                                        27640000
     2777.0                                                                              27650000
     2778.0              DCL N FIXED BIN(31);                                            27660000
     2779.0              DCL (I,K,L) FIXED BIN (31);                                     27670000
     2780.0                                                                              27680000
     2781.0      /*                                                                      27690000
     2782.0         PRINT THE MESSAGE WHICH STARTS AT LINES(N).  PRECEDE IT              27700000
     2783.0         WITH A BLANK LINE UNLESS BLKLIN IS FALSE.                            27710000
     2784.0      */                                                                      27720000
     2785.0                                                                              27730000
     2786.0              IF N = 0 THEN RETURN;                                           27740000
     2787.0              IF LINES(N+1) = '>$<' THEN RETURN;                              27750000
     2788.0              IF (BLKLIN) THEN CALL LINESKP;                                  27760000
     2789.0              K=N;                                                            27770000
     2790.0      L1:     L=ABS(LINES(K))-1;                                              27780000
     2791.0              K=K+1;                                                          27790000
     2792.0              PUT STRING (OUTSTR) EDIT ((LINES(I) DO I=K TO L)) (14 A(5));    27800000
     2793.0              CALL LINEOUT;                                                   27810000
     2794.0              K=L+1;                                                          27820000
     2795.0              IF LINES(K) >= 0 THEN GOTO L1;                                  27830000
     2796.0              RETURN;                                                         27840000
     2797.0              END;                                                            27850000
     2798.0                                                                              27860000
     2799.0                                                                              27870000
     2800.0                                                                              27880000
     2801.0      PSPEAK:PROC (MSG,SKIP);                                                 27890000
     2802.0                                                                              27900000
     2803.0              DCL (MSG,SKIP) FIXED BIN(31);                                   27910000
     2804.0              DCL (I,M) FIXED BIN (31);                                       27920000
     2805.0                                                                              27930000
     2806.0      /*                                                                      27940000
     2807.0         FIND THE SKIP+1ST MESSAGE FROM MSG AND PRINT IT.  MSG                27950000
     2808.0         SHOULD BE THE INDEX OF THE INVENTORY MESSAGE FOR OBJECT.             27960000
     2809.0         (INVEN+N+1 MESSAGE IS PROP=N MESSAGE).                               27970000
     2810.0      */                                                                      27980000
     2811.0                                                                              27990000
     2812.0              M=PTEXT(MSG);                                                   28000000
     2813.0              IF SKIP < 0 THEN GOTO L9;                                       28010000
     2814.0              DO I=0 TO SKIP;                                                 28020000
     2815.0      L1:         M=ABS(LINES(M));                                            28030000
     2816.0                  IF LINES(M) >= 0 THEN GOTO L1;                              28040000
     2817.0                  END;                                                        28050000
     2818.0      L9:     CALL SPEAK(M);                                                  28060000
     2819.0              RETURN;                                                         28070000
     2820.0              END;                                                            28080000
     2821.0                                                                              28090000
     2822.0                                                                              28100000
     2823.0                                                                              28110000
     2824.0      RSPEAK: PROC (I);                                                       28120000
     2825.0                                                                              28130000
     2826.0              DCL I FIXED BIN(31);                                            28140000
     2827.0                                                                              28150000
     2828.0      /* PRINT THE I-TH "RANDOM" MESSAGE (SECTION 6 OF DATABASE). */          28160000
     2829.0                                                                              28170000
     2830.0              IF I ^= 0 THEN CALL SPEAK(RTEXT(I));                            28180000
     2831.0              RETURN;                                                         28190000
     2832.0              END;                                                            28200000
     2833.0                                                                              28210000
     2834.0      GETIN: PROC (WORD1,WORD1X,WORD2,WORD2X);                                28220000
     2835.0                                                                              28230000
     2836.0      /*                                                                      28240000
     2837.0         GET A COMMAND FROM THE ADVENTURER.  SNARF OUT THE FIRST              28250000
     2838.0         WORD, PAD IT WITH BLANKS, AND RETURN IT IN WORD1.  CHARS             28260000
     2839.0         6 THRU 10 ARE RETURNED IN WORD1X, IN CASE WE NEED TO                 28270000
     2840.0         PRINT OUT THE WHOLE WORD IN AN ERROR MESSAGE.  ANY NUMBER            28280000
     2841.0         OF BLANKS MAY FOLLOW THE WORD.  IF A SECOND WORD APPEARS,            28290000
     2842.0         IT IS RETURNED IN WORD2 (CHARS 6 THRU 10 IN WORD2X), ELSE            28300000
     2843.0         WORD2 IS SET TO ZERO.                                                28310000
     2844.0      */                                                                      28320000
     2845.0                                                                              28330000
     2846.0              DCL (WORD1,WORD1X,WORD2,WORD2X) CHAR(5);                        28340000
     2847.0                                                                              28350000
     2848.0              WORD1,WORD1X,WORD2,WORD2X='     ';                              28360000
     2849.0              IF LOGON THEN PUT SKIP;                                         28370000
     2850.0              WORDSTRT=0;                                                     28380000
     2851.0              DO WHILE (WORDSTRT = 0);                                        28390000
     2852.0                  IF BLKLIN THEN CALL LINESKP;                                28400000
     2853.0                  CALL TREAD(INSTR,0,INSTR,INLEN,CCODE);                      28410000
     2854.0                  IF CCODE = 1 THEN DO;                                       28420000
     2855.0                      OUTSTR=SUBSTR(INSTR,1,INLEN);                           28430000
     2856.0                      WORDSTRT=VERIFY(OUTSTR,' ');                            28440000
     2857.0                      END;                                                    28450000
     2858.0                  ELSE DO;                                                    28460000
     2859.0                      IF BLKLIN THEN CALL LINESKP;                            28470000
     2860.0                      PUT STRING (OUTSTR) EDIT                                28480000
     2861.0                         ('Terminal error..reenter.') (A);                    28490000
     2862.0                      CALL LINEOUT;                                           28500000
     2863.0                      END;                                                    28510000
     2864.0                  END;                                                        28520000
     2865.0              IF LOGON THEN PUT SKIP EDIT (OUTSTR) (A);                       28530000
     2866.0              OUTSTR=SUBSTR(OUTSTR,WORDSTRT);                                 28540000
     2867.0              WORDEND=INDEX(OUTSTR,' ')-1;                                    28550000
     2868.0              IF WORDEND=-1 THEN WORDEND=LENGTH(OUTSTR);                      28560000
     2869.0              WORDSIZE=MIN(WORDEND,5);                                        28570000
     2870.0              WORD1=SUBSTR(OUTSTR,1,WORDSIZE);                                28580000
     2871.0              IF WORDEND > 5 THEN DO;                                         28590000
     2872.0                  WORDSIZE=MIN(WORDEND-5,5);                                  28600000
     2873.0                  WORD1X=SUBSTR(OUTSTR,6,WORDSIZE);                           28610000
     2874.0                  END;                                                        28620000
     2875.0              IF WORDEND=LENGTH(OUTSTR) THEN RETURN;                          28630000
     2876.0              OUTSTR=SUBSTR(OUTSTR,WORDEND+1);                                28640000
     2877.0              WORDSTRT=VERIFY(OUTSTR,' ');                                    28650000
     2878.0              IF WORDSTRT = 0 THEN RETURN;                                    28660000
     2879.0              OUTSTR=SUBSTR(OUTSTR,WORDSTRT);                                 28670000
     2880.0              WORDEND=INDEX(OUTSTR,' ')-1;                                    28680000
     2881.0              IF WORDEND = -1 THEN WORDEND=LENGTH(OUTSTR);                    28690000
     2882.0              WORDSIZE=MIN(WORDEND,5);                                        28700000
     2883.0              WORD2=SUBSTR(OUTSTR,1,WORDSIZE);                                28710000
     2884.0              IF WORDEND > 5 THEN DO;                                         28720000
     2885.0                  WORDSIZE=MIN(WORDEND-5,5);                                  28730000
     2886.0                  WORD2X=SUBSTR(OUTSTR,6,WORDSIZE);                           28740000
     2887.0                  END;                                                        28750000
     2888.0              RETURN;                                                         28760000
     2889.0              END;                                                            28770000
     2890.0                                                                              28780000
     2891.0                                                                              28790000
     2892.0                                                                              28800000
     2893.0      YES: PROC (X,Y,Z) RETURNS (BIT(1));                                     28810000
     2894.0                                                                              28820000
     2895.0              DCL (X,Y,Z) FIXED BIN(31);                                      28830000
     2896.0                                                                              28840000
     2897.0      /*                                                                      28850000
     2898.0         PRINT MESSAGE X, WAIT FOR YES/NO ANSWER.  IF YES, PRINT Y            28860000
     2899.0         AND LEAVE YEA TRUE; IF NO, PRINT Z AND LEAVE YEA FALSE.              28870000
     2900.0      */                                                                      28880000
     2901.0                                                                              28890000
     2902.0                                                                              28900000
     2903.0      L1:     IF X ^= 0 THEN CALL RSPEAK(X);                                  28910000
     2904.0              CALL GETIN(REPLY,JUNK1,JUNK2,JUNK3);                            28920000
     2905.0              IF REPLY = 'YES' | REPLY = 'Y' THEN GOTO L10;                   28930000
     2906.0              IF REPLY = 'NO' | REPLY = 'N' THEN GOTO L20;                    28940000
     2907.0              CALL LINESKP;                                                   28950000
     2908.0              PUT STRING (OUTSTR) EDIT ('Please answer the question!') (A);   28960000
     2909.0              CALL LINEOUT;                                                   28970000
     2910.0              GOTO L1;                                                        28980000
     2911.0      L10:    IF Y ^= 0 THEN CALL RSPEAK(Y);                                  28990000
     2912.0              RETURN('1'B);                                                   29000000
     2913.0      L20:    IF Z ^=0 THEN CALL RSPEAK(Z);                                   29010000
     2914.0              RETURN('0'B);                                                   29020000
     2915.0              END;                                                            29030000
     2916.0                                                                              29040000
     2917.0                                                                              29050000
     2918.0                                                                              29060000
     2919.0      A5TOA1: PROC (A,B,CHARS,LENG);                                          29070000
     2920.0                                                                              29080000
     2921.0      /*                                                                      29090000
     2922.0        A AND B CONTAN A 1-10 CHARACTER WORD IN A5 FORMAT.                    29100000
     2923.0        THEY ARE CONCATENATED AND MOVED INTO A CHAR(1)                        29110000
     2924.0        ARRAY UNTIL A BLANK IS ENCOUNTERED.  THE TOTAL                        29120000
     2925.0        LENGTH IS RETURNED IN LENG.                                           29130000
     2926.0                                                                              29140000
     2927.0      */                                                                      29150000
     2928.0                                                                              29160000
     2929.0              DCL (A,B) CHAR(5);                                              29170000
     2930.0              DCL LENG FIXED BIN(31);                                         29180000
     2931.0              DCL CHARS(10) CHAR(1);                                          29190000
     2932.0                                                                              29200000
     2933.0              DCL WORDS(2) CHAR(5);                                           29210000
     2934.0              DCL XLATETO CHAR(26) INIT ('abcdefghijklmnopqrstuvwxyz');       29220000
     2935.0              DCL XLATEFR CHAR(26) INIT ('ABCDEFGHIJKLMNOPQRSTUVWXYZ');       29230000
     2936.0                                                                              29240000
     2937.0              WORDS(1)=TRANSLATE(A,XLATETO,XLATEFR);                          29250000
     2938.0              WORDS(2)=TRANSLATE(B,XLATETO,XLATEFR);                          29260000
     2939.0              LENG=0;                                                         29270000
     2940.0              DO WORD=1 TO 2;                                                 29280000
     2941.0                  DO CH=1 TO 5;                                               29290000
     2942.0                      CHARS(LENG+1)=SUBSTR(WORDS(WORD),CH,1);                 29300000
     2943.0                      IF CHARS(LENG+1) = ' ' THEN RETURN;                     29310000
     2944.0                      LENG=LENG+1;                                            29320000
     2945.0                      END;                                                    29330000
     2946.0                  END;                                                        29340000
     2947.0              RETURN;                                                         29350000
     2948.0              END;                                                            29360000
     2949.0    1 /*                                                                      29370000
     2950.0         DATA STRUCTURE ROUTINES (VOCAB, DSTROY, JUGGLE, MOVE,                29380000
     2951.0         PUT, CARRY, DROP)                                                    29390000
     2952.0      */                                                                      29400000
     2953.0                                                                              29410000
     2954.0      VOCAB: PROC (ID,INIT) RETURNS(FIXED BIN(31));                           29420000
     2955.0                                                                              29430000
     2956.0              DCL ID CHAR(5);                                                 29440000
     2957.0              DCL INIT FIXED BIN(31);                                         29450000
     2958.0              DCL I    FIXED BIN(31);                                         29460000
     2959.0                                                                              29470000
     2960.0      /*                                                                      29480000
     2961.0         LOOK UP ID IN THE VOCABULARY (ATAB) AND RETURN ITS                   29490000
     2962.0         "DEFINITION" (KTAB), OR -1 IF NOT FOUND.  IF INIT IS                 29500000
     2963.0         POSITIVE, THIS IS AN INITIALISATION CALL SETTING UP A                29510000
     2964.0         KEYWORD VARIABLE, AND NOT FINDING IT CONSTITUTES A BUG.              29520000
     2965.0         IT ALSO MEANS THAT ONLY KTAB VALUES WHICH TAKEN OVER 1000            29530000
     2966.0         EQUAL INIT MAY BE CONSIDERED.  (THUS "STEPS", WHICH IS A             29540000
     2967.0         MOTION VERB AS WELL AS AN OBJECT, MAY BE LOCATED AS AN               29550000
     2968.0         OBJECT.)  AND IT ALSO MEANS THE KTAB VALUE IS TAKEN MOD              29560000
     2969.0         1000.                                                                29570000
     2970.0      */                                                                      29580000
     2971.0                                                                              29590000
     2972.0             DCL VOCRTN FIXED BIN(31);                                        29600000
     2973.0                                                                              29610000
     2974.0              DO I=1 TO TABSIZ;                                               29620000
     2975.0                  IF KTAB(I) = -1 THEN GOTO L2;                               29630000
     2976.0                  IF INIT >= 0 & KTAB(I)/1000 ^= INIT THEN GOTO L1;           29640000
     2977.0                  IF ATAB(I) = ID THEN GOTO L3;                               29650000
     2978.0      L1:         END;                                                        29660000
     2979.0              CALL BUG(21);                                                   29670000
     2980.0                                                                              29680000
     2981.0      L2:     IF INIT < 0 THEN RETURN(-1);                                    29690000
     2982.0              CALL BUG(5);                                                    29700000
     2983.0                                                                              29710000
     2984.0      L3:     VOCRTN=KTAB(I);                                                 29720000
     2985.0              IF INIT >= 0 THEN VOCRTN=MOD(VOCRTN,1000);                      29730000
     2986.0              RETURN(VOCRTN);                                                 29740000
     2987.0              END;                                                            29750000
     2988.0                                                                              29760000
     2989.0                                                                              29770000
     2990.0                                                                              29780000
     2991.0      DSTROY: PROC (OBJECT);                                                  29790000
     2992.0                                                                              29800000
     2993.0              DCL OBJECT FIXED BIN(31);                                       29810000
     2994.0                                                                              29820000
     2995.0      /*                                                                      29830000
     2996.0         PERMANENTLY ELIMINATE "OBJECT" BY MOVING TO A                        29840000
     2997.0         NON-EXISTANT LOCATION.                                               29850000
     2998.0      */                                                                      29860000
     2999.0                                                                              29870000
     3000.0                                                                              29880000
     3001.0              CALL MOVE(OBJECT,0);                                            29890000
     3002.0              RETURN;                                                         29900000
     3003.0              END;                                                            29910000
     3004.0                                                                              29920000
     3005.0                                                                              29930000
     3006.0                                                                              29940000
     3007.0      JUGGLE: PROC (OBJECT);                                                  29950000
     3008.0                                                                              29960000
     3009.0              DCL OBJECT FIXED BIN(31);                                       29970000
     3010.0              DCL (I,J)  FIXED BIN(31);                                       29980000
     3011.0                                                                              29990000
     3012.0      /*                                                                      30000000
     3013.0         JUGGLE AN OBJECT BY PICKING IT UP AND PUTTING IT DOWN                30010000
     3014.0         AGAIN, THE PURPOSE BEING TO GET THE OBJECT TO THE FRONT              30020000
     3015.0         OF THE CHAIN OF THINGS AT ITS LOC.                                   30030000
     3016.0      */                                                                      30040000
     3017.0                                                                              30050000
     3018.0              I=PLACE(OBJECT);                                                30060000
     3019.0              J=FIXED(OBJECT);                                                30070000
     3020.0              CALL MOVE(OBJECT,I);                                            30080000
     3021.0              CALL MOVE(OBJECT+100,J);                                        30090000
     3022.0              RETURN;                                                         30100000
     3023.0              END;                                                            30110000
     3024.0                                                                              30120000
     3025.0                                                                              30130000
     3026.0                                                                              30140000
     3027.0      MOVE: PROC (OBJECT,WHERE);                                              30150000
     3028.0                                                                              30160000
     3029.0              DCL (OBJECT,WHERE) FIXED BIN(31);                               30170000
     3030.0                                                                              30180000
     3031.0      /*                                                                      30190000
     3032.0         PLACE ANY OBJECT ANYWHERE BY PICKING IT UP AND DROPPING              30200000
     3033.0         IT.  MAY ALREADY BE TOTING, IN WHICH CASE THE CARRY IS A             30210000
     3034.0         NO-OP.  MUSTN'T PICK UP OBJECTS WHICH ARE NOT AT ANY LOC,            30220000
     3035.0         SINCE CARRY WANTS TO REMOVE OBJECTS FROM ATLOC CHAINS.               30230000
     3036.0      */                                                                      30240000
     3037.0                                                                              30250000
     3038.0              IF OBJECT > 100 THEN GOTO L1;                                   30260000
     3039.0              FROM=PLACE(OBJECT);                                             30270000
     3040.0              GOTO L2;                                                        30280000
     3041.0      L1:     FROM=FIXED(OBJECT-100);                                         30290000
     3042.0      L2:     IF FROM > 0 & FROM <= 300 THEN CALL CARRY(OBJECT,FROM);         30300000
     3043.0              CALL DROP(OBJECT,WHERE);                                        30310000
     3044.0              RETURN;                                                         30320000
     3045.0              END;                                                            30330000
     3046.0                                                                              30340000
     3047.0                                                                              30350000
     3048.0                                                                              30360000
     3049.0      PUT: PROC (OBJECT,WHERE,PVAL) RETURNS(FIXED BIN(31));                   30370000
     3050.0                                                                              30380000
     3051.0              DCL (OBJECT,WHERE,PVAL) FIXED BIN(31);                          30390000
     3052.0                                                                              30400000
     3053.0      /*                                                                      30410000
     3054.0         PUT IS THE SAME AS MOVE, EXCEPT IT RETURNS A VALUE USED              30420000
     3055.0         TO SET UP THE NEGATED PROP VALUES FOR THE REPOSITORY                 30430000
     3056.0         OBJECTS.                                                             30440000
     3057.0      */                                                                      30450000
     3058.0                                                                              30460000
     3059.0              CALL MOVE(OBJECT,WHERE);                                        30470000
     3060.0              RETURN((-1)-PVAL);                                              30480000
     3061.0              END;                                                            30490000
     3062.0                                                                              30500000
     3063.0                                                                              30510000
     3064.0                                                                              30520000
     3065.0      CARRY: PROC (OBJECT,WHERE);                                             30530000
     3066.0                                                                              30540000
     3067.0              DCL (OBJECT,WHERE) FIXED BIN(31);                               30550000
     3068.0                                                                              30560000
     3069.0      /*                                                                      30570000
     3070.0         START TOTING AN OBJECT, REMOVING IT FROM THE LIST OF                 30580000
     3071.0         THINGS AT ITS FORMER LOCATION.  INCR HOLDNG UNLESS IT WAS            30590000
     3072.0         ALREADY BEING TOTED.  IF OBJECT>100 (MOVING "FIXED"                  30600000
     3073.0         SECOND LOC), DON'T CHANGE PLACE OR HOLDNG.                           30610000
     3074.0      */                                                                      30620000
     3075.0                                                                              30630000
     3076.0                                                                              30640000
     3077.0                                                                              30650000
     3078.0              IF OBJECT > 100 THEN GOTO L5;                                   30660000
     3079.0              IF PLACE(OBJECT) = -1 THEN RETURN;                              30670000
     3080.0              PLACE(OBJECT)=-1;                                               30680000
     3081.0              HOLDNG=HOLDNG+1;                                                30690000
     3082.0      L5:     IF ATLOC(WHERE) ^= OBJECT THEN GOTO L6;                         30700000
     3083.0              ATLOC(WHERE)=LINK(OBJECT);                                      30710000
     3084.0              RETURN;                                                         30720000
     3085.0      L6:     TEMP=ATLOC(WHERE);                                              30730000
     3086.0      L7:     IF LINK(TEMP) = OBJECT THEN GOTO L8;                            30740000
     3087.0              TEMP=LINK(TEMP);                                                30750000
     3088.0              GOTO L7;                                                        30760000
     3089.0      L8:     LINK(TEMP)=LINK(OBJECT);                                        30770000
     3090.0              RETURN;                                                         30780000
     3091.0              END;                                                            30790000
     3092.0                                                                              30800000
     3093.0                                                                              30810000
     3094.0                                                                              30820000
     3095.0      DROP: PROC (OBJECT,WHERE);                                              30830000
     3096.0                                                                              30840000
     3097.0              DCL (OBJECT,WHERE) FIXED BIN(31);                               30850000
     3098.0                                                                              30860000
     3099.0      /*                                                                      30870000
     3100.0         PLACE AN OBJECT AT A GIVEN LOC, PREFIXING IT ONTO THE                30880000
     3101.0         ATLOC LIST.  DECR HOLDNG IF THE OBJECT WAS BEING TOTED.              30890000
     3102.0      */                                                                      30900000
     3103.0                                                                              30910000
     3104.0              IF OBJECT > 100 THEN GOTO L1;                                   30920000
     3105.0              IF PLACE(OBJECT) = -1 THEN HOLDNG=HOLDNG-1;                     30930000
     3106.0              PLACE(OBJECT)=WHERE;                                            30940000
     3107.0              GOTO L2;                                                        30950000
     3108.0      L1:     FIXED(OBJECT-100)=WHERE;                                        30960000
     3109.0      L2:     IF WHERE <= 0 THEN RETURN;                                      30970000
     3110.0              LINK(OBJECT)=ATLOC(WHERE);                                      30980000
     3111.0              ATLOC(WHERE)=OBJECT;                                            30990000
     3112.0              RETURN;                                                         31000000
     3113.0              END;                                                            31010000
     3114.0                                                                              31020000
     3115.0    1 /*  UTILITY ROUTINES (RAN, CIAO, BUG) */                                31030000
     3116.0                                                                              31040000
     3117.0      CIAO: PROC;                                                             31050000
     3118.0                                                                              31060000
     3119.0      /*                                                                      31070000
     3120.0         EXITS...NO MESSAGE OUTPUT SINCE CAN'T SAVE CORE IMAGE                31080000
     3121.0      */                                                                      31090000
     3122.0                                                                              31100000
     3123.0              STOP;                                                           31110000
     3124.0              END;                                                            31120000
     3125.0                                                                              31130000
     3126.0                                                                              31140000
     3127.0                                                                              31150000
     3128.0      BUG: PROC (NUM);                                                        31160000
     3129.0                                                                              31170000
     3130.0              DCL NUM FIXED BIN(31);                                          31180000
     3131.0                                                                              31190000
     3132.0      /*                                                                      31200000
     3133.0         THE FOLLOWING CONDITIONS ARE CURRENTLY CONSIDERED FATAL              31210000
     3134.0         BUGS.  NUMBERS < 20 ARE DETECTED WHILE READING THE                   31220000
     3135.0         DATABASE; THE OTHERS OCCUR AT "RUN TIME".                            31230000
     3136.0              0       MESSAGE LINE > 70 CHARACTERS                            31240000
     3137.0              1       NULL LINE IN MESSAGE                                    31250000
     3138.0              2       TOO MANY WORDS OF MESSAGES                              31260000
     3139.0              3       TOO MANY TRAVEL OPTIONS                                 31270000
     3140.0              4       TOO MANY VOCABULARY WORDS                               31280000
     3141.0              5       REQUIRED VOCABULARY WORD NOT FOUND                      31290000
     3142.0              6       TOO MANY RTEXT OR MTEXT MESSAGES                        31300000
     3143.0              7       TOO MANY HINTS                                          31310000
     3144.0              8       LOCATION HAS COND BIT BEING SET TWICE                   31320000
     3145.0              9       INVALID SECTION NUMBER IN DATABASE                      31330000
     3146.0              20      SPECIAL TRAVEL (500>L>300) EXCEEDS GOTO LIST            31340000
     3147.0              21      RAN OFF END OF VOCABULARY TABLE                         31350000
     3148.0              22      VOCABULARY TYPE (N/1000) NOT BETWEEN 0 AND 3            31360000
     3149.0              23      INTRANSITIVE ACTION VERB EXCEEDS GOTO LIST              31370000
     3150.0              24      TRANSITIVE ACTION VERB EXCEEDS GOTO LIST                31380000
     3151.0              25      CONDITIONAL TRAVEL ENTRY WITH NO ALTERNATIVE            31390000
     3152.0              26      LOCATION HAS NO TRAVEL ENTRIES                          31400000
     3153.0              27      HINT NUMBER EXCEEDS GOTO LIST                           31410000
     3154.0              28      INVALID MONTH RETURNED BY DATE FUNCTION                 31420000
     3155.0      */                                                                      31430000
     3156.0                                                                              31440000
     3157.0                                                                              31450000
     3158.0              PUT STRING (OUTSTR) EDIT ('Fatal error # ',NUM) (A,F(2));       31460000
     3159.0              CALL LINEOUT;                                                   31470000
     3160.0              STOP;                                                           31480000
     3161.0              END;                                                            31490000
     3162.0                                                                              31500000
     3163.0      LINESKP: PROC;                                                          31510000
     3164.0                                                                              31520000
     3165.0      /* OUTPUTS A BLANK LINE */                                              31530000
     3166.0                                                                              31540000
     3167.0              OUTSTR=' ';                                                     31550000
     3168.0              CALL LINEOUT;                                                   31560000
     3169.0              RETURN;                                                         31570000
     3170.0              END;                                                            31580000
     3171.0                                                                              31590000
     3172.0      LINEOUT: PROC;                                                          31600000
     3173.0                                                                              31610000
     3174.0      /* OUTPUT A LINE TO MILTEN */                                           31620000
     3175.0                                                                              31630000
     3176.0              INSTR=OUTSTR;                                                   31640000
     3177.0              IF LOGON & OUTSTR ^= ' ' THEN                                   31650000
     3178.0                   PUT SKIP EDIT (OUTSTR) (A);                                31660000
     3179.0              CCODE=0;                                                        31670000
     3180.0              DO WHILE (CCODE = 0);                                           31680000
     3181.0                  CALL TWRITE(INSTR,LENGTH(OUTSTR),CCODE);                    31690000
     3182.0                  END;                                                        31700000
     3183.0              RETURN;                                                         31710000
     3184.0              END;                                                            31720000
     3185.0                                                                              31730000
     3186.0      RAN: PROC (N) RETURNS (FIXED BIN(31));                                  31740000
     3187.0                                                                              31750000
     3188.0      /* RETURNS RANDOM NUMBER BETWEEN 0 AND N-1 */                           31760000
     3189.0                                                                              31770000
     3190.0              DCL N FIXED BIN(31);                                            31780000
     3191.0              DCL RANRTN FIXED BIN(31);                                       31790000
     3192.0                                                                              31800000
     3193.0              RANRTN=N;                                                       31810000
     3194.0              DO WHILE (RANRTN = N);                                          31820000
     3195.0                  CALL RANDU(IX,IY,Y);                                        31830000
     3196.0                  IX=IY;                                                      31840000
     3197.0                  RANRTN=Y*N;                                                 31850000
     3198.0                  END;                                                        31860000
     3199.0              RETURN(RANRTN);                                                 31870000
     3200.0              END;                                                            31880000
     3201.0                                                                              31890000
     3202.0                                                                              31900000
     3203.0        END ADVENT;                                                           31910000
15655-PL6  IBM(R) Enterprise PL/I for z/OS   /* ADVENTURES                                      2024.05.15 10:50:07   Page     3
- Compiler Messages
0 Message       Line.File Message Description
0 IBM2621I W     410.0    ON ERROR block does not start with ON ERROR SYSTEM. An error inside the block may lead to an
                          infinite loop.
  IBM1136I W     917.0    Function invoked as a subroutine.
  IBM1213I W    3117.0    The PROCEDURE CIAO is not referenced.
- File Reference Table
0   File    Included From  Name
0      0                   AVL.IBAGROUP.PLI(ADVNTOPT)
- Component    Return Code    Messages (Total/Suppressed)    Time
0 Compiler         4              145  /  142                13 secs
0 End of compilation of ADVENT
