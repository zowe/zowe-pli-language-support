 IO3270: PROCEDURE(LINE,OPT) RETURNS(FIXED BIN(15,0)) REORDER RECURSIVE;00010000
    DECLARE                                                             00020000
      TPUT               ENTRY(CHAR(*) VARYING)                         00030000
                            RETURNS(FIXED BIN(15,0)),                   00040000
      TGET               ENTRY(CHAR(*) VARYING)                         00050000
                            RETURNS(FIXED BIN(15,0)),                   00060000
      BUFADE             ENTRY(FIXED BIN(15,0),FIXED BIN(15,0))         00070000
                            RETURNS(CHAR(2)),                           00080000
      BUFADD             ENTRY(FIXED BIN(15,0),FIXED BIN(15,0),         00090000
                               CHAR(*)),                                00100000
      ATTR               ENTRY(FIXED BIN(15,0),FIXED BIN(15,0),         00110000
                               FIXED BIN(15,0),FIXED BIN(15,0))         00120000
                            RETURNS(CHAR(1)),                           00130000
      FULLSCR            ENTRY(FIXED BIN(15,0)),                        00140000
      1 IOXOPT STATIC EXTERNAL,                                         00150000
        2 ISTR           CHAR(30) VARYING INIT(''),                     00160000
        2 PFILE          FILE VARIABLE,                                 00160110
        2 IFLAGS,                                                       00161010
          3 TRANS        BIT(1) INIT('1'B),                             00170010
          3 ATTN         BIT(1) INIT('0'B),                             00180010
          3 IFILL        BIT(14) INIT('0'B),                            00181010
        2 ROWS           FIXED BIN(15,0) INIT(24),                      00190000
        2 #PAGES         FIXED BIN(15,0) INIT(100),                     00200000
      UPPER              CHAR(26) STATIC INIT(                          00210000
          'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),                                00220000
      LOWER              CHAR(26) STATIC INIT(                          00230000
          'abcdefghijklmnopqrstuvwxyz'),                                00240000
      BUFF               CHAR(240) STATIC VARYING INIT(''),             00250000
      SCREEN             CHAR(3120) STATIC VARYING INIT(''),            00260000
      BLANK              CHAR(79) STATIC VARYING INIT(''),              00270000
      LINE               CHAR(*) VARYING,                               00280000
      OPT                FIXED BIN(15,0),                               00290000
      READY(2)           LABEL INIT(INIT,START),                        00300000
      GOTO               FIXED BIN(15,0) STATIC INIT(1),                00310000
      (SUBSTR,REPEAT,                                                   00320011
       MOD,LENGTH,                                                      00340011
       TRANSLATE,                                                       00350000
       UNSPEC,LOW,                                                      00360011
       INDEX)            BUILTIN,                                       00380000
      (I,J,LI,RC,ACT,                                                   00390000
       ROW,COL)          FIXED BIN(15,0) INIT(0),                       00400000
      ESC                CHAR(1) STATIC INIT(' '),                      00410000
      SBA                CHAR(1) STATIC INIT(' '),                      00420000
      IC                 CHAR(1) STATIC INIT(' '),                      00430000
      SF                 CHAR(1) STATIC INIT(' '),                      00440000
      RA                 CHAR(1) STATIC INIT(' '),                      00450000
      EUA                CHAR(1) STATIC INIT(' '),                      00460000
      CLEAR              CHAR(1) STATIC INIT('5'),                      00470000
      EAU                CHAR(1) STATIC INIT('?'),                      00480000
      WRITE              CHAR(1) STATIC INIT('1'),                      00490000
      SYSPAGE            FILE DIRECT ENV(REGIONAL(1) F BLKSIZE(3276));  00500000
1   DECLARE                                                             00510000
      SELSCN             CHAR(153) STATIC INIT(' '),                    00520000
      APAG               CHAR(1) DEFINED SELSCN POS(69),                00530000
      APG#               CHAR(1) DEFINED SELSCN POS(75),                00540000
      SPAG#              PIC'ZZZ9' DEFINED SELSCN POS(76),              00550000
      ABACK              CHAR(1) DEFINED SELSCN POS(86),                00560000
      AFRM               CHAR(1) DEFINED SELSCN POS(97),                00570000
      SFRM#              PIC'ZZZ9' DEFINED SELSCN POS(104),             00580000
      ATO                CHAR(1) DEFINED SELSCN POS(123),               00590000
      STO#               PIC'ZZZ9' DEFINED SELSCN POS(130),             00600000
      APNG               CHAR(1) DEFINED SELSCN POS(138),               00610000
      SPAGW              CHAR(4) DEFINED SELSCN POS(146),               00620000
      RESSCNC            CHAR(118) STATIC INIT(' '),                    00630000
      RPAG               CHAR(1) DEFINED RESSCNC POS(86),               00640000
      RPG#               CHAR(1) DEFINED RESSCNC POS(92),               00650000
      RPAG#              PIC'ZZZ9' DEFINED RESSCNC POS(93),             00660000
      RINP               CHAR(1) DEFINED RESSCNC POS(98),               00670000
      RSEL               CHAR(1) DEFINED RESSCNC POS(108),              00680000
      RESSCNR            CHAR(117) STATIC INIT(' '),                    00690000
      EPAG               CHAR(1) DEFINED RESSCNR POS(81),               00700000
      EPG#               CHAR(1) DEFINED RESSCNR POS(87),               00710000
      EPAG#              PIC'ZZZ9' DEFINED RESSCNR POS(88),             00720000
      ESEL               CHAR(1) DEFINED RESSCNR POS(107),              00730000
      (PAI,                                                             00740000
       FRM,                                                             00750000
       PAR,                                                             00760000
       TEST,                                                            00770000
       PAH,                                                             00780000
       UNR,                                                             00790000
       UARM)             CHAR(1) STATIC INIT(' '),                      00800000
      SINVIG             CHAR(21) STATIC INIT(' '),                     00810000
      IMESS              CHAR(7) DEFINED SINVIG POS(6),                 00820000
      IPG#               CHAR(1) DEFINED SINVIG POS(17),                00830000
      IPAG#              PIC'ZZZ9' DEFINED SINVIG POS(18),              00840000
      SPAGE              CHAR(23) STATIC INIT(' '),                     00850000
      PPAGW              CHAR(4) DEFINED SPAGE POS(20),                 00860000
      WROUT              CHAR(8) STATIC INIT(' '),                      00870000
      BSELSCN            CHAR(14) STATIC INIT(' '),                     00880000
      BPAG#              PIC'ZZZ9' DEFINED BSELSCN POS(11),             00890000
      OUTPUT             CHAR(123) STATIC INIT(' '),                    00900000
      OSEL               CHAR(1) DEFINED OUTPUT POS(10),                00910000
      OPNG               CHAR(1) DEFINED OUTPUT POS(19),                00920000
      OPAGW              CHAR(4) DEFINED OUTPUT POS(27),                00930000
      OPAG               CHAR(1) DEFINED OUTPUT POS(106),               00940000
      OPG#               CHAR(1) DEFINED OUTPUT POS(112),               00950000
      PAG#               PIC'ZZZ9' DEFINED OUTPUT POS(113),             00960000
      PAGING(2)          CHAR(4) STATIC INIT(                           00970000
          'ON','AUTO'),                                                 00980000
      AUTO               FIXED BIN(15,0) STATIC INIT(2),                00990000
      ON                 FIXED BIN(15,0) STATIC INIT(1),                01000000
      OFF                FIXED BIN(15,0) STATIC INIT(3),                01010000
      PGSW               FIXED BIN(15,0) STATIC INIT(1),                01020000
      SCRSIZE            FIXED BIN(15,0) STATIC INIT(0),                01030000
      SROW               FIXED BIN(15,0) STATIC INIT(0),                01040000
      KEY                FIXED BIN(15,0) STATIC INIT(0),                01050000
      PAGE               BIT(1) STATIC INIT('1'B),                      01060000
      INDIC              CHAR(52) STATIC INIT(' '),                     01070000
      INRUN              CHAR(7) DEFINED INDIC POS(7),                  01080000
      INP                CHAR(5) DEFINED INDIC POS(16),                 01090000
      IMEAR              CHAR(30) DEFINED INDIC POS(22),                01100000
      INPUT              CHAR(12) STATIC INIT(' '),                     01110000
      RUN                CHAR(13) STATIC INIT(' '),                     01120000
      BUFADR             CHAR(2) STATIC INIT(' '),                      01130000
      TESTADR            CHAR(2) STATIC INIT(' '),                      01140000
      SELPAG             CHAR(25) STATIC INIT(' '),                     01150000
      SELS               CHAR(1) DEFINED SELPAG POS(5),                 01160000
      SELP               CHAR(1) DEFINED SELPAG POS(14),                01170000
      SELPG              CHAR(4) DEFINED SELPAG POS(22),                01180000
      SCR(39,2)          FIXED BIN(15,0) STATIC INIT((78)0),            01190000
      SIND               FIXED BIN(15,0) STATIC INIT(0),                01200000
      PICKUP             BIT(1) STATIC INIT('0'B),                      01210000
      1 PBUF STATIC,                                                    01220000
        2 PSCR(39,2)     FIXED BIN(15,0) INIT((78)0),                   01230000
        2 PBUFF          CHAR(3120) INIT(' ');                          01240000
-   GO TO READY(GOTO);                                                  01250000
1INIT:                                                                  01260010
    GOTO = 2;                                                           01270000
    UNSPEC(ESC) = '00100111'B;                                          01280000
    UNSPEC(EUA) = '00010010'B;                                          01290000
    UNSPEC(SBA) = '00010001'B;                                          01300000
    UNSPEC(IC ) = '00010011'B;                                          01310000
    UNSPEC(RA ) = '00111100'B;                                          01320000
    UNSPEC(SF ) = '00011101'B;                                          01330000
    UNSPEC(TEST)= '00000001'B;                                          01340000
    PAR = ATTR(1,0,1,0);                                                01350000
    PAI = ATTR(1,0,3,0);                                                01360000
    PAH = ATTR(1,0,2,0);                                                01370000
    UNR = ATTR(0,1,0,0);                                                01380000
    UARM = ATTR(0,0,0,0);                                               01390000
    SROW = ROWS;                                                        01400000
    SCRSIZE = (ROWS - 4) * 80;                                          01410000
    OUTPUT = SBA || BUFADE(ROWS,1) || SF || PAH ||                      01420000
             SBA || BUFADE(ROWS,60) || SF || PAR ||                     01430000
             'SELECT ' || SF || PAR || 'PAGING:ON  ' ||                 01440000
             SF || PAR || SBA || BUFADE(ROWS-3,1) ||                    01450000
             SUBSTR(REPEAT('----5----0',7),1,69) || SF ||               01460000
             PAR || 'PAGE' || SF || PAR || '   1' || SF ||              01470000
             PAR || SBA || BUFADE(ROWS,80) || SF || PAR;                01480000
    SELSCN = SBA || BUFADE(ROWS,1) || SF || PAI ||                      01490000
             SBA || BUFADE(ROWS,60) || SF || PAI ||                     01500000
             SBA || BUFADE(ROWS-3,1) || (40)'-' || ' SELECT' ||         01510000
             RA || BUFADE(ROWS-3,70) || ' ' ||                          01520000
             SBA || BUFADE(ROWS-3,70) || SF || PAR || 'PAGE' ||         01530000
             SF || UNR || '   0' || SF || PAR ||                        01540000
             SBA || BUFADE(ROWS-2,59) || SF || PAR ||                   01550000
             ' <<<<<   ' || SF || PAR || ' FROM    1' ||                01560000
             SBA || BUFADE(ROWS-1,59) || SF || PAR ||                   01570000
             ' >>>>>   ' || SF || PAR || ' TO      1' ||                01580000
             SBA || BUFADE(ROWS,68) || SF || PAR ||                     01590000
             'PAGING:ON  ' || SBA || BUFADE(ROWS-1,63) || IC;           01600000
    RESSCNC = SBA || BUFADE(1,1) || RA || BUFADE(ROWS,1) || ' ' ||      01610000
              SBA || BUFADE(ROWS,80) || SF || PAR ||                    01620000
              SBA || BUFADE(ROWS-3,1) ||                                01630000
              SUBSTR(REPEAT('----5----0',7),1,69) || SF || PAR ||       01640000
              'PAGE' || SF || PAR || '   1' || SF || UARM ||            01650000
              SBA || BUFADE(ROWS,1) || SF || PAH || SBA ||              01660000
              BUFADE(ROWS,60) || SF || PAR || SBA || BUFADE(ROWS-2,1) ||01670000
              EUA || BUFADE(ROWS,1) || SBA || BUFADE(ROWS-2,1) || IC;   01680000
    RESSCNR = SBA || BUFADE(ROWS-3,1) || RA || BUFADE(ROWS,1) || ' ' || 01690000
              SBA || BUFADE(ROWS-3,1) || SUBSTR(REPEAT('----5----0',7), 01700000
              1,69) || SF || PAR || 'PAGE' || SF || PAR || '   1' ||    01710000
              SF || UARM || SBA || BUFADE(ROWS,1) || SF ||              01720000
              PAH || RA || BUFADE(ROWS,11) || ' ' ||                    01730000
              SBA || BUFADE(ROWS,60) || SF || PAR ||                    01740000
              SBA || BUFADE(ROWS-2,1) || EUA || BUFADE(ROWS,1) ||       01750000
              SBA || BUFADE(ROWS-2,1) || IC;                            01760000
    SINVIG = SBA || BUFADE(ROWS-3,50) || SF || PAH ||                   01770000
             'INVALID' || SBA || BUFADE(ROWS-3,75) || SF ||             01780000
             UNR || '   1';                                             01790000
    SPAGE = SBA || BUFADE(ROWS,69) || RA || BUFADE(ROWS,80) || ' ' ||   01800000
            SBA || BUFADE(ROWS,68) || SF || PAR || 'PAGING:ON  ';       01810000
    WROUT = SBA || BUFADE(ROWS,80) || SF || PAR || SBA || BUFADE(1,1);  01820000
    BSELSCN = SBA || BUFADE(ROWS-3,50) || SF || PAI ||                  01830000
              SBA || BUFADE(ROWS-3,75) || SF || UNR || '   1';          01840000
    ON UNDF(SYSPAGE) BEGIN;                                             01850000
       PAGE = '0'B;                                                     01860000
       GO TO NOPAGE;                                                    01870000
    END;                                                                01880000
    PAGE = '1'B;                                                        01890000
    OPEN FILE(SYSPAGE) OUTPUT;                                          01900000
    IF PAGE                                                             01910000
       THEN DO;                                                         01920000
         CLOSE FILE(SYSPAGE);                                           01930000
         OPEN FILE(SYSPAGE) UPDATE;                                     01940000
       END;                                                             01950000
    ELSE;                                                               01960000
 NOPAGE:                                                                01970000
    IF ^PAGE                                                            01980000
       THEN DO;                                                         01990000
         APAG,APG#,ABACK = PAI;                                         02000000
         IPG#,AFRM,ATO,APNG = PAI;                                      02010000
         RPAG,RPG#,RSEL = PAI;                                          02020000
         EPAG,EPG#,ESEL = PAI;                                          02030000
         OSEL,OPNG,OPAG,OPG# = PAI;                                     02040000
         SELS,SELP,FRM = PAI;                                           02050013
       END;                                                             02060000
    ELSE FRM = PAR;                                                     02070013
    OPAGW = PAGING(PGSW);                                               02080000
    PAG# = 1;                                                           02090000
    INDIC = SBA || BUFADE(ROWS,1) || SF || PAH || (47)' ';              02100000
    INPUT = SBA || BUFADE(ROWS-3,80) || SF || UARM || EUA ||            02110000
            BUFADE(ROWS,1) || SBA || BUFADE(ROWS-2,1) || IC;            02120000
    RUN = SBA || BUFADE(ROWS-3,80) || SF || PAR || RA ||                02130000
          BUFADE(ROWS,1) || ' ' || SBA || BUFADE(ROWS,10) || IC;        02140000
    TESTADR = BUFADE(ROWS-1,63);                                        02150000
    SELPAG = SBA || BUFADE(ROWS,60) || SF || PAR || 'SELECT ' ||        02160000
             SF || PAR || 'PAGING:ON  ';                                02170000
    CALL FULLSCR(1);                                                    02180000
1START:                                                                 02190000
    /*  FORMAT/REFORMAT THE SCREEN  */                                  02200000
    IF OPT = 0                                                          02210000
       THEN DO;                                                         02220000
         OPAGW = PAGING(PGSW);                                          02230000
         RC = TPUT(ESC || CLEAR || 'B' || OUTPUT ||                     02240008
                   SCREEN || '-');                                      02250001
         RETURN(RC);                                                    02260000
       END;                                                             02270000
    ELSE;                                                               02280000
    /*  TERMINATE I/O 3270 CONTROL FOR GOOD  */                         02290000
    IF OPT = 2                                                          02300000
       THEN DO;                                                         02310000
         CALL CLRSCN(AUTO);                                             02320000
         CALL FULLSCR(0);                                               02330000
         IF PAGE                                                        02340000
            THEN CLOSE FILE(SYSPAGE);                                   02350000
         ELSE;                                                          02360000
         GOTO = 1;                                                      02370000
         RC = TPUT(ESC || CLEAR || 'B');                                02380008
         RETURN(0);                                                     02390000
       END;                                                             02400000
    ELSE;                                                               02410000
    /*  WRITE TO THE SCREEN  */                                         02420000
    IF OPT = 1                                                          02440000
       THEN DO;                                                         02450000
         IF LENGTH(LINE) = 0                                            02460000
            THEN RETURN(0);                                             02470000
         ELSE;                                                          02480000
         IF LENGTH(SCREEN) >= SCRSIZE                                   02490000
            THEN CALL CLRSCN(PGSW);                                     02500000
         ELSE;                                                          02510000
         LI = (LENGTH(LINE) + 79) / 80;                                 02520000
         LI = LI * 80;                                                  02530000
         IF LI - LENGTH(LINE) > 0                                       02540000
            THEN BLANK = SUBSTR((79)' ',1,LI-LENGTH(LINE));             02550000
         ELSE BLANK = '';                                               02560000
         SIND = SIND + 1;                                               02570000
         SCR(SIND,1) = 1 + LENGTH(SCREEN) / 80;                         02580000
         IF LENGTH(SCREEN) + LI <= SCRSIZE                              02590000
            THEN DO;                                                    02600000
              SCREEN = SCREEN || LINE || BLANK;                         02610000
              SCR(SIND,2) = LENGTH(LINE);                               02620000
 WRIT:                                                                  02630000
              RC = TPUT(ESC || WRITE || 'B' || WROUT ||                 02640008
                        SCREEN || '-');                                 02650001
              RETURN(RC);                                               02660000
            END;                                                        02670000
         ELSE;                                                          02680000
         J = SCRSIZE - LENGTH(SCREEN);                                  02690000
         SCR(SIND,2) = J;                                               02700000
         SCREEN = SCREEN || SUBSTR(LINE,1,J);                           02710000
         RC = TPUT(ESC || WRITE || 'B' || WROUT || SCREEN);             02720008
         CALL CLRSCN(PGSW);                                             02730000
         SCREEN = SUBSTR(LINE,J+1) || BLANK;                            02740000
         SIND = SIND + 1;                                               02750000
         SCR(SIND,1) = 1;                                               02760000
         SCR(SIND,2) = LENGTH(SUBSTR(LINE,J+1));                        02770000
         GO TO WRIT;                                                    02780000
       END;                                                             02790000
    ELSE;                                                               02800000
    /*  RELINQUISH CONTROL OF THE SCREEN TEMPORARILY  */                02810000
    IF OPT = 4                                                          02820000
       THEN DO;                                                         02830000
         RC = TPUT(ESC || CLEAR || 'C');                                02840008
         CALL FULLSCR(0);                                               02850000
         RETURN(0);                                                     02860000
       END;                                                             02870000
    ELSE;                                                               02880000
    /*  TAKE BACK CONTROL OF THE SCREEN  */                             02890000
    IF OPT = 6                                                          02900000
       THEN DO;                                                         02910000
         RC = TPUT(ESC || WRITE || 'B' || SBA || BUFADE(24,1) ||        02920004
                   SF || PAH || '***' || SF || UARM || IC);             02930005
         RC = TGET(BUFF);                                               02940004
         CALL FULLSCR(1);                                               02950000
         OPT = 0;                                                       02960000
         GO TO START;                                                   02970000
       END;                                                             02980000
    ELSE;                                                               02990000
    /*  AT THIS POINT IF OPT ^= 3 | 5 IT'S AN ERROR  */                 03000000
    IF OPT ^= 3 & OPT ^= 5                                              03010000
       THEN RETURN(24);                                                 03020000
    ELSE;                                                               03030000
    /*  DO INPUT FROM THE SCREEN  */                                    03040000
 READD:                                                                 03050002
    INRUN = ' ';                                                        03060000
    INP = 'INPUT';                                                      03070000
    IMEAR = ISTR;                                                       03080000
    RC = TPUT(ESC || WRITE || 'B' || INDIC || INPUT);                   03090008
 READ:                                                                  03100000
    BUFF = '';                                                          03110000
    RC = TGET(BUFF);                                                    03120000
    LINE = SUBSTR(BUFF,1,1);                                            03130000
    /*  PA1 (ATTN) PRESSED  */                                          03140000
    IF LINE = '%'                                                       03150000
       THEN DO;                                                         03160000
         ATTN = '1'B;                                                   03170000
         RETURN(0);                                                     03180000
       END;                                                             03190000
    ELSE;                                                               03200000
    /*  CLEAR PRESSED  */                                               03210000
    IF LINE = '_'                                                       03220000
       THEN DO;                                                         03230000
         CALL CLRSCN(AUTO);                                             03240000
         GO TO READ;                                                    03250000
       END;                                                             03260000
    ELSE;                                                               03270000
    /*  PA2 (REFORMAT SCREEN) PRESSED */                                03271011
    IF LINE = '>'                                                       03272011
       THEN DO;                                                         03273010
         RC = IO3270('',0);                                             03274010
         GO TO READD;                                                   03275012
       END;                                                             03276010
    ELSE;                                                               03277010
    /*  REQUEST WAS MADE TO ENTER SELECT MODE  */                       03280000
    IF (LINE = TEST | LINE = '1') & PAGE                                03290011
       THEN DO;                                                         03300000
         CALL SELECT(0);                                                03310000
         IF PICKUP                                                      03320000
            THEN DO;                                                    03330000
              PICKUP = '0'B;                                            03340000
              CALL PICK('',' ',BUFF,SCR,ROW,COL,2);                     03350000
              GO TO READ;                                               03360000
            END;                                                        03370000
         ELSE;                                                          03380000
         IF ATTN                                                        03390000
            THEN RETURN(0);                                             03400000
         ELSE;                                                          03410000
         GO TO READ;                                                    03420000
       END;                                                             03430000
    ELSE;                                                               03440000
    IF LENGTH(BUFF) <= 3 & LINE ^= ''''                                 03450000
       THEN GO TO PUTRUN;                                               03460000
    ELSE;                                                               03470000
    CALL BUFADD(ROW,COL,SUBSTR(BUFF,2,2));                              03480000
    IF ROW = SROW                                                       03490000
       THEN DO;                                                         03500000
         IF ^PAGE                                                       03510000
            THEN DO;                                                    03520000
 BADINP:                                                                03530000
              INRUN = 'INVALID';                                        03540000
              RC = TPUT(ESC || WRITE || 'B' || INDIC ||                 03550008
                        SBA || SUBSTR(BUFF,2,2) || IC);                 03560001
              GO TO READ;                                               03570000
            END;                                                        03580000
         ELSE;                                                          03590000
         IF COL >= 61 & COL <= 66                                       03600000
            THEN DO;                                                    03610000
              CALL SELECT(0);                                           03620000
              IF PICKUP                                                 03630000
                 THEN DO;                                               03640000
                   PICKUP = '0'B;                                       03650000
                   CALL PICK('',' ',BUFF,SCR,ROW,COL,2);                03660000
                   GO TO READ;                                          03670000
                 END;                                                   03680000
              ELSE;                                                     03690000
              IF ATTN                                                   03700000
                 THEN RETURN(0);                                        03710000
              ELSE;                                                     03720000
              GO TO READ;                                               03730000
            END;                                                        03740000
         ELSE GO TO BADINP;                                             03750000
       END;                                                             03760000
    ELSE;                                                               03770000
    IF ROW = SROW - 3                                                   03780000
       THEN GO TO BADINP;                                               03790000
    ELSE;                                                               03800000
    IF ROW <= SROW - 4                                                  03810000
       THEN DO;                                                         03820000
         CALL PICK(SCREEN,' ',BUFF,SCR,ROW,COL,1);                      03830000
         GO TO READ;                                                    03840000
       END;                                                             03850000
    ELSE;                                                               03860000
 PUTRUN:                                                                03870000
    INRUN = 'RUNNING';                                                  03880000
    IMEAR = ' ';                                                        03890000
    INP = ' ';                                                          03900000
    RC = TPUT(ESC || WRITE || 'C' || INDIC || RUN);                     03910008
    IF LENGTH(BUFF) > 3                                                 03920000
       THEN BUFF = SUBSTR(BUFF,4);                                      03930000
    ELSE BUFF = '';                                                     03940000
    DO WHILE(LENGTH(BUFF) > 0);                                         03950000
       I = INDEX(BUFF,SBA);                                             03960000
       IF I = 0                                                         03970000
          THEN LEAVE;                                                   03980000
       ELSE DO;                                                         03990000
         IF LENGTH(BUFF) >= I + 3                                       04000000
            THEN BUFF = SUBSTR(BUFF,I+3);                               04010000
         ELSE BUFF = '';                                                04020000
       END;                                                             04030000
       I = INDEX(BUFF,SBA);                                             04040000
       IF I = 0                                                         04050000
          THEN LEAVE;                                                   04060000
       ELSE LINE = LINE || SUBSTR(BUFF,1,I-1);                          04070000
       BUFF = SUBSTR(BUFF,I);                                           04080000
    END;                                                                04090000
    LINE = LINE || BUFF;                                                04100000
    /*  IF OPT = 5 A REQUEST WAS MADE TO WRITE THE INPUT BACK TO THE    04110000
        OUTPUT AREA. IT WILL BE DONE IF SOMETHING WAS IN THE INPUT      04120000
        AREA ONLY.  */                                                  04130000
    IF OPT = 5 & LENGTH(LINE) > 1                                       04140000
       THEN I = IO3270(SUBSTR(LINE,2),1);                               04150000
    ELSE;                                                               04160000
    IF TRANS                                                            04170000
       THEN LINE = TRANSLATE(LINE,UPPER,LOWER);                         04180000
    ELSE;                                                               04190000
    RETURN(RC);                                                         04200000
    %INCLUDE CLRSCN;                                                    04210000
    %INCLUDE SELECT;                                                    04220000
    %INCLUDE PICK;                                                      04230000
 END IO3270;                                                            04240000
