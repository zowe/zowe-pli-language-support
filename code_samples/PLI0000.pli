 /*************************************************************/
 /* SAMPLE OF DB2 PL/I SIMPLE PROGRAM WITH ONE SELECT QUERY   */
 /*                                                           */
 /* SYSPRINT DD STATEMENT IS NEEDED                           */
 /*************************************************************/

 PLI0000: PROCEDURE OPTIONS(MAIN) REORDER;

 /* STANDARD DB2 PROGRAM FOR FORMATTING SQL ERROR MESSAGES    */
 DCL DSNTIAR ENTRY OPTIONS (ASM,INTER,RETCODE);

 /* DB2 COMMUNICATION AREA (SQLCA) - FOR CHECKING SQL CODES   */
 EXEC SQL INCLUDE SQLCA;

 /* PROCEDURE FOR PRINTING OUT STANDARD SQL ERROR MESSAGES    */
 SQLMSGP: PROC;

 /* DECLARE DSNTIAR MESSAGE BUFFER AND ITS SIZES (10X132)     */
 DCL DATA_LEN FIXED BIN(31) INIT(132);
 DCL DATA_DIM FIXED BIN(31) INIT(10);
 DCL 1 ERROR_MESSAGE AUTOMATIC,
       3 ERROR_LEN FIXED BIN(15) UNAL INIT((DATA_LEN*DATA_DIM)),
       3 ERROR_TEXT(DATA_DIM) CHAR(DATA_LEN);

 /* CALL DSNTIAR TO FORMAT ANY MESSAGES */
 CALL DSNTIAR(SQLCA,ERROR_MESSAGE,DATA_LEN);

 /* PRINT OUT THE DSNTIAR BUFFER                              */
 DCL I FIXED BIN(31);
 DCL ONE FIXED BIN(31) INIT(1);
 DCL BLANK CHAR(1) INIT(' ');
 DO I = ONE TO ERROR_LEN
 /* PRINT NON BLANK LINES                                     */
 WHILE (ERROR_TEXT(I) ^= BLANK);
   PUT EDIT(ERROR_TEXT(I))(COL(1),A(DATA_LEN));
 END;

 END SQLMSGP;

 /* DECLARE HOST-VARIABLE                                     */
 DCL TIMESTAMP CHAR(26);

 /* EMBEDDED STATIC SQL SELECT QUERY WITH HOST-VARIABLE       */
 EXEC SQL SELECT CURRENT TIMESTAMP
          INTO :TIMESTAMP FROM SYSIBM.SYSDUMMY1;

 /* CHECK BY SQLCODE IF SQL QUERY RUN SUCCESSFUL OR NOT       */
 IF SQLCODE < 0 THEN
 DO;
    PUT LIST('ERROR MESSAGE WAS RECEIVED');
    PUT SKIP;

    CALL SQLMSGP;

    STOP;
 END;

 PUT LIST('TIMESTAMP = ',TIMESTAMP);
 PUT SKIP;

 CALL SQLMSGP;

 END PLI0000;